{"version":3,"sources":["lib/Model/Range.ts","lib/Model/CellMatrix.ts","lib/Functions/areLocationsEqual.ts","lib/Model/AbstractPointerEventsController.ts","lib/Functions/newLocation.ts","lib/Functions/selectRange.ts","lib/Model/Behavior.ts","lib/Functions/getCompatibleCellAndTemplate.ts","lib/Functions/tryAppendChange.ts","lib/Functions/focusLocation.ts","lib/Functions/scrollHelpers.ts","lib/Functions/operatingSystem.ts","lib/Functions/elementSizeHelpers.ts","lib/Functions/getLocationFromClient.ts","lib/Functions/handleContextMenu.ts","lib/Behaviors/CellSelectionBehavior.ts","lib/Functions/getActiveSelectedRange.ts","lib/Functions/emptyCell.ts","lib/Functions/scrollIntoView.ts","lib/Functions/focuses.ts","lib/Components/ResizeHint.tsx","lib/Behaviors/ResizeColumnBehavior.tsx","lib/Functions/componentDidUpdate.ts","lib/Functions/handleKeyDown.ts","lib/Functions/handleKeyDownOnCellTemplate.ts","lib/Functions/wipeSelectedRanges.ts","lib/Behaviors/ColumnSelectionBehavior.ts","lib/Behaviors/RowSelectionBehavior.ts","lib/Components/PartialArea.tsx","lib/Functions/isRangeIntersectsWith.ts","lib/Behaviors/FillHandleBehavior.tsx","lib/Behaviors/ColumnReorderBehavior.ts","lib/Behaviors/RowReorderBehavior.ts","lib/Functions/getDataToCopy.ts","lib/Functions/handleCopy.ts","lib/Functions/safari.ts","lib/Functions/tryAppendChangeHavingGroupId.ts","lib/Functions/pasteData.ts","lib/Behaviors/DefaultBehavior.ts","lib/Functions/keyCodes.ts","lib/Functions/handleDoubleClick.ts","lib/Functions/handleKeyUp.ts","lib/Functions/handlePaste.ts","lib/Functions/getCellProperty.ts","lib/CellTemplates/CheckboxCellTemplate.tsx","lib/CellTemplates/keyCodeCheckings.ts","lib/CellTemplates/timeUtils.ts","lib/CellTemplates/DateCellTemplate.tsx","lib/CellTemplates/getCharFromKeyCode.ts","lib/CellTemplates/EmailCellTemplate.tsx","lib/CellTemplates/ChevronCellTemplate.tsx","lib/CellTemplates/HeaderCellTemplate.tsx","lib/CellTemplates/NumberCellTemplate.tsx","lib/CellTemplates/TextCellTemplate.tsx","lib/CellTemplates/TimeCellTemplate.tsx","lib/CellTemplates/DropdownCellTemplate.tsx","lib/Functions/defaultCellTemplates.ts","lib/Model/State.ts","lib/Functions/internetExplorer.ts","lib/Functions/microsoftEdge.ts","lib/Model/CellMatrixBuilder.ts","lib/Functions/recalcVisibleRange.ts","lib/Functions/updateResponsiveSticky.ts","lib/Model/EventHandlers.ts","lib/Functions/cellEditorCalculator.ts","lib/Components/StateProvider.tsx","lib/Components/CellEditor.tsx","lib/Components/HiddenElement.tsx","lib/Components/ErrorBoundary.tsx","lib/Components/GridRenderer.tsx","lib/Functions/i18n.ts","lib/Components/LegacyBrowserGridRenderer.tsx","lib/Functions/isMobileDevice.ts","lib/Components/ResizeHandle.tsx","lib/Components/CellRenderer.tsx","lib/Functions/excludeObjectProperties.ts","lib/Components/CellFocus.tsx","lib/Components/RowRenderer.tsx","lib/Components/FillHandleRangeSelection.tsx","lib/Components/FillHandle.tsx","lib/Components/FillHandleRenderer.tsx","lib/Components/SelectedRanges.tsx","lib/Components/Pane.tsx","lib/Components/PanesRenderer.tsx","lib/Functions/paneRendererPredicates.ts","lib/Functions/firefox.ts","lib/Components/PaneShadow.tsx","lib/Functions/updateState.ts","lib/Functions/getDerivedStateFromProps.ts","lib/Functions/isSelectionKey.ts","lib/Functions/rangeSlicer.ts","lib/Functions/handleStateUpdate.ts","lib/Functions/isOnClickableArea.ts","lib/Model/PointerEventsController.ts","lib/Components/Line.tsx","lib/Components/Shadow.tsx","lib/Functions/copySelectedRangeToClipboard.ts","lib/Functions/getSelectedLocations.ts","lib/Components/ContextMenu.tsx","lib/Components/ReactGrid.tsx","test/flagCell/FlagCellTemplate.tsx","test/TestGrid.tsx","test/testEnvConfig.ts","index.tsx"],"names":["Range","rows","columns","_classCallCheck","width","height","first","last","this","row","column","length","reduce","a","b","_createClass","key","value","location","idx","range","direction","firstRow","firstColumn","lastRow","lastColumn","slice","CellMatrix","ranges","props","scrollableRange","rowIndexLookup","columnIndexLookup","spanCellLookup","rangesToRender","start","end","cols","Math","min","max","rowIdx","columnIdx","rowId","columnId","validateLocation","error","RangeError","concat","_this$columnIndexLook","_this$rowIndexLookup$","colIdx","getLocation","getRange","cells","translateLocationIdxToLookupKey","idy","areLocationsEqual","location1","location2","DEFAULT_ROW_HEIGHT","DEFAULT_COLUMN_WIDTH","MIN_COLUMN_WIDTH","AbstractPointerEventsController","updateState","eventTimestamps","eventLocations","undefined","currentIndex","pointerDownLocation","handlePointerDown","event","currentLocation","state","previousLocation","Date","valueOf","isFirstRowOrColumn","pointerType","currentBehavior","currentTimestamp","secondLastTimestamp","isReadyToHandleEvent","button","target","className","newLocation","resetSelection","_objectSpread","activeSelectedRangeIdx","selectedRanges","cellMatrix","selectedIndexes","selectedIds","selectionMode","selectRange","incremental","updateActiveSelectedRange","Object","assign","_defineProperty","selectMultipleColumns","firstCol","lastCol","map","col","selectMultipleRows","Behavior","autoScrollDirection","pane","getCompatibleCellAndTemplate","rawCell","getCell","TypeError","type","Error","cellTemplate","cellTemplates","cell","getCompatibleCell","e","message","tryAppendChange","_getCompatibleCellAnd","previousCell","JSON","stringify","update","newCell","nonEditable","queuedCellChanges","push","focusLocation","applyResetSelection","arguments","focusedLocation","currentlyEditedCell","_state$props","onFocusLocationChanged","onFocusLocationChanging","cellLocation","isChangeAllowedByUser","isCellTemplateFocusable","isFocusable","forcedLocation","getLocationById","isLocationAcceptable","validatedFocusLocation","contextMenuPosition","top","left","getScrollOfScrollableElement","element","_scrollLeft","_scrollTop","scrollLeft","getTopScrollableElement","scrollX","clientLeft","scrollTop","scrollY","clientTop","window","isMacOs","navigator","appVersion","indexOf","isIOS","test","platform","isIpadOS","maxTouchPoints","getSizeOfElement","HTMLElement","clientWidth","innerWidth","document","documentElement","clientHeight","innerHeight","getReactGridOffsets","_getScrollOfScrollabl","scrollableElement","reactGridElement","_state$reactGridEleme","getBoundingClientRect","_getBoundingClientRec","getVisibleSizeOfReactGrid","_getScrollOfScrollabl2","_getSizeOfElement","widthOfScrollableElement","heightOfScrollableElement","_getReactGridOffsets","scrollBottom","reactGridBottom","visibleTop","visibleBottom","scrollRight","reactGridRight","visibleLeft","visibleRight","visibleOffsetRight","visibleOffsetBottom","getStickyOffset","scroll","offset","getLocationFromClient","clientX","clientY","favorScrollableContent","viewportX","viewportY","_getRow","topStickyOffset","stickyTopRange","find","bottom","cellY","getStickyTopRow","maxScrollTop","bottomStickyOffset","stickyBottomRange","getStickyBottomRow","sticky","scrollableContentY","getScrollableContentRow","getRowOnNonSticky","getRow","_getColumn","leftStickyOffset","stickyLeftRange","right","cellX","getLeftStickyColumn","maxScrollLeft","rightStickyOffset","stickyRightRange","getRightStickyColumn","scrollableContentX","getScrollableContentColumn","getColumnOnNonSticky","getColumn","handleContextMenu","preventDefault","clickX","clickY","contains","CellSelectionBehavior","_Behavior","_inherits","_super","_createSuper","apply","enableRangeSelection","shiftKey","isSelectionKey","pointedRangeIdx","findIndex","pointedRange","isOnClickableArea","getActiveSelectedRange","emptyCell","text","NaN","scrollIntoView","scrollTo","getVisibleScrollAreaHeight","wholeStickyHeight","isFocusLocationOnTopSticky","fc","focusCell","moveFocusHome","nextFocusableLocation","getNextFocusableLocation","nextLocation","getFocusLocationToRight","moveFocusEnd","getFocusLocationToLeft","withMoveFocusEnd","moveFocusLeft","withMoveFocusLeft","moveFocusRight","withMoveFocusRight","moveFocusUp","getFocusLocationToUp","withMoveFocusUp","moveFocusDown","getFocusLocationToDown","withMoveFocusDown","moveFocusPage","rowCalculator","withMoveFocusPage","moveFocusPageUp","_state$cellMatrix$ran2","visibleScrollAreaHeight","getVisibleHeight","hasTopSticky","isOnTopSticky","hasScrollableRange","isOnScrollableRange","isOnFirstElementOnScrollableRange","hasBottomSticky","isOnBottomSticky","isOnFirstRowOnBottomSticky","rowsOnScreen","filter","moveFocusPageDown","_state$cellMatrix$ran","isOnLastRowOnTopSticky","isOnLastRowOfScrollableRange","wasChangePrevented","stickyHeight","ResizeHint","_ref","linePosition","_jsx","_Fragment","children","style","_jsxs","whiteSpace","floor","ResizeColumnBehavior","_this","_len","args","Array","_key","call","resizedColumn","initialLocation","isInScrollableRange","_this2","some","c","getLinePositionOffset","lineOrientation","newWidth","onColumnResized","newColWidth","_this3","scrollCalculator","getScrollTop","getScrollLeft","dontChange","additionalPixelOnScrollingOnBody","isLocationOnScrollableBody","isFocusLocationOnBottomSticky","isBottomCellAllVisible","getCalculatedScrollTopValueToBottom","isTopCellAllVisible","getCalculatedScrollTopValueToTop","visibleScrollAreaWidth","wholeStickyWidth","getVisibleScrollAreaWidth","isFocusLocationOnLeftSticky","isFocusLocationOnRightSticky","isRightCellAllVisible","getCalculatedScrollLeftValueToRight","isLeftCellAllVisible","getCalculatedScrollLeftValueToLeft","handleKeyDown","newState","_state$hiddenFocusEle2","_state$hiddenFocusEle3","_state$hiddenFocusEle4","_state$hiddenFocusEle5","_state$hiddenFocusEle6","_state$hiddenFocusEle7","_state$hiddenFocusEle8","_state$hiddenFocusEle9","_state$hiddenFocusEle10","_state$hiddenFocusEle11","_state$hiddenFocusEle12","_state$hiddenFocusEle13","_state$hiddenFocusEle14","asr","ctrlKey","keyCode","keyCodes","SPACE","resizeSelection","isSingleCellSelected","_cellTemplate$handleK","altKey","enableEditMode","handleKeyDownOnCellTemplate","ENTER","_state$hiddenFocusEle","hiddenFocusElement","focus","moveFocusInsideSelectedRange","HOME","END","cm","KEY_A","UP_ARROW","resizeSelectionUp","DOWN_ARROW","resizeSelectionDown","LEFT_ARROW","resizeSelectionLeft","RIGHT_ARROW","resizeSelectionRight","TAB","PAGE_UP","isFirstRowOnBottomSticky","isLastRowOnBottomSticky","isOnLastRowOnBottomSticky","isOnFirstRowOnScrollableRange","isOnLastRowOnScrollableRange","resizeSelectionPageUp","PAGE_DOWN","isLastRowOnTopSticky","isFirstRowOnTopSticky","isOnFirstRowOnTopSticky","resizeSelectionPageDown","DELETE","BACKSPACE","forEach","wipeSelectedRanges","ESCAPE","handleKeyDownInternal","stopPropagation","selectedRangeIdx","colCount","rowCount","delta","currentPosInRange","newPosInRange","onShiftAndTabKeys","onTabKey","nextSelectionRangeIdx","nextSelection","focusedCellColIdxInRange","focusedCellRowIdxInRange","focusedCellColIdx","focusedCellRowIdx","firstColIdx","lastColIdx","firstRowIdx","lastRowIdx","scrollDirection","scrollToRowIdx","scrollToColIdx","_scrollCalculator","ColumnSelectionBehavior","initialColumn","id","updatedIndexes","updatedIds","unSelectOneColumn","selectOneColumn","RowSelectionBehavior","initialRow","unSelectOneRow","selectOneRow","PartialArea","hasTopBorder","hasBottomBorder","hasRightBorder","hasLeftBorder","borderTop","borderBottom","borderRight","borderLeft","isRangeIntersects","range1","range2","FillHandleBehavior","fillDirection","fillRange","selectedRange","getFillDirection","getFillRange","activeSelectedRange","isKeyPressed","validateRange","fillCellsWithPredictedValues","selectedCells","cellsToFill","numbers","parameters","findRegressionFunction","from","_","index","areParametersNaNs","isNaN","i","x","calculateXForRegressionFunction","selectedCell","toString","groupId","fillVertically","reverse","fillColumn","fillHorizontally","fillRow","_toConsumableArray","y","round","valuesX","valuesY","sumX","sumArray","sumY","sumXY","multipleArrays","sumPowX","powerArray","n","fround","pow","arr","second","result","stopCondition","power","backgroundColor","pointerLocation","differences","prev","current","values","_this$fillRange","tryAppendChangeHavingGroupId","_this$fillRange2","ColumnReorderBehavior","initialColumnIdx","lastPossibleDropLocation","pointerOffset","selectedIdxs","sort","leftColumnsWidth","sum","shadowSize","shadowPosition","getShadowPosition","_state$visibleRange","dropLocation","getLastPossibleDropLocation","drawRight","visibleRange","position","columnIds","canReorderColumns","_state$props2","onColumnsReordered","_state$props3","isBefore","shadowCursor","RowReorderBehavior","initialRowIdx","indexes","upperRowsHeight","r","drawDown","canReorderRows","_state$props4","onRowsReordered","getDataToCopy","removeValues","_createHTMLElements","createHTMLElements","div","table","copyElements","setStyles","prevId","tableRow","insertRow","tableCell","insertCell","validatedText","textContent","setAttribute","border","clearCell","createElement","appendChild","handleCopy","_getDataToCopy","copyDataCommands","copyRange","userAgent","clipboardData","setData","innerHTML","body","execCommand","removeChild","preventScroll","console","warn","pasteData","lastLocation","ri","ci","DefaultBehavior","getNewBehavior","_state$reactGridEleme2","resizable","querySelector","enableColumnSelection","includes","reorderable","enableRowSelection","enableFillHandle","handleDoubleClick","handleKeyUp","_document$body$firstE","_document$body$firstE2","pastedRows","htmlData","getData","DOMParser","parseFromString","firstElementChild","getAttribute","tableRows","rawData","data","parse","parseFloat","split","line","t","handlePaste","getCellProperty","uncertainCell","propName","expectedType","prop","CheckboxCellTemplate","checked","checkedText","uncheckedText","ctrl","shift","alt","toggleCheckboxCell","cellToMerge","isInEditMode","onCellChanged","onChange","isAlphaNumericKey","KEY_0","KEY_Z","isNumpadNumericKey","MULTIPLY","DIVIDE","SEMICOLON","SINGLE_QUOTE","inNumericKey","KEY_9","NUMPAD_0","NUMPAD_9","isAllowedOnNumberTypingKey","COMMA","PERIOD","DECIMAL","SUBTRACT","FIREFOX_DASH","isNavigationKey","getTimestamp","time","defaultDate","getDefaultDate","textDate","getFormattedTimeUnit","timeUnit","padStart","DateCellTemplate","date","dateFormat","format","Intl","DateTimeFormat","language","getTime","Number","POINTER","year","getFullYear","month","getMonth","day","getDate","ref","input","defaultValue","timestamp","currentTarget","onBlur","onKeyDown","onCopy","onCut","onPaste","onPointerDown","characterMapShift","characterMap","getCharFromKeyCode","isShiftKey","EmailCellTemplate","char","toLowerCase","validator","textToDisplay","errorMessage","renderer","_view","_view$event","view","ChevronCellTemplate","isExpanded","_unused","indent","_unused2","hasChildren","_unused3","cellCopy","_cell$className","_cell$indent","paddingLeft","setSelectionRange","HeaderCellTemplate","getStyle","background","NumberCellTemplate","getTextFromCharCode","cellText","charCodeAt","DASH","numberFormat","NumberFormat","displayValue","nanToZero","hideZero","String","fromCharCode","_cell$validator","_cell$validator2","isValid","_cell$validator3","_cell$validator4","locale","resolvedOptions","languages","useGrouping","maximumFractionDigits","inputMode","replace","TextCellTemplate","placeholder","TimeCellTemplate","timeFormat","dayInMillis","hours","getHours","minutes","getMinutes","DropdownCellTemplate","selectedValue","inputValue","isOpen","isDisabled","_unused4","DropdownInput","selectRef","React","_React$useState","_React$useState2","_slicedToArray","setInputValue","Select","defaultInputValue","onInputChange","isSearchable","menuIsOpen","onMenuClose","onMenuOpen","blurInputOnSelect","val","options","components","Option","CustomOption","Menu","CustomMenu","styles","container","provided","control","borderColor","minHeight","boxShadow","indicatorsContainer","paddingTop","dropdownIndicator","padding","singleValue","color","indicatorSeparator","marginTop","marginBottom","valueContainer","_ref2","innerProps","label","isSelected","isFocused","_ref3","defaultCellTemplates","number","header","checkbox","email","chevron","dropdown","defaultStateFields","legacyBrowserMode","highlightLocations","topScrollBoudary","bottomScrollBoudary","leftScrollBoudary","rightScrollBoudary","enableGroupIdRender","leftStickyColumns","topStickyRows","rightStickyColumns","bottomStickyRows","disableVirtualScrolling","CellMatrixBuilder","reset","edges","isArray","getTop","getLeft","rangesToExclude","rowspan","colspan","getRangesToRender","keys","flatMap","getStickyRightFirstIdx","getStickyBottomFirstIdx","getScrollableRange","topRowsSticky","bottomRowsSticky","leftColumnsSticky","rightColumnsSticky","stickyBottomRows","stickyTopRows","stickyColumnsLeft","stickyColumnsRight","stickyRightColumns","stickyLeftColumns","VS_PAGE_HEIGHT","VS_PAGE_WIDTH","recalcVisibleRange","_state$cellMatrix$scr","_getVisibleScrollable","heights","widths","_getVisibleSizeOfReac","getVisibleScrollableSize","visibleColumns","scrollableWidth","firstIndex","colBinarySearch","lastIndex","getVisibleColumns","visibleRows","scrollableHeight","rowBinarySearch","getVisibleRows","mid","updateResponsiveSticky","_props$horizontalStic","horizontalStickyBreakpoint","_props$verticalSticky","verticalStickyBreakpoint","predictedLeftRangeWidth","acc","predictedRightRangeWidth","shouldDisableStickyHorizontally","predictedTopRangeHeight","predictedBottomRangeHeight","shouldDisableStickyVertically","EventHandlers","pointerEventsController","pointerDownHandler","keyDownHandler","keyUpHandler","copyHandler","pasteHandler","cutHandler","handleCut","blurHandler","_event$target","startsWith","windowResizeHandler","reactgridRefHandler","assignElementsRefs","hiddenElementRefHandler","initialFocusLocation","pasteCaptureHandler","_parsedData$body$firs","parsedData","bubbles","scrollHandlerInternal","visibleRangeCalculator","updateOnScrollChange","scrollHandler","includeHidden","getComputedStyle","excludeStaticParent","overflowRegex","parent","parentElement","overflow","overflowY","overflowX","getScrollableParent","PAGE_UPDATE_OFFSET","calculatedXAxisOffset","getRightStickyOffset","getStickyLeftRangeWidth","getLeftStickyOffset","calculatedYAxisOffset","getBottomStickyOffset","getStickyTopRangeWidth","getTopStickyOffset","calculateCellEditorPosition","positionState","_getScrollOfScrollabl3","_getReactGridOffsets3","offsetLeft","offsetTop","StateContext","createContext","StateProvider","Provider","useReactGridState","useContext","CellEditorRenderer","renders","_React$useReducer","_React$useReducer2","dispatch","CellEditor","cellType","render","commit","s","_cellMatrix$ranges$st","_cellMatrix$ranges$st2","HiddenElement","relatedTarget","ErrorBoundary","_Component","hasError","errorInfo","setState","_this$state","stack","componentStack","Component","GridRenderer","eventHandlers","_useReactGridState","sharedStyles","enableFullWidthHeader","onKeyUp","onPasteCapture","defultTranslations","legacyBrowserHeader","legacyBrowserText","copyLabel","cutLabel","pasteLabel","appleMobileDeviceContextMenuPasteAlert","otherBrowsersContextMenuPasteAlert","actionNotSupported","i18n","labels","LegacyBrowserGridRenderer","isMobileDevice","orientation","ResizeHandle","getBorderProperties","getPropertyOnBorderFn","CellRenderer","borders","customClass","getClassName","currentlyEditedCellRef","storePropertyAndDefaultValue","property","defaultProp","borderEdge","_cell$style2","_cell$style2$border","_cell$style2$border$b","_cell$style","_cell$style$border","_cell$style$border$bo","_cell$style$border$bo2","_cell$style$border$bo3","storeBorderAndCell","bordersWidth","bordersStyle","bordersProps","borderLeftWidth","borderLeftStyle","borderRightWidth","borderRightStyle","borderTopWidth","borderTopStyle","borderBottomWidth","borderBottomStyle","isMobile","isFirstRowOrColumnWithSelection","_objectWithoutProperties","_excluded","noBorder","touchAction","groupIdClassName","nonEditableClassName","cellClassNames","classNames","cellToRender","process","CellHighlight","FeaturedCell","CellFocus","shouldMemoRowRenderer","prevProps","nextProps","prevCols","nextCols","forceUpdate","MappedColumns","cellRenderer","RowRenderer","displayName","FillHandleRangeSelection","calculatedRange","renderPanePart","FillHandle","targetRef","useRef","_useState","useState","_useState2","dimensions","setDimensions","useLayoutEffect","offsetWidth","offsetHeight","FillHandleRenderer","SelectedRanges","shouldMemoPaneGridContent","prevState","nextState","PaneGridContent","renderHighlights","highlight","Pane","renderChildren","PaneContentWrapper","PaneContent","PanesRenderer","renderTopSticky","shouldRenderTopSticky","renderMiddleRange","shouldRenderMiddleRange","renderLeftSticky","shouldRenderLeftSticky","renderCenterRange","shouldRenderCenterRange","renderBottomSticky","shouldRenderBottomSticky","renderRightSticky","shouldRenderRightSticky","visibleScrollableRange","marginLeft","marginRight","marginTopOnScrollable","marginLeftOnScrollable","marginBottomOnScrollable","marginRightOnScrollable","order","columnsSlicer","PaneShadow","renderCondition","zIndex","rowsSlicer","isBrowserFirefox","groupedRows","array","grouped","sortIndex","groupedColumns","updateSelections","updatedRows","_state$focusedLocatio","updateSelectedRows","updatedColumns","_state$focusedLocatio2","updateSelectedColumns","appendStateFields","areFocusesDiff","_props$focusLocation","_props$focusLocation2","stateDeriver","fn","dataHasChanged","highlightsHasChanged","highlights","updateStateProps","updateCellMatrix","builder","setProps","fillRowsAndCols","setRangesToRenderLookup","fillSticky","fillScrollableRange","setEdgeLocations","getCellMatrix","updateFocusedLocation","updateVisibleRange","appendCellTemplates","customCellTemplates","appendGroupIdRender","appendHighlights","_props$highlights","_props$highlights2","setInitialFocusLocation","locationToFocus","wasFocused","isLocationToFocusCorrect","setFocusLocation","metaKey","rangeSlicer","rangeToSlice","handleStateUpdate","changes","onCellsChanged","pop","rightPaneWidth","PointerEventsController","_AbstractPointerEvent","isFromLeftToRightScroll","isFromRightToLeftScroll","isInLeftSticky","isInRightSticky","isFromTopToBottomScroll","isInTopSticky","isFromBottomToTopScroll","isInBottomSticky","onClickableAreaOnPro","onContextMenu","addEventListener","handlePointerMove","handlePointerUp","handlePointerDownInternal","handleHideContextMenu","removeEventListener","MouseEvent","isContainElement","stickyLocation","handlePointerEnter","shouldHandleCellSelectionOnMobile","shouldHandleDoubleClick","Line","isVertical","lineStyles","Shadow","cursor","copySelectedRangeToClipboard","getSelectedLocations","ContextMenu","contextMenuOptions","_i18n","handler","handleContextMenuCopy","isAppleMobileDevice","_i18n2","alert","_navigator$clipboard","clipboard","readText","then","proState","applyMetaData","clipboardRows","trim","replaceAll","catch","handleContextMenuPaste","customContextMenuOptions","menuOptions","_state$props$onContex","_state$props$onContex2","onClick","ReactGrid","_React$Component","stateUpdater","modifier","cellMatrixBuilder","_this$state$scrollabl","shouldChangeScroll","wasCellEditorOpened","componentDidUpdate","_this$state$scrollabl2","stateDeriverWithProps","hasChanged","getDerivedStateFromProps","FlagCellTemplate","flagISO","numberValidator","textValidator","emailValidator","myNumberFormat","minimumFractionDigits","currency","myDateFormat","weekday","myTimeFormat","hour","minute","Logo","display","TestGridOptionsSelect","pathname","eventValue","ExtTestGrid","config","withDivComponentStyles","withDiv","component","enableSticky","enableColumnAndRowSelection","enableFrozenFocus","_props$firstRowType","firstRowType","_props$firstColType","firstColType","_props$cellType","setRender","_React$useState3","fill","cellWidth","_React$useState4","setColumns","_React$useState5","cellHeight","_config$spannedCells","_config$headerCells","spannedCells","sC","headerCells","now","parentId","setHours","random","currentValue","_React$useState6","setRows","reorderArray","idxs","to","movedElements","leftSide","rightSide","pinToBody","fillViewport","rgViewportHeight","rgViewportWidth","margin","flexRow","flexDirection","additionalContent","prevRows","change","changeRowIdx","el","changeColumnIdx","selectedColIds","prevColumns","setColumnWidth","columnIndex","stickyLeft","stickyRight","stickyTop","stickyBottom","targetColumnId","dropPosition","rowIds","columnIdxs","targetRowId","selectedRowIds","minCellWidth","fillHandleWidth","lineWidth","enablePinnedToBodyConfig","disabledInitialFocusLocationConfig","enableAdditionalContentConfig","enableAdditionalContentWithFlexRowConfig","enableSymetric","enableTopLeftResponsiveSticky","enableBottomRightResponsiveSticky","enableTopLeftResponsiveStickyPinnedToBody","enableBottomRightResponsiveStickyPinnedToBody","enableSpannedCells","search","getElementById","createRoot"],"mappings":"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CxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,GACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,IAAM,IACxBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,IACzBA,GAAkB,KAAO,GACzBA,GAAkB,KAAO,GACzBA,GAAkB,KAAO,GACzBA,GAAkB,KAAO,GACzBA,GAAkB,KAAO,GACzBA,GAAkB,K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","file":"static/js/main.0151b601.chunk.js","sourcesContent":["import { GridColumn, GridRow, Location } from './InternalModel';\r\n\r\nexport type SliceDirection = 'columns' | 'rows' | 'both';\r\n\r\nexport class Range {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly first: Location;\r\n    readonly last: Location;\r\n\r\n    constructor(public readonly rows: GridRow[], public readonly columns: GridColumn[]) {\r\n        this.first = { row: this.rows[0], column: this.columns[0] };\r\n        this.last = { row: this.rows[this.rows.length - 1], column: this.columns[this.columns.length - 1] };\r\n        this.height = this.rows.reduce((a, b) => a + b.height, 0);\r\n        this.width = this.columns.reduce((a, b) => a + b.width, 0);\r\n    }\r\n\r\n    contains(location: Location): boolean {\r\n        return location.column.idx >= this.first.column.idx &&\r\n            location.column.idx <= this.last.column.idx &&\r\n            location.row.idx >= this.first.row.idx &&\r\n            location.row.idx <= this.last.row.idx;\r\n    }\r\n\r\n    slice(range: Range, direction: SliceDirection): Range {\r\n        const firstRow = direction === 'rows' && range ? range.first.row : this.first.row;\r\n        const firstColumn = direction === 'columns' && range ? range.first.column : this.first.column;\r\n        const lastRow = direction === 'rows' && range ? range.last.row : this.last.row;\r\n        const lastColumn = direction === 'columns' && range ? range.last.column : this.last.column;\r\n        const slicedRows = this.rows.slice(firstRow.idx - this.first.row.idx, lastRow.idx - this.first.row.idx + 1);\r\n        const slicedColumns = this.columns.slice(firstColumn.idx - this.first.column.idx, lastColumn.idx - this.first.column.idx + 1);\r\n        return new Range(slicedRows, slicedColumns);\r\n    }\r\n}\r\n","import { GridColumn, GridRow, Location } from './InternalModel';\r\nimport { Cell, Column, Id, Row } from './PublicModel';\r\nimport { Range } from './Range';\r\n\r\n\r\nexport interface IndexLookup {\r\n    [id: string]: number;\r\n}\r\n\r\n// INTERNAL\r\nexport interface CellMatrixProps {\r\n    columns: Column[];\r\n    rows: Row<Cell>[];\r\n    stickyTopRows?: number;\r\n    stickyLeftColumns?: number;\r\n    stickyRightColumns?: number;\r\n    stickyBottomRows?: number;\r\n}\r\n\r\nexport interface StickyRanges {\r\n    stickyTopRange: Range;\r\n    stickyLeftRange: Range;\r\n    stickyRightRange: Range;\r\n    stickyBottomRange: Range;\r\n}\r\n\r\nexport interface SpanLookup {\r\n    range?: Range;\r\n}\r\n\r\n// INTERNAL\r\nexport class CellMatrix {\r\n\r\n    static DEFAULT_ROW_HEIGHT = 25;\r\n    static DEFAULT_COLUMN_WIDTH = 150;\r\n    static MIN_COLUMN_WIDTH = 40;\r\n\r\n    props!: CellMatrixProps;\r\n    scrollableRange!: Range;\r\n    width = 0;\r\n    height = 0;\r\n\r\n    columns!: GridColumn[];\r\n    rows!: GridRow[];\r\n    first!: Location;\r\n    last!: Location;\r\n\r\n    rowIndexLookup: IndexLookup = {};\r\n    columnIndexLookup: IndexLookup = {};\r\n\r\n    spanCellLookup: { [location: string]: SpanLookup } = {};\r\n\r\n    rangesToRender: { [location: string]: SpanLookup } = {};\r\n\r\n    constructor(public ranges: StickyRanges) { }\r\n\r\n    getRange(start: Location, end: Location): Range {\r\n        const cols = this.columns.slice(\r\n            Math.min(start.column.idx, end.column.idx), \r\n            Math.max(start.column.idx, end.column.idx) + 1\r\n        );\r\n        const rows = this.rows.slice(\r\n            Math.min(start.row.idx, end.row.idx),\r\n            Math.max(start.row.idx, end.row.idx) + 1\r\n        );\r\n\r\n        return new Range(rows, cols);\r\n    }\r\n\r\n    getLocation(rowIdx: number, columnIdx: number): Location {\r\n        return { row: this.rows[rowIdx], column: this.columns[columnIdx] };\r\n    }\r\n\r\n    getLocationById(rowId: Id, columnId: Id): Location {\r\n        try {\r\n            const row = this.rows[this.rowIndexLookup[rowId]];\r\n            const column = this.columns[this.columnIndexLookup[columnId]];\r\n            return this.validateLocation({ row, column });\r\n        } catch (error) {\r\n            throw new RangeError(`column: '${columnId}', row: '${rowId}'`)\r\n        }\r\n    }\r\n\r\n    validateLocation(location: Location): Location {\r\n        const colIdx = this.columnIndexLookup[location.column.columnId] ?? Math.min(location.column.idx, this.last.column.idx);\r\n        const rowIdx = this.rowIndexLookup[location.row.rowId] ?? Math.min(location.row.idx, this.last.row.idx);\r\n        return this.getLocation(rowIdx, colIdx);\r\n    }\r\n\r\n    validateRange(range: Range): Range {\r\n        return this.getRange(this.validateLocation(range.first), this.validateLocation(range.last));\r\n    }\r\n\r\n    getCell(location: Location): Cell {\r\n        return this.rows[location.row.idx].cells[location.column.idx];\r\n    }\r\n\r\n}\r\n\r\nexport function translateLocationIdxToLookupKey(idx: number, idy: number): string {\r\n    return `${idx}, ${idy}`;\r\n}\r\n","import { Location } from '../Model/InternalModel';\r\n\r\nexport function areLocationsEqual(location1: Location, location2?: Location): boolean {\r\n    return location1.column.columnId === location2?.column.columnId\r\n        && location1.row.rowId === location2?.row.rowId;\r\n}\r\n","import { areLocationsEqual } from '../Functions/areLocationsEqual';\r\nimport { PointerLocation, Location } from './InternalModel';\r\nimport { State, StateUpdater } from './State';\r\nimport { PointerEvent } from './domEventsTypes';\r\n\r\n\r\nexport abstract class AbstractPointerEventsController {\r\n\r\n    constructor(readonly updateState: StateUpdater) { }\r\n\r\n    eventTimestamps: [number, number] = [0, 0];\r\n    eventLocations: Array<Location | undefined> = [undefined, undefined];\r\n    currentIndex = 0;\r\n    pointerDownLocation?: Location;\r\n\r\n    abstract handlePointerDown: (event: PointerEvent, state: State) => State;\r\n\r\n    protected handlePointerDownInternal(event: PointerEvent, currentLocation: PointerLocation, state: State): State {\r\n        this.pointerDownLocation = currentLocation;\r\n        const previousLocation = this.eventLocations[this.currentIndex];\r\n        this.currentIndex = 1 - this.currentIndex;\r\n        this.eventTimestamps[this.currentIndex] = new Date().valueOf();\r\n        this.eventLocations[this.currentIndex] = currentLocation;\r\n        const isFirstRowOrColumn = currentLocation.row.idx === 0 || currentLocation.column.idx === 0;\r\n        if (event.pointerType === 'mouse' || isFirstRowOrColumn || areLocationsEqual(currentLocation, previousLocation)) {\r\n            state = state.currentBehavior.handlePointerDown(event, currentLocation, state);\r\n        }\r\n        return state;\r\n    }\r\n\r\n    protected shouldHandleDoubleClick(currentLocation: PointerLocation, currentTimestamp: number, secondLastTimestamp: number): boolean {\r\n        return currentTimestamp - secondLastTimestamp < 500\r\n            && areLocationsEqual(currentLocation, this.eventLocations[0])\r\n            && areLocationsEqual(currentLocation, this.eventLocations[1]);\r\n    }\r\n\r\n    protected shouldHandleCellSelectionOnMobile(event: PointerEvent, currentLocation: PointerLocation, currentTimestamp: number): boolean {\r\n        // prevent from cell selection on first click on mobile devices\r\n        return event.pointerType !== 'mouse' &&\r\n            areLocationsEqual(currentLocation, this.pointerDownLocation) &&\r\n            event.pointerType !== undefined && // !== undefined only for cypress tests\r\n            currentTimestamp - this.eventTimestamps[this.currentIndex] < 500 &&\r\n            (currentLocation.row.idx > 0 && currentLocation.column.idx > 0)\r\n    }\r\n\r\n}\r\n\r\n// TODO think about create as saparate function\r\nexport function isReadyToHandleEvent(event: PointerEvent): boolean {\r\n    if ((event.button !== 0 && event.button !== undefined) ||\r\n        ((event.target as HTMLDivElement).className === 'reactgrid-content' && event.pointerType !== undefined)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n// TODO think about create as saparate function\r\nexport function isOnClickableArea(event: PointerEvent, state: State): boolean {\r\n    if (!state.reactGridElement) {\r\n        return false;\r\n    }\r\n    const { left } = state.reactGridElement.getBoundingClientRect();\r\n    const viewportX = event.clientX - left;\r\n    if (viewportX > state.cellMatrix.width) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import { Location, GridColumn, GridRow } from \"../../core\";\r\n\r\n// just a helper, much quicker than newLocation()!\r\nexport const newLocation = (row: GridRow, column: GridColumn): Location => ({\r\n  row,\r\n  column,\r\n});\r\n","import { Location, GridColumn, Range, GridRow, Id } from \"../../core\";\r\nimport { State } from \"../Model/State\";\r\nimport { newLocation } from \"./newLocation\";\r\n\r\nexport function resetSelection(state: State, location: Location): State {\r\n  return {\r\n    ...state,\r\n    activeSelectedRangeIdx: 0,\r\n    selectedRanges: [state.cellMatrix.getRange(location, location)],\r\n    selectedIndexes: [],\r\n    selectedIds: [],\r\n    selectionMode: \"range\",\r\n  };\r\n}\r\n\r\nexport function selectRange(\r\n  state: State,\r\n  range: Range,\r\n  incremental: boolean\r\n): State {\r\n  return {\r\n    ...state,\r\n    selectionMode: \"range\",\r\n    selectedRanges: (incremental && state.selectionMode === \"range\"\r\n      ? state.selectedRanges\r\n      : []\r\n    ).concat([range]),\r\n    selectedIndexes: [],\r\n    selectedIds: [],\r\n    activeSelectedRangeIdx:\r\n      incremental && state.selectionMode === \"range\"\r\n        ? state.selectedRanges.length\r\n        : 0,\r\n  };\r\n}\r\n\r\nexport function updateActiveSelectedRange(\r\n  state: State,\r\n  range: Range\r\n): State {\r\n  return {\r\n    ...state,\r\n    selectionMode: \"range\",\r\n    // replace active selected range in selectedRanges\r\n    selectedRanges: Object.assign([], state.selectedRanges, {\r\n      [state.activeSelectedRangeIdx]: range,\r\n    }),\r\n    selectedIndexes: [],\r\n    selectedIds: [],\r\n  };\r\n}\r\n\r\nexport function selectOneColumn(\r\n  state: State,\r\n  col: GridColumn,\r\n  incremental: boolean\r\n): State {\r\n  return {\r\n    ...state,\r\n    selectionMode: \"column\",\r\n    selectedIndexes: (incremental && state.selectionMode === \"column\"\r\n      ? state.selectedIndexes\r\n      : []\r\n    ).concat(col.idx),\r\n    selectedIds: (incremental && state.selectionMode === \"column\"\r\n      ? state.selectedIds\r\n      : []\r\n    ).concat(col.columnId),\r\n  };\r\n}\r\n\r\nexport function unSelectOneColumn(state: State, col: GridColumn): State {\r\n  const updatedIndexes = state.selectedIndexes.filter(\r\n    (idx: number) => idx !== col.idx\r\n  );\r\n  const updatedIds = state.selectedIds.filter((id: Id) => id !== col.columnId);\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"column\",\r\n    selectedIndexes: updatedIndexes,\r\n    selectedIds: updatedIds,\r\n  };\r\n}\r\n\r\nexport function selectMultipleColumns(\r\n  state: State,\r\n  firstCol: GridColumn,\r\n  lastCol: GridColumn,\r\n  incremental?: boolean\r\n): State {\r\n  const firstRow = state.cellMatrix.first.row;\r\n  const lastRow = state.cellMatrix.last.row;\r\n  const range = state.cellMatrix.getRange(\r\n    newLocation(firstRow, firstCol),\r\n    newLocation(lastRow, lastCol)\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"column\",\r\n    selectedIndexes: incremental\r\n      ? state.selectedIndexes.concat(range.columns.map((col) => col.idx))\r\n      : range.columns.map((col) => col.idx),\r\n    selectedIds: incremental\r\n      ? state.selectedIds.concat(range.columns.map((col) => col.columnId))\r\n      : range.columns.map((col) => col.columnId),\r\n  };\r\n}\r\n\r\nexport function selectOneRow(\r\n  state: State,\r\n  row: GridRow,\r\n  incremental: boolean\r\n): State {\r\n  return {\r\n    ...state,\r\n    selectionMode: \"row\",\r\n    selectedIndexes: (incremental && state.selectionMode === \"row\"\r\n      ? state.selectedIndexes\r\n      : []\r\n    ).concat(row.idx),\r\n    selectedIds: (incremental && state.selectionMode === \"row\"\r\n      ? state.selectedIds\r\n      : []\r\n    ).concat(row.rowId),\r\n  };\r\n}\r\n\r\nexport function unSelectOneRow(state: State, row: GridRow): State {\r\n  const updatedIndexes = state.selectedIndexes.filter(\r\n    (idx: number) => idx !== row.idx\r\n  );\r\n  const updatedIds = state.selectedIds.filter((id: Id) => id !== row.rowId);\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"row\",\r\n    selectedIndexes: updatedIndexes,\r\n    selectedIds: updatedIds,\r\n  };\r\n}\r\n\r\nexport function selectMultipleRows(\r\n  state: State,\r\n  firstRow: GridRow,\r\n  lastRow: GridRow,\r\n  incremental?: boolean\r\n): State {\r\n  const firstCol = state.cellMatrix.first.column;\r\n  const lastCol = state.cellMatrix.last.column;\r\n  const range = state.cellMatrix.getRange(\r\n    newLocation(firstRow, firstCol),\r\n    newLocation(lastRow, lastCol)\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"row\",\r\n    selectedIndexes: incremental\r\n      ? state.selectedIndexes.concat(range.rows.map((row) => row.idx))\r\n      : range.rows.map((row) => row.idx),\r\n    selectedIds: incremental\r\n      ? state.selectedIds.concat(range.rows.map((row) => row.rowId))\r\n      : range.rows.map((row) => row.rowId),\r\n  };\r\n}\r\n","import { Direction, PointerLocation } from './InternalModel';\r\nimport { KeyboardEvent, ClipboardEvent, PointerEvent } from './domEventsTypes';\r\nimport { State } from './State';\r\nimport { Range } from './Range';\r\n\r\n\r\n// ASK ARCHITECT BEFORE INTRODUCING ANY CHANGE!\r\nexport abstract class Behavior<PointerUpEvent = PointerEvent | MouseEvent> {\r\n\r\n    handleKeyDown(event: KeyboardEvent, state: State): State {\r\n        return state;\r\n    }\r\n    handlePointerUp(event: PointerUpEvent, location: PointerLocation, state: State): State {\r\n        return state;\r\n    }\r\n    handleKeyUp(event: KeyboardEvent, state: State): State {\r\n        return state;\r\n    }\r\n    handleCopy(event: ClipboardEvent, state: State): State {\r\n        return state;\r\n    }\r\n    handlePaste(event: ClipboardEvent, state: State): State {\r\n        return state;\r\n    }\r\n    handleCut(event: ClipboardEvent, state: State): State {\r\n        return state;\r\n    }\r\n    handlePointerDown(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        return state;\r\n    }\r\n    handleDoubleClick(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        return state;\r\n    }\r\n\r\n    handlePointerMove(\r\n        event: PointerEvent,\r\n        location: PointerLocation,\r\n        state: State\r\n      ): State {\r\n        return state;\r\n      }\r\n    \r\n      handlePointerEnter(\r\n        event: PointerEvent,\r\n        location: PointerLocation,\r\n        state: State\r\n      ): State {\r\n        return state;\r\n      }\r\n    \r\n      handleContextMenu(\r\n        event: PointerEvent | MouseEvent,\r\n        state: State\r\n      ): State {\r\n        return state;\r\n      }\r\n    \r\n      renderPanePart(state: State, pane: Range): React.ReactNode {\r\n        return undefined;\r\n      }\r\n    \r\n      autoScrollDirection: Direction = \"both\";\r\n} \r\n","import { Cell, CellTemplate, Compatible } from '../Model/PublicModel';\r\nimport { State } from '../Model/State';\r\nimport { Location } from '../Model/InternalModel';\r\n\r\nexport function getCompatibleCellAndTemplate(state: State, location: Location): { cell: Compatible<Cell>, cellTemplate: CellTemplate } {\r\n    try {\r\n        const rawCell = state.cellMatrix.getCell(location);\r\n        if (!rawCell) throw new TypeError(`Cell doesn't exists at location`);\r\n        if (!rawCell.type) throw new Error('Cell is missing type property');\r\n        const cellTemplate = state.cellTemplates[rawCell.type];\r\n        if (!cellTemplate) throw new Error(`CellTemplate missing for type '${rawCell.type}'`);\r\n        const cell = cellTemplate.getCompatibleCell({ ...rawCell, type: rawCell.type });\r\n        if (!cell) throw new Error('Cell validation failed');\r\n        return { cell, cellTemplate };\r\n    } catch (e) {\r\n        throw new Error(`${(e as Error).message} (rowId: '${location.row.rowId}', columnId: '${location.column.columnId}')`);\r\n    }\r\n}\r\n","import { Cell, CellChange, Compatible } from '../Model/PublicModel';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\n\r\nexport function tryAppendChange(state: State, location: Location, cell: Compatible<Cell>): State {\r\n\r\n    const { cell: previousCell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n    if (previousCell === cell || JSON.stringify(previousCell) === JSON.stringify(cell) || cellTemplate.update === undefined)\r\n        return state;\r\n\r\n    const newCell = cellTemplate.update(previousCell, cell);\r\n    if ((newCell !== previousCell || JSON.stringify(newCell) !== JSON.stringify(previousCell)) && !newCell.nonEditable)\r\n        state.queuedCellChanges.push({\r\n            previousCell,\r\n            newCell,\r\n            type: newCell.type,\r\n            rowId: location.row.rowId,\r\n            columnId: location.column.columnId\r\n        } as CellChange);\r\n    return { ...state };\r\n}","import { State, } from '../Model/State';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { tryAppendChange } from './tryAppendChange';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { areLocationsEqual } from './areLocationsEqual';\r\nimport { resetSelection } from './selectRange';\r\n\r\n\r\nexport function focusLocation(state: State, location: Location, applyResetSelection = true): State {\r\n    if (state.focusedLocation && state.currentlyEditedCell) {\r\n        state = tryAppendChange(state, state.focusedLocation, state.currentlyEditedCell);\r\n    }\r\n\r\n    if (!state.props) {\r\n        throw new Error(`\"props\" field on \"state\" object should be initiated before possible location focus`);\r\n    }\r\n    \r\n    \r\n    const { onFocusLocationChanged, onFocusLocationChanging, focusLocation } = state.props;\r\n\r\n    const { cell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n    const cellLocation = { rowId: location.row.rowId, columnId: location.column.columnId };\r\n\r\n    const isChangeAllowedByUser = !onFocusLocationChanging || onFocusLocationChanging(cellLocation);\r\n\r\n    const isCellTemplateFocusable = !cellTemplate.isFocusable || cellTemplate.isFocusable(cell);\r\n\r\n    const forcedLocation = focusLocation\r\n        ? state.cellMatrix.getLocationById(focusLocation.rowId, focusLocation.columnId)\r\n        : undefined;\r\n\r\n    const isLocationAcceptable = areLocationsEqual(location, state.focusedLocation)\r\n        || (forcedLocation ? areLocationsEqual(location, forcedLocation) : true);\r\n\r\n    if (!isCellTemplateFocusable || !isChangeAllowedByUser || !isLocationAcceptable) {\r\n        return state;\r\n    }\r\n\r\n    if (onFocusLocationChanged) {\r\n        onFocusLocationChanged(cellLocation);\r\n    }\r\n\r\n    const validatedFocusLocation = state.cellMatrix.validateLocation(location);\r\n\r\n    if (applyResetSelection) {\r\n        // TODO is `location` really needed\r\n        state = resetSelection(\r\n          state,\r\n          validatedFocusLocation\r\n        );\r\n    }\r\n\r\n\r\n    return {\r\n        ...state,\r\n        focusedLocation: validatedFocusLocation,\r\n        contextMenuPosition: { top: -1, left: -1 },\r\n        currentlyEditedCell: undefined // TODO disable in derived state from props\r\n    };\r\n}\r\n","type ScrollableElement = HTMLElement | ReturnType<typeof getTopScrollableElement> | undefined;\r\n\r\nexport function getScrollableParent(element: HTMLElement, includeHidden: boolean): ScrollableElement {\r\n    let style = getComputedStyle(element);\r\n    const excludeStaticParent = style.position === 'absolute';\r\n    const overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/;\r\n    if (style.position === 'fixed') return document.documentElement;\r\n    for (let parent = element; ((parent as HTMLElement | null) = parent.parentElement);) {\r\n        style = getComputedStyle(parent);\r\n        if (excludeStaticParent && style.position === 'static')\r\n            continue;\r\n        if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX))\r\n            return parent;\r\n    }\r\n    return getTopScrollableElement();\r\n}\r\n\r\nexport function getScrollOfScrollableElement(element: ScrollableElement): { scrollLeft: number, scrollTop: number } {\r\n    const scrollLeft = element !== undefined ? ((element as HTMLElement).scrollLeft ?? getTopScrollableElement().scrollX) - ((element as HTMLElement).clientLeft || 0) : 0;\r\n    const scrollTop = element !== undefined ? ((element as HTMLElement).scrollTop ?? getTopScrollableElement().scrollY) - ((element as HTMLElement).clientTop || 0) : 0;\r\n    return { scrollLeft, scrollTop };\r\n}\r\n\r\nexport function getTopScrollableElement(): Window & typeof globalThis {\r\n    return window;\r\n}\r\n","export function isMacOs(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for CI/CD\r\n        return window.navigator.appVersion.indexOf('Mac') !== -1;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isIOS(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for CI/CD\r\n        if (/iPad|iPhone|iPod/.test(window.navigator.platform)) {\r\n            return true;\r\n        } else {\r\n            return isIpadOS();\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isIpadOS(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for CI/CD\r\n        return window.navigator.maxTouchPoints > 2 && /MacIntel/.test(window.navigator.platform);\r\n    }\r\n    return false;\r\n}\r\n","import { State } from '../Model/State';\r\nimport { getScrollOfScrollableElement, getTopScrollableElement } from './scrollHelpers';\r\nimport { isIOS } from './operatingSystem';\r\n\r\n// TODO replace any with exact type: HTMLElement | (Window & typeof globalThis)\r\nexport function getSizeOfElement(element: HTMLElement | (Window & typeof globalThis) | undefined): { width: number, height: number } {\r\n    if (!element) {\r\n        return { width: 0, height: 0 };\r\n    }\r\n    const width = element instanceof HTMLElement\r\n        ? element.clientWidth\r\n        : isIOS() ? window.innerWidth : document.documentElement.clientWidth; // TODO check other mobile devices\r\n    const height = element instanceof HTMLElement\r\n        ? element.clientHeight\r\n        : isIOS() ? window.innerHeight : document.documentElement.clientHeight;\r\n    return { width, height };\r\n}\r\n\r\nexport function getReactGridOffsets(state: State): { left: number, top: number } {\r\n    const { scrollLeft, scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    if (!state.reactGridElement) {\r\n        throw new Error(`\"state.reactGridElement\" field should be initiated before calling \"getBoundingClientRect()\"`);\r\n    }\r\n    const { left: leftReactGrid, top: topReactGrid } = state.reactGridElement.getBoundingClientRect();\r\n    let left = leftReactGrid + scrollLeft,\r\n        top = topReactGrid + scrollTop;\r\n    if (state.scrollableElement !== undefined && state.scrollableElement !== getTopScrollableElement()) {\r\n        const { left: leftScrollable, top: topScrollable } = (state.scrollableElement as HTMLElement).getBoundingClientRect();\r\n        left -= leftScrollable;\r\n        top -= topScrollable;\r\n    }\r\n    return { left, top };\r\n}\r\n\r\nexport function getVisibleSizeOfReactGrid(state: State): { width: number, height: number, visibleOffsetRight: number, visibleOffsetBottom: number } {\r\n    const { scrollLeft, scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { width: widthOfScrollableElement, height: heightOfScrollableElement } = getSizeOfElement(state.scrollableElement);\r\n    const { left, top } = getReactGridOffsets(state);\r\n\r\n    const scrollBottom = scrollTop + heightOfScrollableElement,\r\n        reactGridBottom = top + state.cellMatrix.height,\r\n        visibleTop = top < scrollTop ? scrollTop : top,\r\n        visibleBottom = reactGridBottom > scrollBottom ? scrollBottom : reactGridBottom;\r\n\r\n    const scrollRight = scrollLeft + widthOfScrollableElement,\r\n        reactGridRight = left + state.cellMatrix.width,\r\n        visibleLeft = left < scrollLeft ? scrollLeft : left,\r\n        visibleRight = reactGridRight > scrollRight ? scrollRight : reactGridRight;\r\n\r\n    const width = Math.max(visibleRight - visibleLeft, 0),\r\n        height = Math.max(visibleBottom - visibleTop, 0);\r\n    const visibleOffsetRight = scrollRight - visibleRight,\r\n        visibleOffsetBottom = scrollBottom - visibleBottom;\r\n    return { width, height, visibleOffsetRight, visibleOffsetBottom };\r\n}\r\n\r\nexport const getStickyOffset = (scroll: number, offset: number): number => scroll > offset ? scroll - offset : 0;\r\n","import { Direction, GridColumn, GridRow, PointerLocation } from '../Model/InternalModel';\r\nimport { getScrollOfScrollableElement } from './scrollHelpers';\r\nimport { getReactGridOffsets, getSizeOfElement, getStickyOffset, getVisibleSizeOfReactGrid } from './elementSizeHelpers';\r\nimport { State } from '../Model/State';\r\n\r\nexport function getLocationFromClient(\r\n    state: State,\r\n    clientX: number,\r\n    clientY: number,\r\n    favorScrollableContent?: Direction\r\n  ): PointerLocation {\r\n    if (!state.reactGridElement) {\r\n      throw new Error(\r\n        `\"state.reactGridElement\" field should be initiated before calling the \"getBoundingClientRect()\"`\r\n      );\r\n    }\r\n    const { left, top } = state.reactGridElement.getBoundingClientRect();\r\n    const viewportX = clientX - left;\r\n    const viewportY = clientY - top;\r\n  \r\n    const { cellY, row } = getRow(\r\n      state,\r\n      viewportY,\r\n      favorScrollableContent === \"vertical\" || favorScrollableContent === \"both\"\r\n    );\r\n    const { cellX, column } = getColumn(\r\n      state,\r\n      viewportX,\r\n      favorScrollableContent === \"horizontal\" || favorScrollableContent === \"both\"\r\n    );\r\n    return { row, column, viewportX, viewportY, cellX, cellY };\r\n  }\r\n  \r\n  function getRow(\r\n    state: State,\r\n    viewportY: number,\r\n    favorScrollableContent: boolean\r\n  ): { cellY: number; row: GridRow } {\r\n    return (\r\n      getStickyTopRow(state, viewportY, favorScrollableContent) ||\r\n      getStickyBottomRow(state, viewportY, favorScrollableContent) ||\r\n      getRowOnNonSticky(state, viewportY)\r\n    );\r\n  }\r\n  \r\n  function getColumn(\r\n    state: State,\r\n    viewportX: number,\r\n    favorScrollableContent: boolean\r\n  ): { cellX: number; column: GridColumn } {\r\n    return (\r\n      getLeftStickyColumn(state, viewportX, favorScrollableContent) ||\r\n      getRightStickyColumn(state, viewportX, favorScrollableContent) ||\r\n      getColumnOnNonSticky(state, viewportX)\r\n    );\r\n  }\r\n  \r\n  function getRowOnNonSticky(\r\n    state: State,\r\n    viewportY: number\r\n  ): { cellY: number; row: GridRow } {\r\n    if (state.cellMatrix.scrollableRange.rows.length < 1) {\r\n      const sticky =\r\n        viewportY >= state.cellMatrix.height\r\n          ? state.cellMatrix.last\r\n          : state.cellMatrix.first;\r\n      return {\r\n        cellY: sticky.row.height,\r\n        row: sticky.row,\r\n      };\r\n    }\r\n    return getScrollableContentRow(state, viewportY);\r\n  }\r\n  \r\n  function getColumnOnNonSticky(\r\n    state: State,\r\n    viewportX: number\r\n  ): { cellX: number; column: GridColumn } {\r\n    if (state.cellMatrix.scrollableRange.columns.length < 1) {\r\n      const sticky =\r\n        viewportX >= state.cellMatrix.width\r\n          ? state.cellMatrix.last\r\n          : state.cellMatrix.first;\r\n      return {\r\n        cellX: sticky.column.width,\r\n        column: sticky.column,\r\n      };\r\n    }\r\n    return getScrollableContentColumn(state, viewportX);\r\n  }\r\n  \r\n  // PRO\r\n  function getStickyBottomRow(\r\n    state: State,\r\n    viewportY: number,\r\n    favorScrollableContent: boolean\r\n  ): { cellY: number; row: GridRow } | undefined {\r\n    const cellMatrix = state.cellMatrix;\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { top } = getReactGridOffsets(state);\r\n    const { height } = getSizeOfElement(state.scrollableElement);\r\n    const topStickyOffset = getStickyOffset(scrollTop, top);\r\n    const maxScrollTop = Math.max(cellMatrix.height - height + top, 0);\r\n    const bottomStickyOffset =\r\n      getVisibleSizeOfReactGrid(state).height +\r\n      topStickyOffset -\r\n      cellMatrix.ranges.stickyBottomRange.height;\r\n    if (\r\n      cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n      viewportY >= bottomStickyOffset &&\r\n      !(favorScrollableContent && scrollTop + 1 < maxScrollTop)\r\n    ) {\r\n      const row =\r\n        cellMatrix.ranges.stickyBottomRange.rows.find(\r\n          (row) => row.bottom > viewportY - bottomStickyOffset\r\n        ) || cellMatrix.last.row;\r\n      const cellY = viewportY - bottomStickyOffset - row.top;\r\n      return { cellY, row };\r\n    }\r\n  }\r\n  \r\n  export function getRightStickyColumn(\r\n    state: State,\r\n    viewportX: number,\r\n    favorScrollableContent: boolean\r\n  ): { cellX: number; column: GridColumn } | undefined {\r\n    const cellMatrix = state.cellMatrix;\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { left } = getReactGridOffsets(state);\r\n    const { width } = getSizeOfElement(state.scrollableElement);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    const maxScrollLeft = Math.max(cellMatrix.width - width + left, 0);\r\n    const rightStickyOffset =\r\n      getVisibleSizeOfReactGrid(state).width +\r\n      leftStickyOffset -\r\n      cellMatrix.ranges.stickyRightRange.width;\r\n    if (\r\n      cellMatrix.ranges.stickyRightRange.columns.length > 0 &&\r\n      viewportX >= rightStickyOffset &&\r\n      !(favorScrollableContent && scrollLeft + 1 < maxScrollLeft)\r\n    ) {\r\n      const column =\r\n        cellMatrix.ranges.stickyRightRange.columns.find(\r\n          (column) => column.right > viewportX - rightStickyOffset\r\n        ) || cellMatrix.last.column;\r\n      const cellX = viewportX - rightStickyOffset - column.left;\r\n      return { cellX, column };\r\n    }\r\n  }\r\n\r\nexport function getStickyTopRow(state: State, viewportY: number, favorScrollableContent: boolean): { cellY: number, row: GridRow } | undefined {\r\n    const cellMatrix = state.cellMatrix;\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { top } = getReactGridOffsets(state);\r\n    const topStickyOffset = getStickyOffset(scrollTop, top);\r\n    if (cellMatrix.ranges.stickyTopRange.rows.find(row => row.bottom > viewportY - topStickyOffset) && viewportY < cellMatrix.ranges.stickyTopRange.height + topStickyOffset && !(favorScrollableContent && scrollTop > top)) {\r\n        const row = cellMatrix.ranges.stickyTopRange.rows.find(row => row.bottom > viewportY - topStickyOffset) || cellMatrix.ranges.stickyTopRange.first.row;\r\n        const cellY = viewportY - row.top;\r\n        return { cellY, row };\r\n    }\r\n}\r\n\r\nexport function getLeftStickyColumn(state: State, viewportX: number, favorScrollableContent: boolean): { cellX: number, column: GridColumn } | undefined {\r\n    const cellMatrix = state.cellMatrix;\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { left } = getReactGridOffsets(state);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    if (cellMatrix.ranges.stickyLeftRange.columns.find(column => column.right > viewportX - leftStickyOffset) && viewportX < cellMatrix.ranges.stickyLeftRange.width + leftStickyOffset && !(favorScrollableContent && scrollLeft > left)) {\r\n        const column = cellMatrix.ranges.stickyLeftRange.columns.find(column => column.right > viewportX - leftStickyOffset) || cellMatrix.ranges.stickyLeftRange.first.column;\r\n        const cellX = viewportX - column.left;\r\n        return { cellX, column };\r\n    }\r\n}\r\n\r\nexport function getScrollableContentRow(state: State, viewportY: number): { cellY: number, row: GridRow } {\r\n    const cellMatrix = state.cellMatrix;\r\n    const scrollableContentY = viewportY - cellMatrix.ranges.stickyTopRange.height;\r\n    const row = cellMatrix.scrollableRange.rows.find(row => row.bottom >= scrollableContentY) || cellMatrix.scrollableRange.last.row;\r\n    const cellY = scrollableContentY - row.top;\r\n    return { cellY, row };\r\n}\r\n\r\nexport function getScrollableContentColumn(state: State, viewportX: number): { cellX: number, column: GridColumn } {\r\n    const cellMatrix = state.cellMatrix;\r\n    const scrollableContentX = viewportX - cellMatrix.ranges.stickyLeftRange.width;\r\n    const column = cellMatrix.scrollableRange.columns.find(column => column.right >= scrollableContentX) || cellMatrix.scrollableRange.last.column;\r\n    const cellX = scrollableContentX - column.left;\r\n    return { cellX, column };\r\n} \r\n","import { PointerEvent } from '../Model/domEventsTypes';\r\nimport { getLocationFromClient } from './getLocationFromClient';\r\nimport { State } from '../Model/State';\r\nimport { focusLocation } from './focusLocation';\r\n\r\n\r\nexport function handleContextMenu(event: PointerEvent, state: State): State {\r\n    event.preventDefault();\r\n    const clickX = event.clientX;\r\n    const clickY = event.clientY;\r\n    const top = window.innerHeight - clickY > 25;\r\n    const right = window.innerWidth - clickX > 120;\r\n    const bottom = !top;\r\n    const left = !right;\r\n    const contextMenuPosition = state.contextMenuPosition;\r\n    if (top) { contextMenuPosition.top = clickY; }\r\n    if (right) { contextMenuPosition.left = clickX + 5; }\r\n    if (bottom) { contextMenuPosition.top = clickY - 25 - 5; }\r\n    if (left) { contextMenuPosition.left = clickX - 120 - 5; }\r\n    const focusedLocation = getLocationFromClient(state, clickX, clickY);\r\n    if (!state.selectedRanges.find(range => range.contains(focusedLocation))) {\r\n        state = focusLocation(state, focusedLocation)\r\n    }\r\n    return {\r\n        ...state,\r\n        contextMenuPosition\r\n    }\r\n}\r\n","import {\r\n  Location,\r\n  isSelectionKey,\r\n  isOnClickableArea,\r\n  getCompatibleCellAndTemplate,\r\n} from \"../../core\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\nimport {\r\n  updateActiveSelectedRange,\r\n  selectRange,\r\n} from \"../Functions/selectRange\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { State } from \"../Model/State\";\r\nimport { focusLocation } from \"../Functions/focusLocation\";\r\nimport { handleContextMenu } from \"../Functions/handleContextMenu\";\r\n\r\nexport class CellSelectionBehavior extends Behavior {\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    if ((event.target as HTMLDivElement).className === \"reactgrid-content\")\r\n      return state;\r\n    if (state.enableRangeSelection && event.shiftKey && state.focusedLocation) {\r\n      const range = state.cellMatrix.getRange(state.focusedLocation, location);\r\n      if (isSelectionKey(event) && state.selectionMode === \"range\") {\r\n        return updateActiveSelectedRange(state, range);\r\n      } else {\r\n        return selectRange(state, range, false);\r\n      }\r\n    } else if (state.enableRangeSelection && isSelectionKey(event)) {\r\n      const pointedRangeIdx = state.selectedRanges.findIndex((range) =>\r\n        range.contains(location)\r\n      );\r\n      const pointedRange = state.selectedRanges[pointedRangeIdx];\r\n      const { cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n      if (pointedRange) {\r\n        state = focusLocation(state, location, false);\r\n        state = { ...state, activeSelectedRangeIdx: pointedRangeIdx };\r\n      } else if (!cellTemplate.isFocusable) {\r\n        const range = state.cellMatrix.getRange(location, location);\r\n        state = selectRange(state, range, true);\r\n        state = focusLocation(state, location, false);\r\n      }\r\n    } else {\r\n      state = focusLocation(state, location);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  handlePointerEnter(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    if (\r\n      !state.enableRangeSelection ||\r\n      !state.focusedLocation ||\r\n      (event.target as HTMLDivElement).className === \"reactgrid-content\"\r\n    ) {\r\n      // fix for FF scroll issue\r\n      return state;\r\n    }\r\n    const range = state.cellMatrix.getRange(state.focusedLocation, location);\r\n    if (state.selectionMode === \"range\" && isOnClickableArea(event, state)) {\r\n      return updateActiveSelectedRange(state, range);\r\n    } else {\r\n      return selectRange(state, range, false);\r\n    }\r\n  }\r\n\r\n  handleContextMenu(event: PointerEvent, state: State): State {\r\n    return handleContextMenu(event, state);\r\n  }\r\n}\r\n","import { State } from '../Model/State';\r\nimport { Range } from '../Model/Range';\r\n\r\nexport function getActiveSelectedRange(state: State): Range {\r\n    return state.selectedRanges[state.activeSelectedRangeIdx];\r\n}\r\n","import { Compatible, Cell } from '../Model/PublicModel';\r\n\r\nexport const emptyCell: Compatible<Cell> = { type: '', text: '', value: NaN }","import { Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\nimport { getScrollOfScrollableElement } from './scrollHelpers';\r\nimport { getVisibleSizeOfReactGrid, getReactGridOffsets, getStickyOffset } from './elementSizeHelpers';\r\n\r\nexport function scrollIntoView(state: State, top: number, left: number): void {\r\n    const scrollableElement = state.scrollableElement as HTMLElement;\r\n    scrollableElement.scrollTop !== undefined ? scrollableElement.scrollTop = top : scrollableElement.scrollTo({ top });\r\n    scrollableElement.scrollLeft !== undefined ? scrollableElement.scrollLeft = left : scrollableElement.scrollTo({ left });\r\n}\r\n\r\nexport function getVisibleScrollAreaHeight(state: State, wholeStickyHeight: number): number {\r\n    const visibleContentHeight = getVisibleSizeOfReactGrid(state).height;\r\n    return visibleContentHeight - wholeStickyHeight;\r\n}\r\n\r\nexport function getCalculatedScrollTopValueToBottom(location: Location, visibleScrollAreaHeight: number, scrollTop: number, topStickyOffset: number): number {\r\n    return scrollTop + location.row.bottom - visibleScrollAreaHeight - topStickyOffset;\r\n}\r\n\r\nexport function getCalculatedScrollTopValueToTop(location: Location, scrollTop: number, topStickyOffset: number): number {\r\n    return scrollTop - topStickyOffset + location.row.top - 1;\r\n}\r\n\r\nexport function isBottomCellAllVisible(state: State, location: Location, visibleScrollAreaHeight: number): boolean {\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { top } = getReactGridOffsets(state);\r\n    const topStickyOffset = getStickyOffset(scrollTop, top);\r\n    return visibleScrollAreaHeight < location.row.bottom - topStickyOffset;\r\n}\r\n\r\nexport function isTopCellAllVisible(state: State, location: Location): boolean {\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { top } = getReactGridOffsets(state);\r\n    const topStickyOffset = getStickyOffset(scrollTop, top);\r\n    return location.row.top < topStickyOffset;\r\n}\r\n\r\nexport function isFocusLocationOnTopSticky(state: State, location: Location): boolean {\r\n    const { stickyTopRange } = state.cellMatrix.ranges;\r\n    const row = location.row;\r\n    return stickyTopRange.rows.length > 0 && row.idx <= stickyTopRange.last.row.idx;\r\n}\r\n\r\nexport function getVisibleScrollAreaWidth(state: State, wholeStickyWidth: number): number {\r\n    const visibleContentWidth = getVisibleSizeOfReactGrid(state).width;\r\n    return visibleContentWidth - wholeStickyWidth;\r\n}\r\n\r\nexport function getCalculatedScrollLeftValueToRight(location: Location, visibleScrollAreaWidth: number, scrollLeft: number, leftStickyOffset: number): number {\r\n    return scrollLeft + location.column.right - visibleScrollAreaWidth - leftStickyOffset;\r\n}\r\n\r\nexport function getCalculatedScrollLeftValueToLeft(location: Location, scrollLeft: number, leftStickyOffset: number): number {\r\n    return scrollLeft - leftStickyOffset + location.column.left - 1;\r\n}\r\n\r\nexport function isRightCellAllVisible(state: State, location: Location, visibleScrollAreaWidth: number): boolean {\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { left } = getReactGridOffsets(state);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    return visibleScrollAreaWidth < location.column.right - leftStickyOffset\r\n}\r\n\r\nexport function isLeftCellAllVisible(state: State, location: Location): boolean {\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { left } = getReactGridOffsets(state);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    return location.column.left < leftStickyOffset;\r\n}\r\n\r\nexport function isFocusLocationOnLeftSticky(state: State, location: Location): boolean {\r\n    const { stickyLeftRange } = state.cellMatrix.ranges;\r\n    const column = location.column;\r\n    return stickyLeftRange.columns.length > 0 && column.idx <= stickyLeftRange.last.column.idx;\r\n}\r\n","import { Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\nimport { focusLocation } from './focusLocation';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { getVisibleScrollAreaHeight, isFocusLocationOnTopSticky } from './scrollIntoView';\r\n\r\n\r\nexport type FocusLocationFn = (state: State, location: Location) => State;\r\nexport type FocusCellFn = (colIdx: number, rowIdx: number, state: State) => State;\r\nexport type RowCalcFn = (state: State, location: Location) => number;\r\n\r\nexport const focusCell = withFocusLocation(focusLocation as any);\r\nexport type ProFocusCellFn = (\r\n  colIdx: number,\r\n  rowIdx: number,\r\n  state: State\r\n) => State;\r\n\r\nexport const moveFocusHome = withMoveFocusHome(focusCell);\r\nexport const moveFocusEnd = withMoveFocusEnd(focusCell);\r\nexport const moveFocusLeft = withMoveFocusLeft(focusCell);\r\nexport const moveFocusRight = withMoveFocusRight(focusCell);\r\nexport const moveFocusUp = withMoveFocusUp(focusCell);\r\nexport const moveFocusDown = withMoveFocusDown(focusCell);\r\n\r\nexport const moveFocusPage = withMoveFocusPage(focusCell);\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const moveFocusPageUp = moveFocusPage(pageUpRowCalc as any);\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const moveFocusPageDown = moveFocusPage(pageDownRowCalc as any);\r\n\r\n\r\nexport function withFocusLocation(focusLocation: FocusLocationFn) {\r\n    return (colIdx: number, rowIdx: number, state: State): State => {\r\n        return focusLocation(state, state.cellMatrix.getLocation(rowIdx, colIdx));\r\n    }\r\n}\r\n\r\nexport function withMoveFocusEnd(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        if (state.focusedLocation) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, state.focusedLocation.row.idx, state.cellMatrix.columns.length - 1)\r\n            if (!nextFocusableLocation) {\r\n                const nextLocation = state.cellMatrix.getLocation(state.focusedLocation.row.idx, state.cellMatrix.columns.length - 1);\r\n                const focusLocation = getFocusLocationToLeft(state, nextLocation);\r\n                return focusLocation ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n            }\r\n            return fc(nextFocusableLocation.column.idx, nextFocusableLocation.row.idx, state);\r\n        }\r\n        return state;\r\n    }\r\n}\r\n\r\nexport function withMoveFocusHome(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        if (state.focusedLocation) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, state.focusedLocation.row.idx, 0)\r\n            if (!nextFocusableLocation) {\r\n                const nextLocation = state.cellMatrix.getLocation(state.focusedLocation.row.idx, 0);\r\n                const focusLocation = getFocusLocationToRight(state, nextLocation);\r\n                return focusLocation ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n            }\r\n            return fc(nextFocusableLocation.column.idx, nextFocusableLocation.row.idx, state);\r\n        }\r\n        return state;\r\n    }\r\n}\r\nexport function withMoveFocusLeft(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        const focusLocation = getFocusLocationToLeft(state, state.focusedLocation);\r\n        return (focusLocation) ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n    }\r\n}\r\n\r\nexport function getNextFocusableLocation(state: State, rowIdx: number, colIdx: number): Location | undefined {\r\n    const location = state.cellMatrix.getLocation(rowIdx, colIdx);\r\n    const { cell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n    if (!state.props) {\r\n        throw new Error(`\"props\" field on \"state\" object should be initiated before possible location focus`);\r\n    }\r\n    const { onFocusLocationChanging } = state.props;\r\n    const cellLocation = { rowId: location.row.rowId, columnId: location.column.columnId };\r\n    const wasChangePrevented = !onFocusLocationChanging || onFocusLocationChanging(cellLocation);\r\n    const isFocusable = (!cellTemplate.isFocusable || cellTemplate.isFocusable(cell)) && wasChangePrevented;\r\n    return isFocusable ? location : undefined;\r\n}\r\n\r\nexport function getFocusLocationToLeft(state: State, location: Location | undefined): Location | undefined {\r\n    if (location) {\r\n        for (let colIdx = location.column.idx - 1; colIdx >= state.cellMatrix.first.column.idx; --colIdx) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, location.row.idx, colIdx)\r\n            if (nextFocusableLocation) {\r\n                return nextFocusableLocation;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function withMoveFocusRight(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        const focusLocation = getFocusLocationToRight(state, state.focusedLocation);\r\n        return (focusLocation) ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n    }\r\n}\r\n\r\nexport function getFocusLocationToRight(state: State, location: Location | undefined): Location | undefined {\r\n    if (location) {\r\n        for (let colIdx = location.column.idx + 1; colIdx <= state.cellMatrix.last.column.idx; ++colIdx) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, location.row.idx, colIdx)\r\n            if (nextFocusableLocation) {\r\n                return nextFocusableLocation;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function withMoveFocusUp(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        const focusLocation = getFocusLocationToUp(state, state.focusedLocation);\r\n        return (focusLocation) ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n    }\r\n}\r\n\r\nexport function getFocusLocationToUp(state: State, location: Location | undefined): Location | undefined {\r\n    if (location) {\r\n        for (let rowIdx = location.row.idx - 1; rowIdx >= state.cellMatrix.first.row.idx; --rowIdx) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, rowIdx, location.column.idx)\r\n            if (nextFocusableLocation) {\r\n                return nextFocusableLocation;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function withMoveFocusDown(fc: FocusCellFn) {\r\n    return (state: State): State => {\r\n        const focusLocation = getFocusLocationToDown(state, state.focusedLocation);\r\n        return focusLocation ? fc(focusLocation.column.idx, focusLocation.row.idx, state) : state;\r\n    }\r\n}\r\n\r\nexport function getFocusLocationToDown(state: State, location: Location | undefined): Location | undefined {\r\n    if (location) {\r\n        for (let rowIdx = location.row.idx + 1; rowIdx <= state.cellMatrix.last.row.idx; ++rowIdx) {\r\n            const nextFocusableLocation = getNextFocusableLocation(state, rowIdx, location.column.idx)\r\n            if (nextFocusableLocation) {\r\n                return nextFocusableLocation;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function withMoveFocusPage(fc: FocusCellFn) {\r\n    return (rowCalculator: RowCalcFn) => {\r\n        return (state: State): State => {\r\n            const location = state.focusedLocation;\r\n            if (!location)\r\n                return state;\r\n            const rowIdx = rowCalculator(state, location);\r\n            return fc(location.column.idx, rowIdx, state);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getVisibleHeight(state: State, stickyHeight: number): number {\r\n    return getVisibleScrollAreaHeight(state, stickyHeight);\r\n}\r\n\r\n\r\n\r\nfunction pageDownRowCalc(state: State, location: Location): number {\r\n  const hasTopSticky = state.cellMatrix.ranges.stickyTopRange.rows.length > 0;\r\n  const isOnTopSticky =\r\n    hasTopSticky && isFocusLocationOnTopSticky(state, location);\r\n  const isOnLastRowOnTopSticky =\r\n    hasTopSticky &&\r\n    location.row.idx === state.cellMatrix.ranges?.stickyTopRange.last.row.idx;\r\n  const hasScrollableRange = state.cellMatrix.scrollableRange.rows.length > 0;\r\n  const isOnScrollableRange =\r\n    hasScrollableRange &&\r\n    location.row.idx >= state.cellMatrix.scrollableRange.first.row.idx &&\r\n    location.row.idx < state.cellMatrix.scrollableRange.last.row.idx;\r\n  const isOnLastRowOfScrollableRange =\r\n    hasScrollableRange &&\r\n    location.row.idx === state.cellMatrix.scrollableRange.last.row.idx;\r\n  const hasBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0;\r\n  const isOnBottomSticky =\r\n    hasBottomSticky &&\r\n    location.row.idx >= state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const visibleScrollAreaHeight = getVisibleHeight(\r\n    state,\r\n    state.cellMatrix.ranges.stickyTopRange.height +\r\n      state.cellMatrix.ranges.stickyBottomRange.height\r\n  );\r\n  const rowsOnScreen = state.cellMatrix.scrollableRange.rows.filter(\r\n    (row) => row.top + row.height < visibleScrollAreaHeight\r\n  );\r\n  let rowIdx = 0;\r\n  if (isOnTopSticky) {\r\n    if (isOnTopSticky && !isOnLastRowOnTopSticky) {\r\n      rowIdx = state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n    } else if (hasScrollableRange) {\r\n      rowIdx = state.cellMatrix.scrollableRange.first.row.idx;\r\n    } else if (hasBottomSticky) {\r\n      rowIdx = state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n    } else {\r\n      rowIdx = state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n    }\r\n  } else if (isOnScrollableRange) {\r\n    rowIdx =\r\n      location.row.idx + rowsOnScreen.length <\r\n      state.cellMatrix.scrollableRange.rows.length\r\n        ? location.row.idx + rowsOnScreen.length\r\n        : state.cellMatrix.scrollableRange.last.row.idx;\r\n  } else if (isOnLastRowOfScrollableRange) {\r\n    hasBottomSticky\r\n      ? (rowIdx = state.cellMatrix.ranges.stickyBottomRange.first.row.idx)\r\n      : (rowIdx = state.cellMatrix.scrollableRange.last.row.idx);\r\n  } else if (isOnBottomSticky) {\r\n    rowIdx = state.cellMatrix.ranges.stickyBottomRange.last.row.idx;\r\n  }\r\n  const nextFocusableLocation = getNextFocusableLocation(\r\n    state,\r\n    rowIdx,\r\n    location.column.idx\r\n  );\r\n  if (!nextFocusableLocation) {\r\n    const nextLocation = state.cellMatrix.getLocation(\r\n      rowIdx,\r\n      location.column.idx\r\n    );\r\n    const focusLocation = getFocusLocationToUp(state, nextLocation);\r\n    return focusLocation ? focusLocation.row.idx : location.row.idx;\r\n  }\r\n  return rowIdx;\r\n}\r\n\r\nfunction pageUpRowCalc(state: State, location: Location): number {\r\n  const visibleScrollAreaHeight = getVisibleHeight(\r\n    state,\r\n    state.cellMatrix.ranges.stickyTopRange.height +\r\n      state.cellMatrix.ranges.stickyBottomRange.height\r\n  );\r\n  const hasTopSticky = state.cellMatrix.ranges.stickyTopRange.rows.length > 0;\r\n  const isOnTopSticky =\r\n    hasTopSticky && isFocusLocationOnTopSticky(state, location);\r\n  const hasScrollableRange = state.cellMatrix.scrollableRange.rows.length > 0;\r\n  const isOnScrollableRange =\r\n    hasScrollableRange &&\r\n    location.row.idx > state.cellMatrix.scrollableRange.first.row.idx &&\r\n    location.row.idx <= state.cellMatrix.scrollableRange.last.row.idx;\r\n  const isOnFirstElementOnScrollableRange =\r\n    hasScrollableRange &&\r\n    location.row.idx === state.cellMatrix.scrollableRange.first.row.idx;\r\n  const hasBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0;\r\n  const isOnBottomSticky =\r\n    hasBottomSticky &&\r\n    location.row.idx >= state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const isOnFirstRowOnBottomSticky =\r\n    hasBottomSticky &&\r\n    location?.row.idx ===\r\n      state.cellMatrix.ranges?.stickyBottomRange.first.row.idx;\r\n\r\n  const rowsOnScreen = state.cellMatrix.scrollableRange.rows.filter(\r\n    (row) => row.top + row.height < visibleScrollAreaHeight\r\n  );\r\n  let rowIdx = 0;\r\n\r\n  if (isOnBottomSticky) {\r\n    if (isOnBottomSticky && !isOnFirstRowOnBottomSticky) {\r\n      rowIdx = state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n    } else if (hasScrollableRange) {\r\n      rowIdx = state.cellMatrix.scrollableRange.last.row.idx;\r\n    } else if (hasTopSticky) {\r\n      rowIdx = state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n    } else {\r\n      rowIdx = state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n    }\r\n  } else if (isOnScrollableRange) {\r\n    rowIdx =\r\n      location.row.idx - rowsOnScreen.length <\r\n      state.cellMatrix.scrollableRange.first.row.idx\r\n        ? state.cellMatrix.scrollableRange.first.row.idx\r\n        : location.row.idx - rowsOnScreen.length;\r\n  } else if (isOnFirstElementOnScrollableRange) {\r\n    hasTopSticky\r\n      ? (rowIdx = state.cellMatrix.ranges.stickyTopRange.last.row.idx)\r\n      : (rowIdx = state.cellMatrix.scrollableRange.first.row.idx);\r\n  } else if (isOnTopSticky) {\r\n    rowIdx = state.cellMatrix.ranges.stickyTopRange.first.row.idx;\r\n  }\r\n  const nextFocusableLocation = getNextFocusableLocation(\r\n    state,\r\n    rowIdx,\r\n    location.column.idx\r\n  );\r\n  if (!nextFocusableLocation) {\r\n    const nextLocation = state.cellMatrix.getLocation(\r\n      rowIdx,\r\n      location.column.idx\r\n    );\r\n    const focusLocation = getFocusLocationToDown(state, nextLocation);\r\n    return focusLocation ? focusLocation.row.idx : location.row.idx;\r\n  }\r\n  return rowIdx;\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface HintProps {\r\n    linePosition: number;\r\n    left: number;\r\n    offset: number;\r\n}\r\n\r\n// TODO these component props should be calculated directly by behaviour (only integers) \r\nexport const ResizeHint: React.FC<HintProps> = ({ left, linePosition, offset }) => {\r\n    return (\r\n        <>\r\n            {linePosition !== -1 &&\r\n                <div\r\n                    className={`rg-column-resize-hint`}\r\n                    style={{\r\n                        left: linePosition - offset,\r\n                    }}\r\n                >\r\n                    <span style={{ whiteSpace: 'nowrap' }}>Width: {Math.floor(linePosition - left - offset)}px</span>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Direction,\r\n  GridColumn,\r\n  PointerLocation,\r\n  Range,\r\n  getScrollOfScrollableElement,\r\n  getReactGridOffsets,\r\n  getStickyOffset,\r\n  getVisibleSizeOfReactGrid,\r\n  CellMatrix,\r\n} from \"../../core\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\nimport { State } from \"../Model/State\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { ResizeHint } from \"../Components/ResizeHint\";\r\n\r\nexport class ResizeColumnBehavior extends Behavior {\r\n  // TODO min / max column with on column object\r\n  private resizedColumn!: GridColumn;\r\n  private initialLocation!: PointerLocation;\r\n  autoScrollDirection: Direction = \"horizontal\";\r\n  isInScrollableRange!: boolean;\r\n\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    this.initialLocation = location;\r\n    this.resizedColumn = location.column;\r\n    this.isInScrollableRange = state.cellMatrix.scrollableRange.columns.some(\r\n      (c) => c.idx === this.resizedColumn.idx\r\n    );\r\n    return state;\r\n  }\r\n  handlePointerMove(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    let linePosition = location.viewportX;\r\n    if (\r\n      !(\r\n        (location.column.idx === this.resizedColumn.idx &&\r\n          location.cellX > CellMatrix.MIN_COLUMN_WIDTH) ||\r\n        location.column.idx > this.resizedColumn.idx\r\n      )\r\n    ) {\r\n      const offset = this.getLinePositionOffset(state);\r\n      linePosition =\r\n        CellMatrix.MIN_COLUMN_WIDTH + this.resizedColumn.left + offset;\r\n    }\r\n    return { ...state, linePosition, lineOrientation: \"vertical\" };\r\n  }\r\n\r\n  handlePointerUp(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    const newWidth =\r\n      this.resizedColumn.width +\r\n      location.viewportX -\r\n      this.initialLocation.viewportX;\r\n    if (state.props?.onColumnResized) {\r\n      const newColWidth =\r\n        newWidth >= CellMatrix.MIN_COLUMN_WIDTH\r\n          ? newWidth\r\n          : CellMatrix.MIN_COLUMN_WIDTH;\r\n      state.props.onColumnResized(\r\n        this.resizedColumn.columnId,\r\n        newColWidth,\r\n        state.selectedIds\r\n      );\r\n    }\r\n    let focusedLocation = state.focusedLocation;\r\n    if (\r\n      focusedLocation !== undefined &&\r\n      this.resizedColumn.columnId === focusedLocation.column.idx\r\n    ) {\r\n      const column = { ...focusedLocation.column, width: newWidth };\r\n      focusedLocation = { ...focusedLocation, column };\r\n    }\r\n    return { ...state, linePosition: -1, focusedLocation };\r\n  }\r\n\r\n  //should render ResizeHint on pane which has got the highest priority\r\n  renderPanePart(state: State, pane: Range): React.ReactNode {\r\n    const offset = this.getLinePositionOffset(state);\r\n    return (\r\n      pane.contains(this.initialLocation) && (\r\n        <ResizeHint\r\n          left={this.resizedColumn.left}\r\n          linePosition={state.linePosition}\r\n          offset={offset}\r\n        />\r\n      )\r\n    );\r\n  }\r\n\r\n  getLinePositionOffset(state: State): number {\r\n    const { scrollLeft } = getScrollOfScrollableElement(\r\n      state.scrollableElement\r\n    );\r\n    const { left } = getReactGridOffsets(state);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    const rightStickyOffset =\r\n      getVisibleSizeOfReactGrid(state).width +\r\n      leftStickyOffset -\r\n      state.cellMatrix.ranges.stickyRightRange.width;\r\n    let offset = 0;\r\n    if (\r\n      state.cellMatrix.scrollableRange.columns.some(\r\n        (c) => c.idx === this.resizedColumn.idx\r\n      )\r\n    ) {\r\n      offset = state.cellMatrix.ranges.stickyLeftRange.width;\r\n    } else if (\r\n      state.cellMatrix.ranges.stickyRightRange.columns.some(\r\n        (c) => c.idx === this.resizedColumn.idx\r\n      )\r\n    ) {\r\n      offset = rightStickyOffset;\r\n    } else {\r\n      offset = scrollLeft;\r\n    }\r\n    return offset;\r\n  }\r\n}\r\n","import { Direction, Location } from './../Model/InternalModel';\r\nimport { State } from './../Model/State';\r\nimport { ReactGridProps } from './../Model/PublicModel';\r\nimport { areLocationsEqual } from './areLocationsEqual';\r\nimport { getReactGridOffsets, getStickyOffset } from './elementSizeHelpers';\r\nimport { getScrollOfScrollableElement, getTopScrollableElement } from './scrollHelpers';\r\nimport {\r\n    getCalculatedScrollLeftValueToLeft, getCalculatedScrollLeftValueToRight, getCalculatedScrollTopValueToBottom,\r\n    getCalculatedScrollTopValueToTop, getVisibleScrollAreaHeight, getVisibleScrollAreaWidth, isBottomCellAllVisible,\r\n    isFocusLocationOnLeftSticky, isFocusLocationOnTopSticky, isLeftCellAllVisible, isRightCellAllVisible,\r\n    isTopCellAllVisible, scrollIntoView\r\n} from './scrollIntoView';\r\nimport { ResizeColumnBehavior } from '../Behaviors/ResizeColumnBehavior';\r\n\r\n//TODO what about initialFocusLocation and focusLocation set by props\r\nexport function componentDidUpdate(\r\n    prevProps: ReactGridProps,\r\n    prevState: State,\r\n    state: State\r\n  ): void {\r\n    const location = state.focusedLocation;\r\n    if (location) {\r\n      const shouldChangeScroll =\r\n        !areLocationsEqual(location, prevState.focusedLocation) &&\r\n        !(state.currentBehavior instanceof ResizeColumnBehavior);\r\n      const wasCellEditorOpened =\r\n        state.currentlyEditedCell !== undefined &&\r\n        state.currentlyEditedCell !== prevState.currentlyEditedCell;\r\n      if (shouldChangeScroll || wasCellEditorOpened) {\r\n        const { left, top } = scrollCalculator(state, location);\r\n        scrollIntoView(state, top, left);\r\n      }\r\n      //TODO Try to change scroll after selected range is changing\r\n      // const activeSelectedRange = getProActiveSelectedRange(prevState);\r\n      // if (activeSelectedRange) {\r\n      //     const shouldChangeScrollForActiveSelectedRangeChange = areRangeIsChanging(state, prevState);\r\n      //     if (shouldChangeScrollForActiveSelectedRangeChange && (state.selectedRanges[0].rows.length !== 1 || state.selectedRanges[0].columns.length !== 1)) {\r\n  \r\n      //     }\r\n      // }\r\n    }\r\n  }\r\n  \r\n  export function scrollCalculator(\r\n    state: State,\r\n    location: Location,\r\n    direction: Direction = \"both\"\r\n  ): { top: number; left: number } {\r\n    const top = getScrollTop(state, location, direction === \"horizontal\");\r\n    const left = getScrollLeft(state, location, direction === \"vertical\");\r\n    return { top, left };\r\n  }\r\n  \r\n  export function getScrollTop(\r\n    state: State,\r\n    location: Location,\r\n    dontChange: boolean\r\n  ): number {\r\n    const { stickyTopRange, stickyBottomRange } = state.cellMatrix.ranges;\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const wholeStickyHeight = stickyTopRange.height + stickyBottomRange.height;\r\n    const visibleScrollAreaHeight = getVisibleScrollAreaHeight(\r\n      state,\r\n      wholeStickyHeight\r\n    );\r\n    const { top } = getReactGridOffsets(state);\r\n    const topStickyOffset = getStickyOffset(scrollTop, top);\r\n    const row = location.row;\r\n    if (dontChange || !row) {\r\n      return scrollTop;\r\n    }\r\n    const additionalPixelOnScrollingOnBody = isLocationOnScrollableBody(\r\n      state,\r\n      location\r\n    )\r\n      ? 1\r\n      : 0;\r\n    if (\r\n      isFocusLocationOnTopSticky(state, location) ||\r\n      isFocusLocationOnBottomSticky(state, location)\r\n    ) {\r\n      return scrollTop;\r\n    } else if (\r\n      isBottomCellAllVisible(\r\n        state,\r\n        location,\r\n        visibleScrollAreaHeight + additionalPixelOnScrollingOnBody\r\n      )\r\n    ) {\r\n      return getCalculatedScrollTopValueToBottom(\r\n        location,\r\n        visibleScrollAreaHeight - 1 - additionalPixelOnScrollingOnBody,\r\n        scrollTop,\r\n        topStickyOffset\r\n      );\r\n    } else if (isTopCellAllVisible(state, location)) {\r\n      return getCalculatedScrollTopValueToTop(\r\n        location,\r\n        scrollTop,\r\n        topStickyOffset\r\n      );\r\n    }\r\n    return scrollTop;\r\n  }\r\n  \r\n  export function getScrollLeft(\r\n    state: State,\r\n    location: Location,\r\n    dontChange: boolean\r\n  ): number {\r\n    const { stickyLeftRange, stickyRightRange } = state.cellMatrix.ranges;\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const wholeStickyWidth = stickyLeftRange.width + stickyRightRange.width;\r\n    const visibleScrollAreaWidth = getVisibleScrollAreaWidth(\r\n      state,\r\n      wholeStickyWidth\r\n    );\r\n    const { left } = getReactGridOffsets(state);\r\n    const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n    const column = location.column;\r\n    if (dontChange || !column) {\r\n      return scrollLeft;\r\n    }\r\n    const additionalPixelOnScrollingOnBody = isLocationOnScrollableBody(\r\n      state,\r\n      location\r\n    )\r\n      ? 1\r\n      : 0;\r\n    if (\r\n      isFocusLocationOnLeftSticky(state, location) ||\r\n      isFocusLocationOnRightSticky(state, location)\r\n    ) {\r\n      return scrollLeft;\r\n    } else if (\r\n      isRightCellAllVisible(\r\n        state,\r\n        location,\r\n        visibleScrollAreaWidth + additionalPixelOnScrollingOnBody\r\n      )\r\n    ) {\r\n      return getCalculatedScrollLeftValueToRight(\r\n        location,\r\n        visibleScrollAreaWidth - 1 - additionalPixelOnScrollingOnBody,\r\n        scrollLeft,\r\n        leftStickyOffset\r\n      );\r\n    } else if (isLeftCellAllVisible(state, location)) {\r\n      return getCalculatedScrollLeftValueToLeft(\r\n        location,\r\n        scrollLeft,\r\n        leftStickyOffset\r\n      );\r\n    }\r\n    return scrollLeft;\r\n  }\r\n  \r\n  function isFocusLocationOnRightSticky(state: State, location: Location) {\r\n    const { stickyRightRange } = state.cellMatrix.ranges;\r\n    const column = location.column;\r\n    return (\r\n      stickyRightRange.columns.length > 0 &&\r\n      column.idx >= stickyRightRange.first.column.idx\r\n    );\r\n  }\r\n  \r\n  function isFocusLocationOnBottomSticky(state: State, location: Location) {\r\n    const { stickyBottomRange } = state.cellMatrix.ranges;\r\n    const row = location.row;\r\n    return (\r\n      stickyBottomRange.rows.length > 0 &&\r\n      row.idx >= stickyBottomRange.first.row.idx\r\n    );\r\n  }\r\n  \r\n  function isLocationOnScrollableBody(state: State, location: Location) {\r\n    return (\r\n      state.cellMatrix.scrollableRange.contains(location) &&\r\n      state.scrollableElement === getTopScrollableElement()\r\n    );\r\n  }\r\n  ","import { keyCodes } from \"../../lib\";\r\nimport {\r\n  handleKeyDownOnCellTemplate,\r\n  areLocationsEqual,\r\n  isMacOs,\r\n  isSelectionKey,\r\n  Range,\r\n  Location,\r\n  scrollIntoView,\r\n  getVisibleScrollAreaHeight,\r\n} from \"../../core\";\r\nimport { KeyboardEvent } from \"../Model/domEventsTypes\";\r\nimport { getActiveSelectedRange } from \"./getActiveSelectedRange\";\r\nimport { State } from \"../Model/State\";\r\nimport { focusLocation } from \"./focusLocation\";\r\nimport { wipeSelectedRanges } from \"./wipeSelectedRanges\";\r\nimport {\r\n  moveFocusLeft,\r\n  moveFocusUp,\r\n  moveFocusDown,\r\n  moveFocusRight,\r\n  moveFocusPageDown,\r\n  moveFocusPageUp,\r\n  moveFocusHome,\r\n  moveFocusEnd,\r\n} from \"./focuses\";\r\nimport { scrollCalculator } from \"./componentDidUpdate\";\r\nimport { resetSelection } from \"./selectRange\";\r\nimport { newLocation } from \"./newLocation\";\r\n\r\nexport function handleKeyDown(\r\n  state: State,\r\n  event: KeyboardEvent\r\n): State {\r\n  const newState = handleKeyDownInternal(state, event);\r\n  if (newState !== state) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n  return newState;\r\n}\r\n\r\nfunction handleKeyDownInternal(\r\n  state: State,\r\n  event: KeyboardEvent\r\n): State {\r\n  const location = state.focusedLocation;\r\n  if (!location) {\r\n    return state;\r\n  }\r\n\r\n  const asr = getActiveSelectedRange(state);\r\n\r\n  if (event.ctrlKey && isMacOs()) {\r\n    switch (event.keyCode) {\r\n      case keyCodes.SPACE:\r\n        return resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          0,\r\n          state.cellMatrix.last.row.idx\r\n        );\r\n    }\r\n  }\r\n\r\n  const isSingleCellSelected =\r\n    state.selectedRanges.length === 1 && areLocationsEqual(asr.first, asr.last);\r\n  const newState = handleKeyDownOnCellTemplate(state, event) as State;\r\n  if (newState !== state) {\r\n    if (!isSingleCellSelected && event.keyCode === keyCodes.ENTER) {\r\n      const direction = event.shiftKey ? \"up\" : \"down\";\r\n      state.hiddenFocusElement?.focus();\r\n      return moveFocusInsideSelectedRange(\r\n        state,\r\n        direction,\r\n        asr,\r\n        location\r\n      ) as State;\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  if (event.altKey) return state;\r\n\r\n  if (isSelectionKey(event) && event.shiftKey) {\r\n    switch (event.keyCode) {\r\n      case keyCodes.HOME:\r\n        return resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          0,\r\n          asr.last.row.idx\r\n        );\r\n      case keyCodes.END:\r\n        return resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          state.cellMatrix.last.row.idx\r\n        );\r\n    }\r\n  } else if (isSelectionKey(event)) {\r\n    const cm = state.cellMatrix;\r\n    switch (event.keyCode) {\r\n      case keyCodes.KEY_A:\r\n        if (\r\n          state.selectedRanges.length === 1 &&\r\n          areLocationsEqual(state.selectedRanges[0].first, cm.first) &&\r\n          areLocationsEqual(state.selectedRanges[0].last, cm.last)\r\n        ) {\r\n          return resetSelection(state, location);\r\n        }\r\n        return {\r\n          ...state,\r\n          selectedRanges: [cm.getRange(cm.first, cm.last)],\r\n          selectionMode: \"range\",\r\n          activeSelectedRangeIdx: 0,\r\n        };\r\n      case keyCodes.HOME:\r\n        return focusLocation(state, state.cellMatrix.first);\r\n      case keyCodes.END:\r\n        return focusLocation(state, state.cellMatrix.last);\r\n      case keyCodes.SPACE:\r\n        return resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          0,\r\n          state.cellMatrix.last.row.idx\r\n        );\r\n    }\r\n  } else if (event.shiftKey) {\r\n    switch (event.keyCode) {\r\n      case keyCodes.UP_ARROW:\r\n        return resizeSelectionUp(state, asr, location);\r\n      case keyCodes.DOWN_ARROW:\r\n        return resizeSelectionDown(state, asr, location);\r\n      case keyCodes.LEFT_ARROW:\r\n        return resizeSelectionLeft(state, asr, location);\r\n      case keyCodes.RIGHT_ARROW:\r\n        return resizeSelectionRight(state, asr, location);\r\n      case keyCodes.TAB:\r\n        event.preventDefault(); // prevent from leaving HFE\r\n        return (\r\n          isSingleCellSelected\r\n            ? moveFocusLeft(state)\r\n            : moveFocusInsideSelectedRange(state, \"left\", asr, location)\r\n        ) as State;\r\n      case keyCodes.ENTER:\r\n        state.hiddenFocusElement?.focus();\r\n        return (\r\n          isSingleCellSelected\r\n            ? moveFocusUp(state)\r\n            : moveFocusInsideSelectedRange(state, \"up\", asr, location)\r\n        ) as State;\r\n      case keyCodes.SPACE:\r\n        return resizeSelection(\r\n          state,\r\n          0,\r\n          state.cellMatrix.last.column.idx,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx\r\n        );\r\n      case keyCodes.HOME:\r\n        return resizeSelection(\r\n          state,\r\n          0,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx\r\n        );\r\n      case keyCodes.END:\r\n        return resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          state.cellMatrix.last.column.idx,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx\r\n        );\r\n      case keyCodes.PAGE_UP:\r\n        return resizeSelectionPageUp(state, asr, location);\r\n      case keyCodes.PAGE_DOWN:\r\n        return resizeSelectionPageDown(state, asr, location);\r\n    }\r\n  } else {\r\n    // === NO SHIFT OR CONTROL ===\r\n    switch (event.keyCode) {\r\n      case keyCodes.DELETE:\r\n      case keyCodes.BACKSPACE:\r\n        state.hiddenFocusElement?.focus();\r\n        return wipeSelectedRanges(state) as State;\r\n      case keyCodes.UP_ARROW:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusUp(state) as State;\r\n      case keyCodes.DOWN_ARROW:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusDown(state) as State;\r\n      case keyCodes.LEFT_ARROW:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusLeft(state) as State;\r\n      case keyCodes.RIGHT_ARROW:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusRight(state) as State;\r\n      case keyCodes.TAB:\r\n        state.hiddenFocusElement?.focus();\r\n        event.preventDefault(); // prevent from leaving HFE\r\n        return (\r\n          isSingleCellSelected\r\n            ? moveFocusRight(state)\r\n            : moveFocusInsideSelectedRange(state, \"right\", asr, location)\r\n        ) as State;\r\n      case keyCodes.HOME:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusHome(state) as State;\r\n      case keyCodes.END:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusEnd(state) as State;\r\n      case keyCodes.PAGE_UP:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusPageUp(state) as State;\r\n      case keyCodes.PAGE_DOWN:\r\n        state.hiddenFocusElement?.focus();\r\n        return moveFocusPageDown(state) as State;\r\n      case keyCodes.ENTER:\r\n        state.hiddenFocusElement?.focus();\r\n        return (\r\n          isSingleCellSelected\r\n            ? { ...moveFocusDown(state), currentlyEditedCell: undefined }\r\n            : moveFocusInsideSelectedRange(state, \"down\", asr, location)\r\n        ) as State;\r\n      case keyCodes.ESCAPE:\r\n        event.preventDefault();\r\n        state.hiddenFocusElement?.focus();\r\n        return state.currentlyEditedCell\r\n          ? { ...state, currentlyEditedCell: undefined }\r\n          : state;\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction moveFocusInsideSelectedRange(\r\n  state: State,\r\n  direction: \"left\" | \"right\" | \"up\" | \"down\",\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  const selectedRangeIdx = state.activeSelectedRangeIdx;\r\n  const colCount = asr ? asr.columns.length : 0;\r\n  const rowCount = asr ? asr.rows.length : 0;\r\n  const delta = direction === \"up\" || direction === \"left\" ? -1 : 1;\r\n\r\n  const currentPosInRange =\r\n    direction === \"up\" || direction === \"down\"\r\n      ? location.row.idx -\r\n        asr.first.row.idx +\r\n        (location.column.idx - asr.first.column.idx) * rowCount\r\n      : (location.row.idx - asr.first.row.idx) * colCount +\r\n        (location.column.idx - asr.first.column.idx);\r\n\r\n  const newPosInRange =\r\n    (currentPosInRange + delta) % (asr.rows.length * asr.columns.length);\r\n\r\n  const onShiftAndTabKeys =\r\n    (newPosInRange < 0 && currentPosInRange === 0) ||\r\n    (rowCount === 1 && colCount === 1 && delta === -1);\r\n  const onTabKey =\r\n    (newPosInRange === 0 &&\r\n      currentPosInRange === asr.rows.length * asr.columns.length - 1 &&\r\n      ((rowCount >= 3 && colCount >= 1) || (rowCount >= 1 && colCount >= 3))) ||\r\n    (newPosInRange === 0 &&\r\n      currentPosInRange === asr.rows.length * asr.columns.length - 1 &&\r\n      ((rowCount === 2 && colCount >= 1) ||\r\n        (rowCount >= 1 && colCount === 2)) &&\r\n      delta === 1) ||\r\n    (newPosInRange < 0 && currentPosInRange === 0) ||\r\n    (rowCount === 1 && colCount === 1 && delta === 1); // must be so complicated\r\n\r\n  if (onShiftAndTabKeys) {\r\n    // shift + tab/enter and first cell focused in active range\r\n    const nextSelectionRangeIdx =\r\n      selectedRangeIdx === 0\r\n        ? state.selectedRanges.length - 1\r\n        : (selectedRangeIdx - 1) % state.selectedRanges.length;\r\n    const nextSelection = state.selectedRanges[nextSelectionRangeIdx];\r\n    state = focusLocation(\r\n      state,\r\n      newLocation(nextSelection.last.row, nextSelection.last.column),\r\n      false\r\n    );\r\n    return { ...state, activeSelectedRangeIdx: nextSelectionRangeIdx };\r\n  } else if (onTabKey) {\r\n    // tab/enter and last cell focused in active range\r\n    const nextSelectionRangeIdx =\r\n      (selectedRangeIdx + 1) % state.selectedRanges.length;\r\n    const nextSelection = state.selectedRanges[nextSelectionRangeIdx];\r\n    state = focusLocation(\r\n      state,\r\n      newLocation(nextSelection.first.row, nextSelection.first.column),\r\n      false\r\n    );\r\n    return { ...state, activeSelectedRangeIdx: nextSelectionRangeIdx };\r\n  } else {\r\n    // tab/enter and all cells inside active range except last cell && shift + tab/enter and all cells inside active range except first cell\r\n    const focusedCellColIdxInRange =\r\n      direction === \"up\" || direction === \"down\"\r\n        ? Math.floor(newPosInRange / rowCount)\r\n        : newPosInRange % colCount;\r\n    const focusedCellRowIdxInRange =\r\n      direction === \"up\" || direction === \"down\"\r\n        ? newPosInRange % rowCount\r\n        : Math.floor(newPosInRange / colCount);\r\n    const focusedCellColIdx = asr.first.column.idx + focusedCellColIdxInRange;\r\n    const focusedCellRowIdx = asr.first.row.idx + focusedCellRowIdxInRange;\r\n    state = focusLocation(\r\n      state,\r\n      state.cellMatrix.getLocation(focusedCellRowIdx, focusedCellColIdx),\r\n      asr\r\n        ? asr.columns.length > 1 || asr.rows.length > 1\r\n          ? false\r\n          : true\r\n        : true\r\n    );\r\n    return state;\r\n  }\r\n}\r\n\r\nfunction getVisibleHeight(state: State): number {\r\n  const { stickyBottomRange, stickyTopRange } = state.cellMatrix.ranges;\r\n  const wholeStickyHeight = stickyBottomRange.height + stickyTopRange.height;\r\n  const visibleScrollAreaHeight = getVisibleScrollAreaHeight(\r\n    state,\r\n    wholeStickyHeight\r\n  );\r\n  return visibleScrollAreaHeight;\r\n}\r\n\r\nfunction resizeSelectionPageDown(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  const visibleScrollAreaHeight = getVisibleHeight(state);\r\n\r\n  const isLastRowOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.last.row.idx < state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n  const isFirstRowOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.first.row.idx < state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n  const isOnLastRowOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.last.row.idx === state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n  const isOnFirstRowOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.first.row.idx === state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n  const isOnLastRowOnScrollableRange =\r\n    state.cellMatrix.scrollableRange.rows.length > 0 &&\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.last.row.idx === state.cellMatrix.scrollableRange.last.row.idx;\r\n  const isOnFirstRowOnScrollableRange =\r\n    state.cellMatrix.scrollableRange.rows.length > 0 &&\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.first.row.idx === state.cellMatrix.scrollableRange.last.row.idx;\r\n  const isLastRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.last.row.idx >= state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const isFirstRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.first.row.idx >=\r\n      state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n\r\n  const rowsOnScreen = state.cellMatrix.scrollableRange.rows.filter(\r\n    (row) => row.top + row.height < visibleScrollAreaHeight\r\n  );\r\n  return asr.last.row.idx <= state.cellMatrix.last.row.idx\r\n    ? asr.first.row.idx < location.row.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx,\r\n          asr.last.row.idx,\r\n          isFirstRowOnTopSticky\r\n            ? state.cellMatrix.ranges.stickyTopRange.last.row.idx\r\n            : isOnFirstRowOnTopSticky\r\n            ? state.cellMatrix.scrollableRange.rows.length > 0\r\n              ? state.cellMatrix.scrollableRange.first.row.idx\r\n              : state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isOnFirstRowOnScrollableRange\r\n            ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isFirstRowOnBottomSticky\r\n            ? state.cellMatrix.ranges.stickyBottomRange.last.row.idx\r\n            : asr.first.row.idx + rowsOnScreen.length >=\r\n              state.cellMatrix.scrollableRange.last.row.idx\r\n            ? state.cellMatrix.scrollableRange.last.row.idx\r\n            : asr.first.row.idx + rowsOnScreen.length,\r\n          \"vertical\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          isLastRowOnBottomSticky\r\n            ? state.cellMatrix.ranges.stickyBottomRange.last.row.idx\r\n            : isOnLastRowOnTopSticky\r\n            ? state.cellMatrix.scrollableRange.rows.length > 0\r\n              ? state.cellMatrix.scrollableRange.first.row.idx\r\n              : state.cellMatrix.ranges.stickyBottomRange.rows.length > 0\r\n              ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n              : state.cellMatrix.ranges.stickyTopRange.last.row.idx\r\n            : isOnLastRowOnScrollableRange\r\n            ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isLastRowOnTopSticky\r\n            ? state.cellMatrix.ranges.stickyTopRange.last.row.idx\r\n            : asr.last.row.idx + rowsOnScreen.length >=\r\n              state.cellMatrix.scrollableRange.last.row.idx\r\n            ? state.cellMatrix.scrollableRange.last.row.idx\r\n            : asr.last.row.idx + rowsOnScreen.length,\r\n          \"vertical\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelectionPageUp(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  const visibleScrollAreaHeight = getVisibleHeight(state);\r\n\r\n  const isFirstRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.first.row.idx > state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const isLastRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.last.row.idx === state.cellMatrix.ranges.stickyBottomRange.last.row.idx;\r\n  const isOnLastRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.last.row.idx ===\r\n      state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const isOnFirstRowOnBottomSticky =\r\n    state.cellMatrix.ranges.stickyBottomRange.rows.length > 0 &&\r\n    asr.first.row.idx ===\r\n      state.cellMatrix.ranges.stickyBottomRange.first.row.idx;\r\n  const isOnLastRowOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.last.row.idx === state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n  const isOnFirstRowOnScrollableRange =\r\n    state.cellMatrix.scrollableRange.rows.length > 0 &&\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.first.row.idx === state.cellMatrix.scrollableRange.first.row.idx;\r\n  const isOnLastRowOnScrollableRange =\r\n    state.cellMatrix.scrollableRange.rows.length > 0 &&\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.last.row.idx === state.cellMatrix.scrollableRange.first.row.idx;\r\n  const isOnTopSticky =\r\n    state.cellMatrix.ranges.stickyTopRange.rows.length > 0 &&\r\n    asr.first.row.idx <= state.cellMatrix.ranges.stickyTopRange.last.row.idx;\r\n\r\n  const rowsOnScreen = state.cellMatrix.scrollableRange.rows.filter(\r\n    (row) => row.top + row.height < visibleScrollAreaHeight\r\n  );\r\n\r\n  return asr.first.row.idx >= 0\r\n    ? asr.last.row.idx > location.row.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          isLastRowOnBottomSticky\r\n            ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isOnLastRowOnBottomSticky\r\n            ? state.cellMatrix.scrollableRange.rows.length > 0\r\n              ? state.cellMatrix.scrollableRange.last.row.idx\r\n              : state.cellMatrix.ranges.stickyTopRange.first.row.idx\r\n            : isOnLastRowOnScrollableRange\r\n            ? state.cellMatrix.ranges.stickyTopRange.last.row.idx\r\n            : isOnLastRowOnTopSticky\r\n            ? state.cellMatrix.ranges.stickyTopRange.first.row.idx\r\n            : asr.last.row.idx - rowsOnScreen.length >\r\n              state.cellMatrix.scrollableRange.first.row.idx\r\n            ? asr.last.row.idx - rowsOnScreen.length\r\n            : state.cellMatrix.scrollableRange.first.row.idx,\r\n          \"vertical\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx,\r\n          asr.last.row.idx,\r\n          isFirstRowOnBottomSticky\r\n            ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isOnFirstRowOnBottomSticky\r\n            ? state.cellMatrix.scrollableRange.rows.length > 0\r\n              ? state.cellMatrix.scrollableRange.last.row.idx\r\n              : state.cellMatrix.ranges.stickyTopRange.rows.length > 0\r\n              ? state.cellMatrix.ranges.stickyTopRange.first.row.idx\r\n              : state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : isOnFirstRowOnScrollableRange\r\n            ? state.cellMatrix.ranges.stickyTopRange.last.row.idx\r\n            : isOnTopSticky\r\n            ? state.cellMatrix.ranges.stickyTopRange.first.row.idx\r\n            : isFirstRowOnBottomSticky\r\n            ? state.cellMatrix.ranges.stickyBottomRange.first.row.idx\r\n            : asr.first.row.idx - rowsOnScreen.length >\r\n              state.cellMatrix.scrollableRange.first.row.idx\r\n            ? asr.first.row.idx - rowsOnScreen.length\r\n            : state.cellMatrix.scrollableRange.first.row.idx,\r\n          \"vertical\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelectionUp(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  return asr.first.row.idx >= 0\r\n    ? asr.last.row.idx > location.row.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx > 0 ? asr.last.row.idx - 1 : 0,\r\n          \"vertical\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx,\r\n          asr.last.row.idx,\r\n          asr.first.row.idx > 0 ? asr.first.row.idx - 1 : 0,\r\n          \"vertical\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelectionDown(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  return asr.last.row.idx <= state.cellMatrix.last.row.idx\r\n    ? asr.first.row.idx < location.row.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx,\r\n          asr.last.row.idx,\r\n          asr.first.row.idx >= state.cellMatrix.last.row.idx\r\n            ? state.cellMatrix.last.row.idx\r\n            : asr.first.row.idx + 1,\r\n          \"vertical\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx >= state.cellMatrix.last.row.idx\r\n            ? state.cellMatrix.last.row.idx\r\n            : asr.last.row.idx + 1,\r\n          \"vertical\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelectionLeft(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  return asr.first.column.idx >= 0\r\n    ? asr.last.column.idx > location.column.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx > 0 ? asr.last.column.idx - 1 : 0,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx,\r\n          \"horizontal\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx > 0 ? asr.first.column.idx - 1 : 0,\r\n          asr.last.row.idx,\r\n          asr.first.row.idx,\r\n          \"horizontal\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelectionRight(\r\n  state: State,\r\n  asr: Range,\r\n  location: Location\r\n): State {\r\n  return asr.last.column.idx <= state.cellMatrix.last.column.idx\r\n    ? asr.first.column.idx < location.column.idx\r\n      ? resizeSelection(\r\n          state,\r\n          asr.last.column.idx,\r\n          asr.first.column.idx >= state.cellMatrix.last.column.idx\r\n            ? state.cellMatrix.last.column.idx\r\n            : asr.first.column.idx + 1,\r\n          asr.last.row.idx,\r\n          asr.first.row.idx,\r\n          \"horizontal\"\r\n        )\r\n      : resizeSelection(\r\n          state,\r\n          asr.first.column.idx,\r\n          asr.last.column.idx >= state.cellMatrix.last.column.idx\r\n            ? state.cellMatrix.last.column.idx\r\n            : asr.last.column.idx + 1,\r\n          asr.first.row.idx,\r\n          asr.last.row.idx,\r\n          \"horizontal\"\r\n        )\r\n    : state;\r\n}\r\n\r\nfunction resizeSelection(\r\n  state: State,\r\n  firstColIdx: number,\r\n  lastColIdx: number,\r\n  firstRowIdx: number,\r\n  lastRowIdx: number,\r\n  scrollDirection?: \"vertical\" | \"horizontal\"\r\n): State {\r\n  if (!state.enableRangeSelection) return state;\r\n  const start = state.cellMatrix.getLocation(firstRowIdx, firstColIdx);\r\n  const end = state.cellMatrix.getLocation(lastRowIdx, lastColIdx);\r\n  const selectedRanges = state.selectedRanges.slice();\r\n  selectedRanges[state.activeSelectedRangeIdx] = state.cellMatrix.getRange(\r\n    start,\r\n    end\r\n  );\r\n  if (scrollDirection) {\r\n    const location = state.focusedLocation;\r\n    if (!location) {\r\n      return state;\r\n    }\r\n    let scrollToRowIdx = 0,\r\n      scrollToColIdx = 0;\r\n    let axis: \"vertical\" | \"horizontal\";\r\n    switch (scrollDirection) {\r\n      case \"horizontal\":\r\n        scrollToRowIdx = location.row.idx;\r\n        scrollToColIdx =\r\n          location.column.idx !== firstColIdx ? firstColIdx : lastColIdx;\r\n        break;\r\n      case \"vertical\":\r\n        scrollToRowIdx =\r\n          location.row.idx !== firstRowIdx ? firstRowIdx : lastRowIdx;\r\n        scrollToColIdx = location.column.idx;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const { left, top } = scrollCalculator(\r\n      state,\r\n      state.cellMatrix.getLocation(scrollToRowIdx, scrollToColIdx),\r\n      scrollDirection\r\n    );\r\n    scrollIntoView(state, top, left);\r\n  }\r\n\r\n  return { ...state, selectedRanges };\r\n}\r\n","import { KeyboardEvent } from '../Model/domEventsTypes';\r\nimport { State } from '../Model/State';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { isSelectionKey } from './isSelectionKey';\r\nimport { tryAppendChange } from './tryAppendChange';\r\n\r\nexport function handleKeyDownOnCellTemplate(state: State, event: KeyboardEvent): State {\r\n    const { focusedLocation: location } = state;\r\n    if (!location) {\r\n        return state;\r\n    }\r\n    const { cell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n    if (cellTemplate.handleKeyDown && !state.currentlyEditedCell) { // TODO need add !(event.shiftKey && event.keyCode === keyCodes.SPACE) to working keycodes (shift + space) in a lower condition\r\n        const { cell: newCell, enableEditMode } = cellTemplate.handleKeyDown(cell, event.keyCode, isSelectionKey(event), event.shiftKey, event.altKey);\r\n        if (JSON.stringify(newCell) !== JSON.stringify(cell) || enableEditMode) {\r\n            if (enableEditMode && !cell.nonEditable) {\r\n                return { ...state, currentlyEditedCell: newCell }\r\n            } else {\r\n                return tryAppendChange(state, location, newCell);\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n","import { State } from '../Model/State';\r\nimport { emptyCell } from './emptyCell';\r\nimport { tryAppendChange } from './tryAppendChange';\r\n\r\nexport function wipeSelectedRanges(state: State): State {\r\n    state.selectedRanges.forEach((range) =>\r\n    range.rows.forEach((row) =>\r\n      range.columns.forEach(\r\n        (column) =>\r\n          (state = tryAppendChange(\r\n            state,\r\n            { row, column },\r\n            emptyCell\r\n          ) as State)\r\n      )\r\n    )\r\n  );\r\n  return state;\r\n}","import { GridColumn, Location, isSelectionKey, Direction } from \"../../core\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { State } from \"../Model/State\";\r\nimport {\r\n  unSelectOneColumn,\r\n  selectMultipleColumns,\r\n  selectOneColumn,\r\n} from \"../Functions/selectRange\";\r\nimport { focusLocation } from \"../Functions/focusLocation\";\r\nimport { handleContextMenu } from \"../Functions/handleContextMenu\";\r\n\r\nexport class ColumnSelectionBehavior extends Behavior {\r\n  autoScrollDirection: Direction = \"horizontal\";\r\n  initialColumn!: GridColumn;\r\n\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    this.initialColumn = location.column;\r\n    if (\r\n      isSelectionKey(event) &&\r\n      state.selectionMode === \"column\" &&\r\n      state.selectedIds.some((id) => id === location.column.columnId)\r\n    ) {\r\n      state = unSelectOneColumn(state, location.column);\r\n    } else if (event.shiftKey && state.focusedLocation) {\r\n      state = selectMultipleColumns(\r\n        state,\r\n        state.focusedLocation.column,\r\n        location.column,\r\n        isSelectionKey(event)\r\n      );\r\n    } else {\r\n      state = focusLocation(state, location, false);\r\n      state = selectOneColumn(state, location.column, isSelectionKey(event));\r\n    }\r\n    return state;\r\n  }\r\n\r\n  handlePointerEnter(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    return selectMultipleColumns(\r\n      state,\r\n      this.initialColumn,\r\n      location.column,\r\n      isSelectionKey(event)\r\n    );\r\n  }\r\n\r\n  handleContextMenu(event: PointerEvent, state: State): State {\r\n    return handleContextMenu(event, state);\r\n  }\r\n}\r\n","import { Location, isSelectionKey, Direction, GridRow } from \"../../core\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { State } from \"../Model/State\";\r\nimport {\r\n  unSelectOneRow,\r\n  selectMultipleRows,\r\n  selectOneRow,\r\n} from \"../Functions/selectRange\";\r\nimport { focusLocation } from \"../Functions/focusLocation\";\r\nimport { handleContextMenu } from \"../Functions/handleContextMenu\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\n\r\nexport class RowSelectionBehavior extends Behavior {\r\n  autoScrollDirection: Direction = \"vertical\";\r\n  initialRow!: GridRow;\r\n\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    this.initialRow = location.row;\r\n    if (\r\n      isSelectionKey(event) &&\r\n      state.selectionMode === \"row\" &&\r\n      state.selectedIds.some((id) => id === location.row.rowId)\r\n    ) {\r\n      state = unSelectOneRow(state, location.row);\r\n    } else if (event.shiftKey && state.focusedLocation) {\r\n      state = selectMultipleRows(\r\n        state,\r\n        state.focusedLocation.row,\r\n        location.row,\r\n        isSelectionKey(event)\r\n      );\r\n    } else {\r\n      state = focusLocation(state, location, false);\r\n      state = selectOneRow(state, location.row, isSelectionKey(event));\r\n    }\r\n    return state;\r\n  }\r\n\r\n  handlePointerEnter(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    return selectMultipleRows(\r\n      state,\r\n      this.initialRow,\r\n      location.row,\r\n      isSelectionKey(event)\r\n    );\r\n  }\r\n\r\n  handleContextMenu(event: PointerEvent, state: State): State {\r\n    return handleContextMenu(event, state);\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Range } from \"../../core\";\r\n\r\nexport interface PartialAreaProps {\r\n  range: Range;\r\n  pane: Range;\r\n  style: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nexport const PartialArea: React.FC<PartialAreaProps> = ({\r\n  range,\r\n  pane,\r\n  style,\r\n  className,\r\n}) => {\r\n  const top =\r\n    range.first.row.idx <= pane.first.row.idx\r\n      ? pane.first.row.top\r\n      : range.first.row.top;\r\n  const left =\r\n    range.first.column.idx <= pane.first.column.idx\r\n      ? pane.first.column.left\r\n      : range.first.column.left;\r\n  const width =\r\n    (range.last.column.idx > pane.last.column.idx\r\n      ? pane.last.column.right\r\n      : range.last.column.right) - left;\r\n  const height =\r\n    (range.last.row.idx > pane.last.row.idx\r\n      ? pane.last.row.bottom\r\n      : range.last.row.bottom) - top;\r\n  const hasTopBorder = range.first.row.idx >= pane.first.row.idx;\r\n  const hasBottomBorder = range.last.row.idx <= pane.last.row.idx;\r\n  const hasRightBorder = range.last.column.idx <= pane.last.column.idx;\r\n  const hasLeftBorder = range.first.column.idx >= pane.first.column.idx;\r\n  return (\r\n    <div\r\n      className={`rg-partial-area ${className}`}\r\n      key={range.first.column.idx + pane.last.column.idx}\r\n      style={{\r\n        ...style,\r\n        top: top - (top === 0 ? 0 : 1),\r\n        left: left - (left === 0 ? 0 : 1),\r\n        width: width + (left === 0 ? 0 : 1),\r\n        height: height + (top === 0 ? 0 : 1),\r\n        borderTop: hasTopBorder ? style.borderTop : \"unset\",\r\n        borderBottom: hasBottomBorder ? style.borderBottom : \"unset\",\r\n        borderRight: hasRightBorder ? style.borderRight : \"unset\",\r\n        borderLeft: hasLeftBorder ? style.borderLeft : \"unset\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { Range } from \"../../core\";\r\n\r\nexport function isRangeIntersects(range1: Range, range2: Range): boolean {\r\n  return (\r\n    range2.first.column.idx <= range1.last.column.idx &&\r\n    range2.first.row.idx <= range1.last.row.idx &&\r\n    range2.last.column.idx >= range1.first.column.idx &&\r\n    range2.last.row.idx >= range1.first.row.idx\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Location,\r\n  Compatible,\r\n  Cell,\r\n  Range,\r\n  GridRow,\r\n  GridColumn,\r\n  getCompatibleCellAndTemplate,\r\n  CellMatrix,\r\n  tryAppendChangeHavingGroupId,\r\n  isMacOs,\r\n} from \"../../core\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\nimport { State } from \"../Model/State\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { getActiveSelectedRange } from \"../Functions/getActiveSelectedRange\";\r\nimport { PartialArea } from \"../Components/PartialArea\";\r\nimport { isRangeIntersects } from \"../Functions/isRangeIntersectsWith\";\r\nimport { newLocation } from \"../Functions/newLocation\";\r\n\r\ntype Direction = \"\" | \"left\" | \"right\" | \"up\" | \"down\";\r\n\r\nexport class FillHandleBehavior extends Behavior {\r\n  private fillDirection: Direction = \"\";\r\n  private fillRange?: Range;\r\n\r\n  handlePointerEnter(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    const selectedRange = getActiveSelectedRange(state);\r\n    this.fillDirection = this.getFillDirection(selectedRange, location);\r\n    this.fillRange = this.getFillRange(\r\n      state.cellMatrix,\r\n      selectedRange,\r\n      location,\r\n      this.fillDirection\r\n    );\r\n    return { ...state };\r\n  }\r\n\r\n  handlePointerUp(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    const activeSelectedRange = getActiveSelectedRange(state);\r\n    const cellMatrix = state.cellMatrix;\r\n    if (!activeSelectedRange || this.fillRange === undefined) {\r\n      return state;\r\n    }\r\n    const isKeyPressed = isMacOs() ? event.altKey : event.ctrlKey;\r\n    this.fillRange = state.cellMatrix.validateRange(this.fillRange);\r\n    const getCompatibleCell = (location: Location) =>\r\n      getCompatibleCellAndTemplate(state, location);\r\n\r\n    const fillCellsWithPredictedValues = (\r\n      selectedCells: Compatible<Cell>[],\r\n      cellsToFill: Compatible<Cell>[]\r\n    ): Compatible<Cell>[] => {\r\n      const numbers = selectedCells.map((cell) => cell.value);\r\n      const parameters = this.findRegressionFunction(\r\n        numbers,\r\n        Array.from({ length: numbers.length }, (_, index) => index + 1)\r\n      );\r\n      const areParametersNaNs = isNaN(parameters.a) && isNaN(parameters.b);\r\n      return cellsToFill.map((cell, i) => {\r\n        const x = this.calculateXForRegressionFunction(\r\n          i + numbers.length + 1,\r\n          parameters.a,\r\n          parameters.b\r\n        );\r\n        const selectedCell = selectedCells[i % selectedCells.length];\r\n        return {\r\n          ...cell,\r\n          text:\r\n            areParametersNaNs || isKeyPressed\r\n              ? selectedCell.text\r\n              : x.toString(),\r\n          groupId: selectedCell.groupId,\r\n          value: areParametersNaNs || isKeyPressed ? selectedCell.value : x,\r\n        };\r\n      });\r\n    };\r\n\r\n    const fillVertically = (\r\n      state: State,\r\n      activeSelectedRange: Range,\r\n      direction: \"up\" | \"down\"\r\n    ): State => {\r\n      activeSelectedRange.columns.forEach((column) => {\r\n        let selectedCells = activeSelectedRange.rows.map(\r\n          (row) => getCompatibleCell(newLocation(row, column)).cell\r\n        );\r\n        selectedCells =\r\n          direction === \"up\" ? selectedCells.reverse() : selectedCells;\r\n        if (this.fillRange) {\r\n          let cellsToFill = this.fillRange.rows.map(\r\n            (row) => getCompatibleCell(newLocation(row, column)).cell\r\n          );\r\n          cellsToFill = fillCellsWithPredictedValues(\r\n            selectedCells,\r\n            cellsToFill\r\n          );\r\n          cellsToFill =\r\n            direction === \"up\" ? cellsToFill.reverse() : cellsToFill;\r\n          state = this.fillColumn(state, column, cellsToFill);\r\n        }\r\n      });\r\n      return state;\r\n    };\r\n\r\n    const fillHorizontally = (\r\n      state: State,\r\n      activeSelectedRange: Range,\r\n      direction: \"left\" | \"right\"\r\n    ): State => {\r\n      activeSelectedRange.rows.forEach((row) => {\r\n        let selectedCells = activeSelectedRange.columns.map(\r\n          (column) => getCompatibleCell(newLocation(row, column)).cell\r\n        );\r\n        selectedCells =\r\n          direction === \"left\" ? selectedCells.reverse() : selectedCells;\r\n        if (this.fillRange) {\r\n          let cellsToFill = this.fillRange.columns.map(\r\n            (column) => getCompatibleCell(newLocation(row, column)).cell\r\n          );\r\n          cellsToFill = fillCellsWithPredictedValues(\r\n            selectedCells,\r\n            cellsToFill\r\n          );\r\n          cellsToFill =\r\n            direction === \"left\" ? cellsToFill.reverse() : cellsToFill;\r\n          state = this.fillRow(state, row, cellsToFill);\r\n        }\r\n      });\r\n      return state;\r\n    };\r\n\r\n    switch (this.fillDirection) {\r\n      case \"right\":\r\n        state = fillHorizontally(state, activeSelectedRange, \"right\");\r\n        state = {\r\n          ...state,\r\n          selectedRanges: [\r\n            cellMatrix.getRange(\r\n              activeSelectedRange.first,\r\n              newLocation(activeSelectedRange.last.row, location.column)\r\n            ),\r\n          ],\r\n          selectedIds: [\r\n            ...activeSelectedRange.columns.map((col) => col.columnId),\r\n            ...this.fillRange.columns.map((col) => col.columnId),\r\n          ],\r\n        };\r\n        break;\r\n      case \"left\":\r\n        state = fillHorizontally(state, activeSelectedRange, \"left\");\r\n        state = {\r\n          ...state,\r\n          selectedRanges: [\r\n            cellMatrix.getRange(\r\n              activeSelectedRange.last,\r\n              newLocation(activeSelectedRange.first.row, location.column)\r\n            ),\r\n          ],\r\n          selectedIds: [\r\n            ...activeSelectedRange.columns.map((col) => col.columnId),\r\n            ...this.fillRange.columns.map((col) => col.columnId),\r\n          ],\r\n        };\r\n        break;\r\n      case \"up\":\r\n        state = fillVertically(state, activeSelectedRange, \"up\");\r\n        state = {\r\n          ...state,\r\n          selectedRanges: [\r\n            cellMatrix.getRange(activeSelectedRange.last, {\r\n              row: location.row,\r\n              column: activeSelectedRange.first.column,\r\n            }),\r\n          ],\r\n          selectedIds: [\r\n            ...activeSelectedRange.rows.map((row) => row.rowId),\r\n            ...this.fillRange.rows.map((row) => row.rowId),\r\n          ],\r\n        };\r\n        break;\r\n      case \"down\":\r\n        state = fillVertically(state, activeSelectedRange, \"down\");\r\n        state = {\r\n          ...state,\r\n          selectedRanges: [\r\n            cellMatrix.getRange(\r\n              activeSelectedRange.first,\r\n              newLocation(location.row, activeSelectedRange.last.column)\r\n            ),\r\n          ],\r\n          selectedIds: [\r\n            ...activeSelectedRange.rows.map((row) => row.rowId),\r\n            ...this.fillRange.rows.map((row) => row.rowId),\r\n          ],\r\n        };\r\n        break;\r\n    }\r\n    return state;\r\n  }\r\n\r\n  calculateXForRegressionFunction(y: number, a: number, b: number): number {\r\n    return Math.round(((y - a) / b) * 1e5) / 1e5;\r\n  }\r\n\r\n  findRegressionFunction(\r\n    valuesX: number[],\r\n    valuesY: number[]\r\n  ): { a: number; b: number } {\r\n    const sumX = this.sumArray(valuesX);\r\n    const sumY = this.sumArray(valuesY);\r\n    const sumXY = this.sumArray(this.multipleArrays(valuesX, valuesY));\r\n    const sumPowX = this.sumArray(this.powerArray(valuesX, 2));\r\n    const n = valuesX.length;\r\n    const upValue = Math.fround(n * sumXY - sumX * sumY);\r\n    const downValue = Math.fround(n * sumPowX - Math.pow(sumX, 2));\r\n    const b = upValue / downValue;\r\n    const a = sumY / n - b * (sumX / n);\r\n    return { a, b };\r\n  }\r\n\r\n  sumArray(arr: number[]): number {\r\n    return arr.reduce((a, b) => a + b);\r\n  }\r\n\r\n  multipleArrays(first: number[], second: number[]): number[] {\r\n    const result = [];\r\n    const stopCondition =\r\n      first.length <= second.length ? first.length : second.length;\r\n    for (let i = 0; i < stopCondition; ++i) {\r\n      result.push(first[i] * second[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  powerArray(arr: number[], power: number): number[] {\r\n    return arr.map((x) => Math.pow(x, power));\r\n  }\r\n\r\n  renderPanePart(state: State, pane: Range): React.ReactNode {\r\n    return (\r\n      this.fillDirection &&\r\n      this.fillRange &&\r\n      isRangeIntersects(pane, this.fillRange) && (\r\n        <PartialArea\r\n          range={state.cellMatrix.validateRange(this.fillRange)}\r\n          className=\"rg-partial-area-part\"\r\n          pane={pane}\r\n          style={{\r\n            backgroundColor: \"\",\r\n            borderTop:\r\n              this.fillDirection === \"down\" ? \"0px solid transparent\" : \"\",\r\n            borderBottom:\r\n              this.fillDirection === \"up\" ? \"0px solid transparent\" : \"\",\r\n            borderLeft:\r\n              this.fillDirection === \"right\" ? \"0px solid transparent\" : \"\",\r\n            borderRight:\r\n              this.fillDirection === \"left\" ? \"0px solid transparent\" : \"\",\r\n          }}\r\n        />\r\n      )\r\n    );\r\n  }\r\n\r\n  private getFillDirection(selectedRange: Range, pointerLocation: Location) {\r\n    // active selection\r\n    const differences: { direction: Direction; value: number }[] = [];\r\n    differences.push({ direction: \"\", value: 0 });\r\n    differences.push({\r\n      direction: \"up\",\r\n      value:\r\n        pointerLocation.row.idx < selectedRange.first.row.idx\r\n          ? selectedRange.first.row.idx - pointerLocation.row.idx\r\n          : 0,\r\n    });\r\n    differences.push({\r\n      direction: \"down\",\r\n      value:\r\n        pointerLocation.row.idx > selectedRange.last.row.idx\r\n          ? pointerLocation.row.idx - selectedRange.last.row.idx\r\n          : 0,\r\n    });\r\n    differences.push({\r\n      direction: \"left\",\r\n      value:\r\n        pointerLocation.column.idx < selectedRange.first.column.idx\r\n          ? selectedRange.first.column.idx - pointerLocation.column.idx\r\n          : 0,\r\n    });\r\n    differences.push({\r\n      direction: \"right\",\r\n      value:\r\n        pointerLocation.column.idx > selectedRange.last.column.idx\r\n          ? pointerLocation.column.idx - selectedRange.last.column.idx\r\n          : 0,\r\n    });\r\n    return differences.reduce((prev, current) =>\r\n      prev.value >= current.value ? prev : current\r\n    ).direction;\r\n  }\r\n\r\n  private getFillRange(\r\n    cellMatrix: CellMatrix,\r\n    selectedRange: Range,\r\n    location: Location,\r\n    fillDirection: Direction\r\n  ) {\r\n    switch (fillDirection) {\r\n      case \"right\":\r\n        return cellMatrix.getRange(\r\n          cellMatrix.getLocation(\r\n            selectedRange.first.row.idx,\r\n            cellMatrix.last.column.idx < selectedRange.last.column.idx + 1\r\n              ? cellMatrix.last.column.idx\r\n              : selectedRange.last.column.idx + 1\r\n          ),\r\n          newLocation(selectedRange.last.row, location.column)\r\n        );\r\n      case \"left\":\r\n        return cellMatrix.getRange(\r\n          newLocation(selectedRange.first.row, location.column),\r\n          cellMatrix.getLocation(\r\n            selectedRange.last.row.idx,\r\n            cellMatrix.first.column.idx > selectedRange.first.column.idx - 1\r\n              ? cellMatrix.first.column.idx\r\n              : selectedRange.first.column.idx - 1\r\n          )\r\n        );\r\n      case \"up\":\r\n        return cellMatrix.getRange(\r\n          newLocation(location.row, selectedRange.first.column),\r\n          cellMatrix.getLocation(\r\n            cellMatrix.first.row.idx > selectedRange.first.row.idx - 1\r\n              ? cellMatrix.first.row.idx\r\n              : selectedRange.first.row.idx - 1,\r\n            selectedRange.last.column.idx\r\n          )\r\n        );\r\n      case \"down\":\r\n        return cellMatrix.getRange(\r\n          cellMatrix.getLocation(\r\n            cellMatrix.last.row.idx < selectedRange.last.row.idx + 1\r\n              ? cellMatrix.last.row.idx\r\n              : selectedRange.last.row.idx + 1,\r\n            selectedRange.first.column.idx\r\n          ),\r\n          newLocation(location.row, selectedRange.last.column)\r\n        );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private fillRow(\r\n    state: State,\r\n    row: GridRow,\r\n    values: Compatible<Cell>[]\r\n  ): State {\r\n    this.fillRange?.columns.forEach((col, i) => {\r\n      state = tryAppendChangeHavingGroupId(\r\n        state,\r\n        newLocation(row, col),\r\n        values[i]\r\n      ) as State;\r\n    });\r\n    return state;\r\n  }\r\n\r\n  private fillColumn(\r\n    state: State,\r\n    column: GridColumn,\r\n    values: Compatible<Cell>[]\r\n  ): State {\r\n    this.fillRange?.rows.forEach((row, i) => {\r\n      state = tryAppendChangeHavingGroupId(\r\n        state,\r\n        newLocation(row, column),\r\n        values[i]\r\n      ) as State;\r\n    });\r\n    return state;\r\n  }\r\n}\r\n","import {\r\n    Direction, PointerLocation, getScrollOfScrollableElement,\r\n} from '../../core';\r\nimport { PointerEvent } from '../Model/domEventsTypes';\r\nimport { handleContextMenu } from '../Functions/handleContextMenu';\r\nimport { Behavior } from '../Model/Behavior';\r\nimport { State } from '../Model/State';\r\n\r\nexport class ColumnReorderBehavior extends Behavior {\r\n    private initialColumnIdx!: number;\r\n    private lastPossibleDropLocation?: PointerLocation;\r\n    private pointerOffset!: number;\r\n    private selectedIdxs!: number[];\r\n    autoScrollDirection: Direction = 'horizontal';\r\n\r\n    handlePointerDown(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        this.initialColumnIdx = location.column.idx;\r\n        this.lastPossibleDropLocation = location;\r\n        this.selectedIdxs = state.selectedIndexes.sort();\r\n        const columns = this.selectedIdxs.map(i => state.cellMatrix.columns[i]);\r\n        const leftIndexes = this.selectedIdxs.filter(i => i < location.column.idx);\r\n        const leftColumns = leftIndexes.map(i => state.cellMatrix.columns[i]);\r\n        const leftColumnsWidth = leftColumns.reduce((sum, col) => sum + col.width, 0);\r\n        this.pointerOffset = leftColumnsWidth + location.cellX;\r\n        return {\r\n            ...state,\r\n            lineOrientation: 'vertical',\r\n            shadowSize: columns.reduce((sum, col) => sum + col.width, 0),\r\n            shadowPosition: this.getShadowPosition(location, state)\r\n        }\r\n    }\r\n\r\n    handlePointerMove(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        return {\r\n            ...state,\r\n            shadowPosition: this.getShadowPosition(location, state)\r\n        }\r\n    }\r\n\r\n    getShadowPosition(location: PointerLocation, state: State): number {\r\n        const x = location.viewportX - this.pointerOffset;\r\n        const max = state.cellMatrix.width - state.shadowSize;\r\n        if (x < 0) {\r\n            return 0;\r\n        } else if (x > max) {\r\n            return max;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    handlePointerEnter(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        const dropLocation = this.getLastPossibleDropLocation(location, state);\r\n        const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n        if (!dropLocation) return state;\r\n        const drawRight = dropLocation.column.idx > this.initialColumnIdx;\r\n        const linePosition = Math.min(dropLocation.viewportX - dropLocation.cellX + (drawRight ? dropLocation.column.width : 0),\r\n            (state.visibleRange?.width || 0) + state.cellMatrix.ranges.stickyLeftRange.width + state.cellMatrix.ranges.stickyRightRange.width + scrollLeft\r\n        )\r\n        this.lastPossibleDropLocation = dropLocation;\r\n        return {\r\n            ...state,\r\n            linePosition\r\n        }\r\n    }\r\n\r\n    getLastPossibleDropLocation(currentLocation: PointerLocation, state: State): PointerLocation | undefined {\r\n        const position = currentLocation.column.idx <= this.initialColumnIdx ? 'before' : 'after';\r\n        const columnIds = this.selectedIdxs.map(i => state.cellMatrix.columns[i].columnId);\r\n        if (!state.props?.canReorderColumns || state.props.canReorderColumns(currentLocation.column.columnId, columnIds, position)) {\r\n            return currentLocation;\r\n        }\r\n        return this.lastPossibleDropLocation;\r\n    }\r\n\r\n    handlePointerUp(event: PointerEvent, location: PointerLocation, state: State): State {\r\n        if (location.column.idx !== this.initialColumnIdx && this.lastPossibleDropLocation && state.props?.onColumnsReordered) {\r\n            const isBefore = this.lastPossibleDropLocation.column.idx <= this.initialColumnIdx;\r\n            const columnIds = this.selectedIdxs.map(i => state.cellMatrix.columns[i].columnId);\r\n            state.props?.onColumnsReordered(this.lastPossibleDropLocation.column.columnId, columnIds, isBefore ? 'before' : 'after');\r\n        }\r\n        return {\r\n            ...state,\r\n            linePosition: -1,\r\n            shadowPosition: -1,\r\n            shadowCursor: 'default'\r\n        };\r\n    }\r\n\r\n    handleContextMenu(event: PointerEvent, state: State): State {\r\n        return handleContextMenu(event, state);\r\n    }\r\n\r\n}\r\n","import { Behavior } from \"../Model/Behavior\";\r\nimport { State } from \"../Model/State\";\r\nimport {\r\n  PointerLocation,\r\n  getScrollOfScrollableElement,\r\n  Id,\r\n  DropPosition,\r\n  Direction,\r\n} from \"../../core\";\r\nimport { PointerEvent } from \"../Model/domEventsTypes\";\r\nimport { handleContextMenu } from \"../Functions/handleContextMenu\";\r\n\r\n// TODO do a total rewrite here\r\nexport class RowReorderBehavior extends Behavior {\r\n  // TODO dont use internal state. Always fresh recalculation based on input data!\r\n  private initialRowIdx!: number;\r\n  private lastPossibleDropLocation?: PointerLocation;\r\n  private pointerOffset!: number;\r\n  private selectedIds!: Id[];\r\n  private position!: DropPosition;\r\n  autoScrollDirection: Direction = \"vertical\";\r\n\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    this.initialRowIdx = location.row.idx;\r\n    this.lastPossibleDropLocation = location;\r\n    const indexes = state.selectedIndexes.sort();\r\n    const rows = indexes.map((i) => state.cellMatrix.rows[i]);\r\n    const upperIndexes = indexes.filter((i) => i < location.row.idx);\r\n    const upperRows = upperIndexes.map((i) => state.cellMatrix.rows[i]);\r\n    const upperRowsHeight = upperRows.reduce((sum, row) => sum + row.height, 0);\r\n    this.pointerOffset = upperRowsHeight + location.cellY;\r\n    this.selectedIds = rows.map((r) => r.rowId);\r\n    return {\r\n      ...state,\r\n      lineOrientation: \"horizontal\",\r\n      shadowSize: rows.reduce((sum, col) => sum + col.height, 0),\r\n      shadowPosition: this.getShadowPosition(location, state),\r\n    };\r\n  }\r\n\r\n  handlePointerMove(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    const shadowPosition = this.getShadowPosition(location, state);\r\n    let shadowCursor = \"-webkit-grabbing\";\r\n    let linePosition = state.linePosition;\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const pointerLocation = location.viewportY + 0;\r\n    this.lastPossibleDropLocation = this.getLastPossibleDropLocation(\r\n      state,\r\n      location\r\n    );\r\n    if (\r\n      this.lastPossibleDropLocation &&\r\n      this.lastPossibleDropLocation.row.idx !== this.initialRowIdx\r\n    ) {\r\n      const drawDown =\r\n        this.lastPossibleDropLocation.row.idx > this.initialRowIdx;\r\n      linePosition = Math.min(\r\n        this.lastPossibleDropLocation.viewportY -\r\n          this.lastPossibleDropLocation.cellY +\r\n          (drawDown ? this.lastPossibleDropLocation.row.height : 0),\r\n        (state.visibleRange?.height || 0) +\r\n          state.cellMatrix.ranges.stickyTopRange.height +\r\n          state.cellMatrix.ranges.stickyBottomRange.height +\r\n          scrollTop\r\n      );\r\n      if (!state.props?.canReorderRows) {\r\n        this.position = drawDown ? \"after\" : \"before\";\r\n      } else {\r\n        if (\r\n          state.props.canReorderRows &&\r\n          state.props.canReorderRows(\r\n            this.lastPossibleDropLocation.row.rowId,\r\n            this.selectedIds,\r\n            this.position\r\n          )\r\n        ) {\r\n          if (drawDown) {\r\n            if (\r\n              pointerLocation >\r\n                location.row.top +\r\n                  state.cellMatrix.ranges.stickyTopRange.height &&\r\n              pointerLocation <\r\n                location.row.top +\r\n                  state.cellMatrix.ranges.stickyTopRange.height +\r\n                  location.row.height / 2\r\n            ) {\r\n              this.position = \"on\";\r\n              shadowCursor = \"move\";\r\n              linePosition = -1;\r\n            } else {\r\n              this.position = \"after\";\r\n            }\r\n          } else {\r\n            if (\r\n              pointerLocation >\r\n                location.row.top +\r\n                  state.cellMatrix.ranges.stickyTopRange.height +\r\n                  location.row.height / 2 &&\r\n              pointerLocation <\r\n                location.row.top +\r\n                  state.cellMatrix.ranges.stickyTopRange.height +\r\n                  location.row.height\r\n            ) {\r\n              this.position = \"on\";\r\n              shadowCursor = \"move\";\r\n              linePosition = -1;\r\n            } else {\r\n              this.position = \"before\";\r\n            }\r\n          }\r\n        } else {\r\n          linePosition = -1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      shadowPosition,\r\n      linePosition,\r\n      shadowCursor,\r\n    };\r\n  }\r\n\r\n  getShadowPosition(location: PointerLocation, state: State): number {\r\n    const y = location.viewportY - this.pointerOffset;\r\n    const max = state.cellMatrix.height - state.shadowSize;\r\n    if (y < 0) {\r\n      return 0;\r\n    } else if (y > max) {\r\n      return max;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  getLastPossibleDropLocation(\r\n    state: State,\r\n    currentLocation: PointerLocation\r\n  ): PointerLocation | undefined {\r\n    if (\r\n      !state.props?.canReorderRows ||\r\n      state.props.canReorderRows(\r\n        currentLocation.row.rowId,\r\n        this.selectedIds,\r\n        this.position\r\n      )\r\n    ) {\r\n      return currentLocation;\r\n    }\r\n    return this.lastPossibleDropLocation;\r\n  }\r\n\r\n  handlePointerUp(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    if (\r\n      location.row.idx !== this.initialRowIdx &&\r\n      this.lastPossibleDropLocation &&\r\n      state.props?.onRowsReordered\r\n    ) {\r\n      state.props?.onRowsReordered(\r\n        this.lastPossibleDropLocation.row.rowId,\r\n        this.selectedIds,\r\n        this.position\r\n      );\r\n    }\r\n    return {\r\n      ...state,\r\n      linePosition: -1,\r\n      shadowPosition: -1,\r\n      shadowCursor: \"default\",\r\n    };\r\n  }\r\n\r\n  handleContextMenu(event: PointerEvent, state: State): State {\r\n    return handleContextMenu(event, state);\r\n  }\r\n}\r\n","import { State } from '../Model/State';\r\nimport { Range } from '../Model/Range';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { emptyCell } from './emptyCell';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { tryAppendChange } from './tryAppendChange';\r\nimport { Id } from '../Model/PublicModel';\r\n\r\nexport function getDataToCopy(\r\n    state: State,\r\n    activeSelectedRange: Range,\r\n    removeValues = false\r\n  ): { div: HTMLDivElement; text: string } {\r\n    const { div, table, location } = createHTMLElements(activeSelectedRange);\r\n    const text = copyElements(\r\n      state,\r\n      location,\r\n      activeSelectedRange,\r\n      table,\r\n      removeValues\r\n    );\r\n    setStyles(div, table);\r\n    return { div, text };\r\n  }\r\n  \r\n  function copyElements(\r\n    state: State,\r\n    location: Location,\r\n    activeSelectedRange: Range,\r\n    table: HTMLTableElement,\r\n    removeValues: boolean\r\n  ): string {\r\n    let text = \"\";\r\n    let prevId: Id = \"\";\r\n    activeSelectedRange.rows.forEach((row) => {\r\n      const tableRow = table.insertRow();\r\n      activeSelectedRange.columns.forEach((column) => {\r\n        const tableCell = tableRow.insertCell();\r\n        const { cell } = getCompatibleCellAndTemplate(state, { row, column });\r\n        const validatedText = cell.text || \" \";\r\n        tableCell.textContent = validatedText;\r\n        text =\r\n          prevId === \"\"\r\n            ? cell.text\r\n            : text + (prevId === row.rowId ? \"\\t\" : \"\\n\") + validatedText;\r\n        prevId = row.rowId;\r\n        tableCell.setAttribute(\"data-reactgrid\", JSON.stringify(cell));\r\n        tableCell.style.border = \"1px solid #D3D3D3\";\r\n        clearCell(state as State, { row, column }, removeValues);\r\n      });\r\n    });\r\n  \r\n    return text;\r\n  }\r\n\r\nexport function processSingleCell(tableRow: HTMLTableRowElement, state: State, location: Location): void {\r\n    const tableCell: HTMLTableDataCellElement = tableRow.insertCell();\r\n    const { cell } = getCompatibleCellAndTemplate(state, location);\r\n    tableCell.textContent = cell.text ? cell.text : ' ';\r\n    tableCell.setAttribute('data-reactgrid', JSON.stringify(cell));\r\n    tableCell.style.border = '1px solid #D3D3D3';\r\n}\r\n\r\nexport function createHTMLElements(activeSelectedRange: Range): { div: HTMLDivElement, table: HTMLTableElement, location: Location } {\r\n    const div = document.createElement('div');\r\n    const table = document.createElement('table');\r\n    table.setAttribute('empty-cells', 'show');\r\n    table.setAttribute('data-reactgrid', 'reactgrid-content');\r\n    const location = { row: activeSelectedRange.first.row, column: activeSelectedRange.first.column };\r\n    return { div, table, location };\r\n}\r\n\r\nexport function setStyles(div: HTMLDivElement, table: HTMLTableElement): void {\r\n    div.setAttribute('contenteditable', 'true');\r\n    div.style.position = 'fixed';\r\n    div.style.top = '50%';\r\n    div.style.left = '50%';\r\n    div.appendChild(table);\r\n}\r\n\r\nexport function clearCell(state: State, location: Location, removeValues: boolean): void {\r\n    if (removeValues) {\r\n        state = tryAppendChange(state, location, emptyCell);\r\n    }\r\n}","import { ClipboardEvent } from '../Model/domEventsTypes';\r\nimport { State } from '../Model/State';\r\nimport { getDataToCopy } from './getDataToCopy';\r\nimport { getActiveSelectedRange } from './getActiveSelectedRange';\r\nimport { isBrowserSafari } from './safari';\r\n\r\nexport function handleCopy(event: ClipboardEvent, state: State, removeValues = false): State {\r\n    const activeSelectedRange = getActiveSelectedRange(state);\r\n    if (!activeSelectedRange) {\r\n      return state;\r\n    }\r\n    const { div } = getDataToCopy(state, activeSelectedRange, removeValues);\r\n    copyDataCommands(event, state, div);\r\n    return { ...state, copyRange: activeSelectedRange };\r\n}\r\n\r\nexport function copyDataCommands(event: ClipboardEvent, state: State, div: HTMLDivElement): void {\r\n    if (isBrowserSafari()) {\r\n        event.clipboardData.setData('text/html', div.innerHTML);\r\n    } else {\r\n        document.body.appendChild(div);\r\n        div.focus();\r\n        document.execCommand('selectAll', false);\r\n        document.execCommand('copy');\r\n        document.body.removeChild(div);\r\n    }\r\n\r\n    state.hiddenFocusElement?.focus({ preventScroll: true });\r\n    event.preventDefault();\r\n}","export function isBrowserSafari(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for circle ci compiler\r\n        return window.navigator.userAgent.indexOf('Safari') !== -1\r\n            && navigator.userAgent.indexOf('Chrome') === -1;\r\n    }\r\n    return false;\r\n}\r\n","import { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\nimport { Cell, Compatible } from '../Model/PublicModel';\r\nimport { tryAppendChange } from './tryAppendChange';\r\n\r\nexport function tryAppendChangeHavingGroupId(state: State, location: Location, cell: Compatible<Cell>): State {\r\n    const { cell: cellInLocation } = getCompatibleCellAndTemplate(state, location);\r\n    if (cellInLocation.groupId === cell.groupId) {\r\n        return tryAppendChange(state, location, cell);\r\n    } else {\r\n        console.warn(`New cells data can't be appended into location: ('${location.column.columnId}', '${location.row.rowId}'). Cell's 'groupId' field doesn't match!`);\r\n    }\r\n    return state;\r\n}","import { Cell, Compatible } from \"../Model/PublicModel\";\r\nimport { State } from \"../Model/State\";\r\nimport { Location } from \"../Model/InternalModel\";\r\nimport { tryAppendChangeHavingGroupId } from \"./tryAppendChangeHavingGroupId\";\r\nimport { getActiveSelectedRange } from \"./getActiveSelectedRange\";\r\nimport { newLocation } from \"./newLocation\";\r\n\r\nexport function pasteData(state: State, rows: Compatible<Cell>[][]): State {\r\n  const activeSelectedRange = getActiveSelectedRange(state);\r\n  if (rows.length === 1 && rows[0].length === 1) {\r\n    // pasting single cell on active selected range\r\n    activeSelectedRange.rows.forEach((row) =>\r\n      activeSelectedRange.columns.forEach((column) => {\r\n        state = tryAppendChangeHavingGroupId(\r\n          state, \r\n          newLocation(row, column),\r\n          rows[0][0]\r\n        ) as State;\r\n      })\r\n    );\r\n  } else {\r\n    let lastLocation: Location | undefined;\r\n    const cellMatrix = state.cellMatrix;\r\n    rows.forEach((row, ri) =>\r\n      row.forEach((cell, ci) => {\r\n        const rowIdx = activeSelectedRange.first.row.idx + ri;\r\n        const columnIdx = activeSelectedRange.first.column.idx + ci;\r\n        if (\r\n          rowIdx <= cellMatrix.last.row.idx &&\r\n          columnIdx <= cellMatrix.last.column.idx\r\n        ) {\r\n          lastLocation = cellMatrix.getLocation(rowIdx, columnIdx);\r\n          state = tryAppendChangeHavingGroupId(\r\n            state,\r\n            lastLocation,\r\n            cell\r\n          ) as State;\r\n        }\r\n      })\r\n    );\r\n    if (!lastLocation) {\r\n      return state;\r\n    }\r\n    return {\r\n      ...state,\r\n      selectedRanges: [\r\n        cellMatrix.getRange(activeSelectedRange.first, lastLocation),\r\n      ],\r\n      activeSelectedRangeIdx: 0,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  PointerLocation,\r\n  Location,\r\n  handleKeyUp,\r\n  handleDoubleClick,\r\n  getScrollOfScrollableElement,\r\n  isSelectionKey,\r\n} from \"../../core\";\r\nimport {\r\n  KeyboardEvent,\r\n  ClipboardEvent,\r\n  PointerEvent,\r\n} from \"../Model/domEventsTypes\";\r\nimport { CellSelectionBehavior } from \"./CellSelectionBehavior\";\r\nimport { Behavior } from \"../Model/Behavior\";\r\nimport { handleKeyDown } from \"../Functions/handleKeyDown\";\r\nimport { State } from \"../Model/State\";\r\nimport { ColumnSelectionBehavior } from \"./ColumnSelectionBehavior\";\r\nimport { RowSelectionBehavior } from \"./RowSelectionBehavior\";\r\nimport { FillHandleBehavior } from \"./FillHandleBehavior\";\r\nimport { handleContextMenu } from \"../Functions/handleContextMenu\";\r\nimport { ResizeColumnBehavior } from \"./ResizeColumnBehavior\";\r\nimport { ColumnReorderBehavior } from \"./ColumnReorderBehavior\";\r\nimport { RowReorderBehavior } from \"./RowReorderBehavior\";\r\nimport { handleCopy } from \"../Functions/handleCopy\";\r\nimport { handlePaste } from \"../Functions/handlePaste\";\r\n\r\nexport class DefaultBehavior extends Behavior {\r\n  handlePointerDown(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): State {\r\n    state = {\r\n      ...state,\r\n      currentBehavior: this.getNewBehavior(event, location, state),\r\n      contextMenuPosition: { top: -1, left: -1 },\r\n    };\r\n    return state.currentBehavior.handlePointerDown(\r\n      event,\r\n      location,\r\n      state\r\n    ) as State;\r\n  }\r\n\r\n  private getNewBehavior(\r\n    event: PointerEvent,\r\n    location: PointerLocation,\r\n    state: State\r\n  ): Behavior {\r\n    // changing behavior will disable all keyboard event handlers\r\n    const target = event.target as HTMLDivElement;\r\n    if (\r\n      ((event.pointerType === \"mouse\" &&\r\n        target.className === \"rg-resize-handle\") ||\r\n        (event.pointerType === \"touch\" &&\r\n          (target.className === \"rg-touch-resize-handle\" ||\r\n            target.className === \"rg-resize-handle\"))) &&\r\n      location.row.idx === 0 &&\r\n      location.column.resizable &&\r\n      location.cellX >\r\n        location.column.width -\r\n          (state.reactGridElement?.querySelector(\".rg-resize-handle\")\r\n            ?.clientWidth || 0) -\r\n          getScrollOfScrollableElement(state.scrollableElement).scrollLeft\r\n    ) {\r\n      return new ResizeColumnBehavior();\r\n    } else if (\r\n      state.enableColumnSelection &&\r\n      location.row.idx === 0 &&\r\n      state.selectedIds.includes(location.column.columnId) &&\r\n      !isSelectionKey(event) &&\r\n      state.selectionMode === \"column\" &&\r\n      location.column.reorderable\r\n    ) {\r\n      return new ColumnReorderBehavior();\r\n    } else if (\r\n      state.enableColumnSelection &&\r\n      location.row.idx === 0 &&\r\n      target.className !== \"rg-fill-handle\" &&\r\n      target.className !== \"rg-touch-fill-handle\"\r\n    ) {\r\n      return new ColumnSelectionBehavior();\r\n    } else if (\r\n      state.enableRowSelection &&\r\n      location.column.idx === 0 &&\r\n      state.selectedIds.includes(location.row.rowId) &&\r\n      !isSelectionKey(event) &&\r\n      state.selectionMode === \"row\" &&\r\n      location.row.reorderable\r\n    ) {\r\n      return new RowReorderBehavior();\r\n    } else if (\r\n      state.enableRowSelection &&\r\n      location.column.idx === 0 &&\r\n      target.className !== \"rg-fill-handle\" &&\r\n      target.className !== \"rg-touch-fill-handle\"\r\n    ) {\r\n      return new RowSelectionBehavior();\r\n    } else if (\r\n      ((event.pointerType === \"mouse\" &&\r\n        target.className === \"rg-fill-handle\") ||\r\n        (event.pointerType === \"touch\" &&\r\n          (target.className === \"rg-touch-fill-handle\" ||\r\n            target.className === \"rg-fill-handle\"))) &&\r\n      state.enableFillHandle\r\n    ) {\r\n      return new FillHandleBehavior();\r\n    } else {\r\n      return new CellSelectionBehavior();\r\n    }\r\n  }\r\n\r\n  handleContextMenu(event: PointerEvent, state: State): State {\r\n    return handleContextMenu(event, state);\r\n  }\r\n\r\n  handleDoubleClick(\r\n    event: PointerEvent,\r\n    location: Location,\r\n    state: State\r\n  ): State {\r\n    return handleDoubleClick(event, location, state) as State;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent, state: State): State {\r\n    return handleKeyDown(state as State, event);\r\n  }\r\n\r\n  handleKeyUp(event: KeyboardEvent, state: State): State {\r\n    return handleKeyUp(event, state) as State;\r\n  }\r\n\r\n  handleCopy(event: ClipboardEvent, state: State): State {\r\n    return handleCopy(event, state);\r\n  }\r\n\r\n  handlePaste(event: ClipboardEvent, state: State): State {\r\n    return handlePaste(event, state);\r\n  }\r\n\r\n  handleCut(event: ClipboardEvent, state: State): State {\r\n    return handleCopy(event, state, true);\r\n  }\r\n}\r\n","/**\r\n * Set of key codes.\r\n * `POINTER` is a ReactGrid addon\r\n * \r\n * @enum {number}\r\n */\r\nexport enum keyCodes {\r\n    POINTER = 1, // a react-grid addon :)\r\n    BACKSPACE = 8,\r\n    TAB = 9,\r\n    ENTER = 13,\r\n    SHIFT = 16,\r\n    CTRL = 17,\r\n    ALT = 18,\r\n    PAUSE = 19,\r\n    CAPS_LOCK = 20,\r\n    ESCAPE = 27,\r\n    SPACE = 32,\r\n    PAGE_UP = 33,\r\n    PAGE_DOWN = 34,\r\n    END = 35,\r\n    HOME = 36,\r\n    LEFT_ARROW = 37,\r\n    UP_ARROW = 38,\r\n    RIGHT_ARROW = 39,\r\n    DOWN_ARROW = 40,\r\n    INSERT = 45,\r\n    DELETE = 46,\r\n    KEY_0 = 48,\r\n    KEY_1 = 49,\r\n    KEY_2 = 50,\r\n    KEY_3 = 51,\r\n    KEY_4 = 52,\r\n    KEY_5 = 53,\r\n    KEY_6 = 54,\r\n    KEY_7 = 55,\r\n    KEY_8 = 56,\r\n    KEY_9 = 57,\r\n    KEY_A = 65,\r\n    KEY_B = 66,\r\n    KEY_C = 67,\r\n    KEY_D = 68,\r\n    KEY_E = 69,\r\n    KEY_F = 70,\r\n    KEY_G = 71,\r\n    KEY_H = 72,\r\n    KEY_I = 73,\r\n    KEY_J = 74,\r\n    KEY_K = 75,\r\n    KEY_L = 76,\r\n    KEY_M = 77,\r\n    KEY_N = 78,\r\n    KEY_O = 79,\r\n    KEY_P = 80,\r\n    KEY_Q = 81,\r\n    KEY_R = 82,\r\n    KEY_S = 83,\r\n    KEY_T = 84,\r\n    KEY_U = 85,\r\n    KEY_V = 86,\r\n    KEY_W = 87,\r\n    KEY_X = 88,\r\n    KEY_Y = 89,\r\n    KEY_Z = 90,\r\n    LEFT_META = 91,\r\n    RIGHT_META = 92,\r\n    SELECT = 93,\r\n    NUMPAD_0 = 96,\r\n    NUMPAD_1 = 97,\r\n    NUMPAD_2 = 98,\r\n    NUMPAD_3 = 99,\r\n    NUMPAD_4 = 100,\r\n    NUMPAD_5 = 101,\r\n    NUMPAD_6 = 102,\r\n    NUMPAD_7 = 103,\r\n    NUMPAD_8 = 104,\r\n    NUMPAD_9 = 105,\r\n    MULTIPLY = 106,\r\n    ADD = 107,\r\n    SUBTRACT = 109,\r\n    DECIMAL = 110,\r\n    DIVIDE = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NUM_LOCK = 144,\r\n    SCROLL_LOCK = 145,\r\n    FIREFOX_DASH = 173,\r\n    SEMICOLON = 186,\r\n    EQUALS = 187,\r\n    COMMA = 188,\r\n    DASH = 189,\r\n    PERIOD = 190,\r\n    FORWARD_SLASH = 191,\r\n    GRAVE_ACCENT = 192,\r\n    OPEN_BRACKET = 219,\r\n    BACK_SLASH = 220,\r\n    CLOSE_BRACKET = 221,\r\n    SINGLE_QUOTE = 222\r\n}\r\n","import { Location } from '../Model/InternalModel';\r\nimport { PointerEvent } from '../Model/domEventsTypes';\r\nimport { State } from '../Model/State';\r\nimport { areLocationsEqual } from './areLocationsEqual';\r\nimport { getCompatibleCellAndTemplate } from './getCompatibleCellAndTemplate';\r\nimport { isSelectionKey } from './isSelectionKey';\r\n\r\nexport function handleDoubleClick(event: PointerEvent, location: Location, state: State): State {\r\n    if (areLocationsEqual(location, state.focusedLocation)) {\r\n        const { cell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n        if (cellTemplate.handleKeyDown) {\r\n            const { cell: newCell, enableEditMode } = cellTemplate.handleKeyDown(cell, 1, isSelectionKey(event), event.shiftKey, event.altKey);\r\n            if (enableEditMode && !cell.nonEditable) {\r\n                return { ...state, currentlyEditedCell: newCell };\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}","import { KeyboardEvent } from '../Model/domEventsTypes';\r\nimport { State } from '../Model/State';\r\nimport { keyCodes } from './keyCodes';\r\n\r\nexport function handleKeyUp(event: KeyboardEvent, state: State): State {\r\n    if (event.keyCode === keyCodes.TAB || event.keyCode === keyCodes.ENTER) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    return state;\r\n}","import { State } from '../Model/State';\r\nimport { Compatible, Cell } from '../Model/PublicModel';\r\nimport { ClipboardEvent } from '../Model/domEventsTypes';\r\nimport { getActiveSelectedRange } from './getActiveSelectedRange';\r\nimport { pasteData } from './pasteData';\r\n\r\nexport function handlePaste(event: ClipboardEvent, state: State): State {\r\n    const activeSelectedRange = getActiveSelectedRange(state);\r\n    if (!activeSelectedRange) {\r\n      return state;\r\n    }\r\n    let pastedRows: Compatible<Cell>[][] = [];\r\n    const htmlData = event.clipboardData.getData(\"text/html\");\r\n    const document = new DOMParser().parseFromString(htmlData, \"text/html\");\r\n    // TODO Do we need selection mode here ?\r\n    //const selectionMode = parsedData.body.firstElementChild && parsedData.body.firstElementChild.getAttribute('data-selection') as SelectionMode;\r\n    // TODO quite insecure! maybe do some checks ?\r\n    const hasReactGridAttribute =\r\n      document.body.firstElementChild?.getAttribute(\"data-reactgrid\") ===\r\n      \"reactgrid-content\";\r\n    if (\r\n      hasReactGridAttribute &&\r\n      document.body.firstElementChild?.firstElementChild\r\n    ) {\r\n      const tableRows =\r\n        document.body.firstElementChild.firstElementChild.children;\r\n      for (let ri = 0; ri < tableRows.length; ri++) {\r\n        const row: Compatible<Cell>[] = [];\r\n        for (let ci = 0; ci < tableRows[ri].children.length; ci++) {\r\n          const rawData =\r\n            tableRows[ri].children[ci].getAttribute(\"data-reactgrid\");\r\n          const data = rawData && JSON.parse(rawData);\r\n          const text = tableRows[ri].children[ci].innerHTML;\r\n          row.push(data ? data : { type: \"text\", text, value: parseFloat(text) });\r\n        }\r\n        pastedRows.push(row);\r\n      }\r\n    } else {\r\n      pastedRows = event.clipboardData\r\n        .getData(\"text/plain\")\r\n        .split(\"\\n\")\r\n        .map((line: string) =>\r\n          line\r\n            .split(\"\\t\")\r\n            .map((t) => ({ type: \"text\", text: t, value: parseFloat(t) }))\r\n        );\r\n    }\r\n    event.preventDefault();\r\n    return { ...pasteData(state, pastedRows) };\r\n  }\r\n  ","import { Cell, Uncertain } from '../Model/PublicModel';\r\n\r\n/**\r\n * Gets property cell's value\r\n * \r\n * @param uncertainCell Cell to extract its property\r\n * @param propName Property name to extract\r\n * @param expectedType Expected `typeof` of extracted property from \"uncertain\" cell \r\n * @returns Value of property of given cell\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const getCellProperty = <TCell extends Cell, TKey extends keyof TCell>(\r\n    uncertainCell: Uncertain<TCell>,\r\n    propName: TKey,\r\n    expectedType: 'string' | 'number' | 'boolean' | 'undefined' | 'function' | 'object' | 'symbol' | 'bigint'\r\n) => {\r\n    const prop = uncertainCell[propName];\r\n    if (typeof prop === 'undefined' || prop === null)\r\n        throw new Error(`Cell is missing property '${propName}'`);\r\n    if (typeof prop !== expectedType)\r\n        throw new Error(`Property '${propName}' expected to be of type '${expectedType}' but is '${typeof prop}'`);\r\n\r\n    return prop!; // TODO is '!' necessary ?\r\n}","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\n\r\nexport interface CheckboxCell extends Cell {\r\n    type: 'checkbox';\r\n    checked: boolean;\r\n    checkedText?: string;\r\n    uncheckedText?: string;\r\n}\r\n\r\nexport class CheckboxCellTemplate implements CellTemplate<CheckboxCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<CheckboxCell>): Compatible<CheckboxCell> {\r\n        const checked = getCellProperty(uncertainCell, 'checked', 'boolean');\r\n        const text = checked ?\r\n            uncertainCell.checkedText ? uncertainCell.checkedText : '1' :\r\n            uncertainCell.uncheckedText ? uncertainCell.uncheckedText : '';\r\n        return { ...uncertainCell, checked: !!checked, value: checked ? 1 : NaN, text };\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<CheckboxCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<CheckboxCell>; enableEditMode: boolean } {\r\n        if (!shift && (keyCode === keyCodes.SPACE || keyCode === keyCodes.ENTER))\r\n            return { cell: this.getCompatibleCell(this.toggleCheckboxCell(cell)), enableEditMode: false }\r\n        return { cell, enableEditMode: false }\r\n    }\r\n\r\n    private toggleCheckboxCell(cell: Compatible<CheckboxCell>): Compatible<CheckboxCell> {\r\n        return this.getCompatibleCell({ ...cell, checked: !cell.checked })\r\n    }\r\n\r\n    update(cell: Compatible<CheckboxCell>, cellToMerge: UncertainCompatible<CheckboxCell>): Compatible<CheckboxCell> {\r\n        const checked = cellToMerge.type === 'checkbox' ? cellToMerge.checked : !!cellToMerge.value;\r\n        return this.getCompatibleCell({ ...cell, checked });\r\n    }\r\n\r\n    getClassName(cell: Compatible<CheckboxCell>): string {\r\n        return cell.className ? cell.className : '';\r\n    }\r\n\r\n    render(cell: Compatible<CheckboxCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<CheckboxCell>, commit: boolean) => void): React.ReactNode {\r\n        return (\r\n            <label>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={cell.checked}\r\n                    onChange={e => onCellChanged(this.toggleCheckboxCell(cell), true)}\r\n                />\r\n                <span></span>\r\n            </label>\r\n        )\r\n    }\r\n\r\n}\r\n","import { keyCodes } from '../Functions/keyCodes';\r\n\r\n/**\r\n * Checks that the pressed key's `keyCode` is one of alphanumeric keys \r\n * \r\n * @param {number} keyCode `keyCode` field from `KeyboardEvent` interface \r\n * @returns {boolean} Returns `true` if `keyCode` is one of alpha numeric keys\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const isAlphaNumericKey = (keyCode: number): boolean =>\r\n    (keyCode >= keyCodes.KEY_0 && keyCode <= keyCodes.KEY_Z) ||\r\n    isNumpadNumericKey(keyCode) ||\r\n    (keyCode >= keyCodes.MULTIPLY && keyCode <= keyCodes.DIVIDE) ||\r\n    (keyCode >= keyCodes.SEMICOLON && keyCode <= keyCodes.SINGLE_QUOTE) ||\r\n    keyCode === keyCodes.SPACE;\r\n\r\n/**\r\n * Checks that the pressed key's `keyCode` is one of numeric keys\r\n * \r\n * @param {number} keyCode `keyCode` field from `KeyboardEvent` interface \r\n * @returns {boolean} Returns `true` if `keyCode` is one of numeric keys\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const inNumericKey = (keyCode: number): boolean =>\r\n    (keyCode >= keyCodes.KEY_0 && keyCode <= keyCodes.KEY_9) || isNumpadNumericKey(keyCode);\r\n\r\n/**\r\n * Checks that the pressed key's `keyCode` is one of numpad keys\r\n * \r\n * @param {number} keyCode `keyCode` field from `KeyboardEvent` interface \r\n * @returns {boolean} Returns `true` if `keyCode` is one of numpad keys\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const isNumpadNumericKey = (keyCode: number): boolean => (keyCode >= keyCodes.NUMPAD_0 && keyCode <= keyCodes.NUMPAD_9);\r\n\r\n/**\r\n * Checks that the pressed key's `keyCode` is allow while typing numeric value e.g. `-3.14`\r\n * \r\n * @param {number} keyCode `keyCode` field from `KeyboardEvent` interface\r\n * @returns {boolean} Returns `true` if `keyCode` is one of allowed on typing numeric value\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const isAllowedOnNumberTypingKey = (keyCode: number): boolean =>\r\n    (keyCode >= keyCodes.COMMA && keyCode <= keyCodes.PERIOD)\r\n    || keyCode === keyCodes.DECIMAL || keyCode === keyCodes.SUBTRACT || keyCode === keyCodes.FIREFOX_DASH;\r\n\r\n/**\r\n * Checks that the pressed key's `keyCode` is one of navigation keys \r\n * \r\n * @param {number} keyCode `keyCode` field from `KeyboardEvent` interface\r\n * @returns {boolean} Returns `true` if `keyCode` is one of navigation keys\r\n * \r\n * @see https://reactgrid.com/docs/3.1/7-api/2-functions/\r\n */\r\nexport const isNavigationKey = (keyCode: number): boolean =>\r\n    keyCode === keyCodes.LEFT_ARROW || keyCode === keyCodes.RIGHT_ARROW ||\r\n    keyCode === keyCodes.UP_ARROW || keyCode === keyCodes.DOWN_ARROW ||\r\n    keyCode === keyCodes.END || keyCode === keyCodes.HOME ||\r\n    keyCode === keyCodes.BACKSPACE || keyCode === keyCodes.DELETE;\r\n","import { isIOS, isIpadOS } from '../Functions/operatingSystem';\r\n\r\nexport const getTimestamp = (time: string, defaultDate?: string): number => {\r\n    if (defaultDate !== '') {\r\n        defaultDate = getDefaultDate();\r\n    }\r\n    const textDate = `${defaultDate && `${defaultDate} `}${time}`;\r\n    return Date.parse(textDate);\r\n};\r\n\r\nexport const getFormattedTimeUnit = (timeUnit: number): string => timeUnit.toString().padStart(2, '0');\r\n\r\nexport const getDefaultDate = (): string => isIOS() || isIpadOS() ? '1970/01/01' : '1970-01-01';\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { inNumericKey, isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\r\nimport { getTimestamp, getFormattedTimeUnit } from './timeUtils';\r\n\r\nexport interface DateCell extends Cell {\r\n    type: 'date';\r\n    date?: Date;\r\n    format?: Intl.DateTimeFormat;\r\n}\r\n\r\nexport class DateCellTemplate implements CellTemplate<DateCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<DateCell>): Compatible<DateCell> {\r\n        const date = uncertainCell.date ? getCellProperty(uncertainCell, 'date', 'object') : new Date(NaN);\r\n        const dateFormat = uncertainCell.format || new Intl.DateTimeFormat(window.navigator.language);\r\n        const value = date.getTime();\r\n        const text = !Number.isNaN(value) ? dateFormat.format(date) : '';\r\n        return { ...uncertainCell, date, value, text }\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<DateCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<DateCell>, enableEditMode: boolean } {\r\n        if (!ctrl && !alt && !shift && isAlphaNumericKey(keyCode))\r\n            return { cell: this.getCompatibleCell({ ...cell }), enableEditMode: true }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    update(cell: Compatible<DateCell>, cellToMerge: UncertainCompatible<DateCell>): Compatible<DateCell> {\r\n        return this.getCompatibleCell({ ...cell, date: new Date(cellToMerge.value) });\r\n    }\r\n\r\n    getClassName(cell: Compatible<DateCell>, isInEditMode: boolean): string {\r\n        return cell.className ? cell.className : '';\r\n    }\r\n\r\n    render(cell: Compatible<DateCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<DateCell>, commit: boolean) => void): React.ReactNode {\r\n\r\n        if (!isInEditMode) {\r\n            return cell.text;\r\n        }\r\n\r\n        if (!cell.date) {\r\n            return `\"cell.date\" is not initialized with a date value`;\r\n        }\r\n\r\n        const year = getFormattedTimeUnit(cell.date.getFullYear());\r\n        const month = getFormattedTimeUnit(cell.date.getMonth() + 1);\r\n        const day = getFormattedTimeUnit(cell.date.getDate());\r\n\r\n        return <input\r\n            ref={input => {\r\n                if (input) input.focus();\r\n            }}\r\n            type='date'\r\n            defaultValue={`${year}-${month}-${day}`}\r\n            onChange={e => {\r\n                const timestamp = getTimestamp(e.currentTarget.value, '');\r\n                if (!Number.isNaN(timestamp)) {\r\n                    onCellChanged(this.getCompatibleCell({ ...cell, date: new Date(timestamp) }), false);\r\n                }\r\n            }}\r\n            onBlur={e => {\r\n                const timestamp = getTimestamp(e.currentTarget.value, '');\r\n                if (!Number.isNaN(timestamp)) {\r\n                    onCellChanged(this.getCompatibleCell({ ...cell, date: new Date(timestamp) }), true);\r\n                }\r\n            }}\r\n            onKeyDown={e => {\r\n                if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || (e.keyCode === keyCodes.COMMA || e.keyCode === keyCodes.PERIOD)) e.stopPropagation();\r\n                if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && (e.keyCode !== keyCodes.COMMA && e.keyCode !== keyCodes.PERIOD)) e.preventDefault();\r\n            }}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n        />\r\n    }\r\n}\r\n","const characterMapShift: string[] = [];\r\ncharacterMapShift[8] = \"\";\r\ncharacterMapShift[9] = \"\";\r\ncharacterMapShift[13] = \"\\n\";\r\ncharacterMapShift[16] = \"\";\r\ncharacterMapShift[17] = \"\";\r\ncharacterMapShift[18] = \"\";\r\ncharacterMapShift[19] = \"\";\r\ncharacterMapShift[20] = \"\";\r\ncharacterMapShift[27] = \"\";\r\ncharacterMapShift[32] = \" \";\r\ncharacterMapShift[33] = \"\";\r\ncharacterMapShift[34] = \"\";\r\ncharacterMapShift[35] = \"\";\r\ncharacterMapShift[36] = \"\";\r\ncharacterMapShift[37] = \"\";\r\ncharacterMapShift[38] = \"\";\r\ncharacterMapShift[39] = \"\";\r\ncharacterMapShift[40] = \"\";\r\ncharacterMapShift[45] = \"\";\r\ncharacterMapShift[46] = \"\";\r\ncharacterMapShift[48] = \")\";\r\ncharacterMapShift[49] = \"!\";\r\ncharacterMapShift[50] = \"@\";\r\ncharacterMapShift[51] = \"#\";\r\ncharacterMapShift[52] = \"$\";\r\ncharacterMapShift[53] = \"%\";\r\ncharacterMapShift[54] = \"^\";\r\ncharacterMapShift[55] = \"&\";\r\ncharacterMapShift[56] = \"*\";\r\ncharacterMapShift[57] = \"(\";\r\ncharacterMapShift[59] = \":\";\r\ncharacterMapShift[61] = \"+\";\r\ncharacterMapShift[65] = \"A\";\r\ncharacterMapShift[66] = \"B\";\r\ncharacterMapShift[67] = \"C\";\r\ncharacterMapShift[68] = \"D\";\r\ncharacterMapShift[69] = \"E\";\r\ncharacterMapShift[70] = \"F\";\r\ncharacterMapShift[71] = \"G\";\r\ncharacterMapShift[72] = \"H\";\r\ncharacterMapShift[73] = \"I\";\r\ncharacterMapShift[74] = \"J\";\r\ncharacterMapShift[75] = \"K\";\r\ncharacterMapShift[76] = \"L\";\r\ncharacterMapShift[77] = \"M\";\r\ncharacterMapShift[78] = \"N\";\r\ncharacterMapShift[79] = \"O\";\r\ncharacterMapShift[80] = \"P\";\r\ncharacterMapShift[81] = \"Q\";\r\ncharacterMapShift[82] = \"R\";\r\ncharacterMapShift[83] = \"S\";\r\ncharacterMapShift[84] = \"T\";\r\ncharacterMapShift[85] = \"U\";\r\ncharacterMapShift[86] = \"V\";\r\ncharacterMapShift[87] = \"W\";\r\ncharacterMapShift[88] = \"X\";\r\ncharacterMapShift[89] = \"Y\";\r\ncharacterMapShift[90] = \"Z\";\r\ncharacterMapShift[91] = \"\";\r\ncharacterMapShift[92] = \"\";\r\ncharacterMapShift[93] = \"\";\r\ncharacterMapShift[96] = \"0\";\r\ncharacterMapShift[97] = \"1\";\r\ncharacterMapShift[98] = \"2\";\r\ncharacterMapShift[99] = \"3\";\r\ncharacterMapShift[100] = \"4\";\r\ncharacterMapShift[101] = \"5\";\r\ncharacterMapShift[102] = \"6\";\r\ncharacterMapShift[103] = \"7\";\r\ncharacterMapShift[104] = \"8\";\r\ncharacterMapShift[105] = \"9\";\r\ncharacterMapShift[106] = \"*\";\r\ncharacterMapShift[107] = \"+\";\r\ncharacterMapShift[109] = \"_\";\r\ncharacterMapShift[107] = \"+\";\r\ncharacterMapShift[111] = \"/\";\r\ncharacterMapShift[112] = \"\";\r\ncharacterMapShift[113] = \"\";\r\ncharacterMapShift[114] = \"\";\r\ncharacterMapShift[115] = \"\";\r\ncharacterMapShift[116] = \"\";\r\ncharacterMapShift[117] = \"\";\r\ncharacterMapShift[118] = \"\";\r\ncharacterMapShift[119] = \"\";\r\ncharacterMapShift[120] = \"\";\r\ncharacterMapShift[121] = \"\";\r\ncharacterMapShift[122] = \"\";\r\ncharacterMapShift[123] = \"\";\r\ncharacterMapShift[144] = \"\";\r\ncharacterMapShift[145] = \"\";\r\ncharacterMapShift[186] = \":\";\r\ncharacterMapShift[187] = \"+\";\r\ncharacterMapShift[188] = \"<\";\r\ncharacterMapShift[189] = \"_\";\r\ncharacterMapShift[190] = \">\";\r\ncharacterMapShift[191] = \"?\";\r\ncharacterMapShift[192] = \"~\";\r\ncharacterMapShift[219] = \"{\";\r\ncharacterMapShift[220] = \"|\";\r\ncharacterMapShift[221] = \"}\";\r\ncharacterMapShift[222] = \"\\\"\";\r\n\r\nconst characterMap: string[] = [];\r\ncharacterMap[8] = \"\";\r\ncharacterMap[9] = \"\";\r\ncharacterMap[13] = \"\\n\";\r\ncharacterMap[16] = \"\";\r\ncharacterMap[17] = \"\";\r\ncharacterMap[18] = \"\";\r\ncharacterMap[19] = \"\";\r\ncharacterMap[20] = \"\";\r\ncharacterMap[27] = \"\";\r\ncharacterMap[32] = \" \";\r\ncharacterMap[33] = \"\";\r\ncharacterMap[34] = \"\";\r\ncharacterMap[35] = \"\";\r\ncharacterMap[36] = \"\";\r\ncharacterMap[37] = \"\";\r\ncharacterMap[38] = \"\";\r\ncharacterMap[39] = \"\";\r\ncharacterMap[40] = \"\";\r\ncharacterMap[45] = \"\";\r\ncharacterMap[46] = \"\";\r\ncharacterMap[48] = \"0\";\r\ncharacterMap[49] = \"1\";\r\ncharacterMap[50] = \"2\";\r\ncharacterMap[51] = \"3\";\r\ncharacterMap[52] = \"4\";\r\ncharacterMap[53] = \"5\";\r\ncharacterMap[54] = \"6\";\r\ncharacterMap[55] = \"7\";\r\ncharacterMap[56] = \"8\";\r\ncharacterMap[57] = \"9\";\r\ncharacterMap[59] = \";\";\r\ncharacterMap[61] = \"=\";\r\ncharacterMap[65] = \"a\";\r\ncharacterMap[66] = \"b\";\r\ncharacterMap[67] = \"c\";\r\ncharacterMap[68] = \"d\";\r\ncharacterMap[69] = \"e\";\r\ncharacterMap[70] = \"f\";\r\ncharacterMap[71] = \"g\";\r\ncharacterMap[72] = \"h\";\r\ncharacterMap[73] = \"i\";\r\ncharacterMap[74] = \"j\";\r\ncharacterMap[75] = \"k\";\r\ncharacterMap[76] = \"l\";\r\ncharacterMap[77] = \"m\";\r\ncharacterMap[78] = \"n\";\r\ncharacterMap[79] = \"o\";\r\ncharacterMap[80] = \"p\";\r\ncharacterMap[81] = \"q\";\r\ncharacterMap[82] = \"r\";\r\ncharacterMap[83] = \"s\";\r\ncharacterMap[84] = \"t\";\r\ncharacterMap[85] = \"u\";\r\ncharacterMap[86] = \"v\";\r\ncharacterMap[87] = \"w\";\r\ncharacterMap[88] = \"x\";\r\ncharacterMap[89] = \"y\";\r\ncharacterMap[90] = \"z\";\r\ncharacterMap[91] = \"\";\r\ncharacterMap[92] = \"\";\r\ncharacterMap[93] = \"\";\r\ncharacterMap[96] = \"0\";\r\ncharacterMap[97] = \"1\";\r\ncharacterMap[98] = \"2\";\r\ncharacterMap[99] = \"3\";\r\ncharacterMap[100] = \"4\";\r\ncharacterMap[101] = \"5\";\r\ncharacterMap[102] = \"6\";\r\ncharacterMap[103] = \"7\";\r\ncharacterMap[104] = \"8\";\r\ncharacterMap[105] = \"9\";\r\ncharacterMap[106] = \"*\";\r\ncharacterMap[107] = \"+\";\r\ncharacterMap[109] = \"_\";\r\ncharacterMap[107] = \"+\";\r\ncharacterMap[111] = \"/\";\r\ncharacterMap[112] = \"\";\r\ncharacterMap[113] = \"\";\r\ncharacterMap[114] = \"\";\r\ncharacterMap[115] = \"\";\r\ncharacterMap[116] = \"\";\r\ncharacterMap[117] = \"\";\r\ncharacterMap[118] = \"\";\r\ncharacterMap[119] = \"\";\r\ncharacterMap[120] = \"\";\r\ncharacterMap[121] = \"\";\r\ncharacterMap[122] = \"\";\r\ncharacterMap[123] = \"\";\r\ncharacterMap[144] = \"\";\r\ncharacterMap[145] = \"\";\r\ncharacterMap[186] = \";\";\r\ncharacterMap[187] = \"=\";\r\ncharacterMap[188] = \",\";\r\ncharacterMap[189] = \"-\";\r\ncharacterMap[190] = \".\";\r\ncharacterMap[191] = \"/\";\r\ncharacterMap[192] = \"`\";\r\ncharacterMap[219] = \"[\";\r\ncharacterMap[220] = \"\\\\\";\r\ncharacterMap[221] = \"]\";\r\ncharacterMap[222] = \"'\";\r\n\r\nexport const getCharFromKeyCode = (keyCode: number, isShiftKey = false): string => {\r\n    return isShiftKey ? characterMapShift[keyCode] : characterMap[keyCode];\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { isAlphaNumericKey, isNavigationKey } from './keyCodeCheckings';\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\r\n\r\nexport interface EmailCell extends Cell {\r\n    type: 'email',\r\n    text: string,\r\n    validator?: (text: string) => boolean,\r\n    renderer?: (text: string) => React.ReactNode,\r\n    errorMessage?: string\r\n}\r\n\r\nexport class EmailCellTemplate implements CellTemplate<EmailCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<EmailCell>): Compatible<EmailCell> {\r\n        const text = getCellProperty(uncertainCell, 'text', 'string');\r\n        const value = parseFloat(text);\r\n        return { ...uncertainCell, text, value };\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<EmailCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<EmailCell>, enableEditMode: boolean } {\r\n        const char = getCharFromKeyCode(keyCode, shift);\r\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode) && !(shift && keyCode === keyCodes.SPACE))\r\n            return { cell: { ...cell, text: !shift ? char.toLowerCase() : char }, enableEditMode: true }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    update(cell: Compatible<EmailCell>, cellToMerge: UncertainCompatible<EmailCell>): Compatible<EmailCell> {\r\n        return this.getCompatibleCell({ ...cell, text: cellToMerge.text })\r\n    }\r\n\r\n    getClassName(cell: Compatible<EmailCell>, isInEditMode: boolean): string {\r\n        const isValid = cell.validator ? cell.validator(cell.text) : true;\r\n        return isValid ? 'valid' : 'invalid';\r\n    }\r\n\r\n    render(cell: Compatible<EmailCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<EmailCell>, commit: boolean) => void): React.ReactNode {\r\n        if (!isInEditMode) {\r\n            const isValid = cell.validator ? cell.validator(cell.text) : true;\r\n            const textToDisplay = !isValid && cell.errorMessage ? cell.errorMessage : cell.text;\r\n            return cell.renderer ? cell.renderer(textToDisplay) : textToDisplay;\r\n        }\r\n\r\n        return <input\r\n            ref={input => {\r\n                if (input) input.focus();\r\n            }}\r\n            onChange={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), false)}\r\n            onBlur={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), (e as any).view?.event?.keyCode !== keyCodes.ESCAPE)}\r\n            onKeyDown={e => {\r\n                if (isAlphaNumericKey(e.keyCode) || (isNavigationKey(e.keyCode))) e.stopPropagation();\r\n            }}\r\n            defaultValue={cell.text}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellStyle, CellTemplate, Compatible, Id, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\r\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\r\n\r\nexport interface ChevronCell extends Cell {\r\n    type: 'chevron';\r\n    text: string;\r\n    isExpanded?: boolean;\r\n    hasChildren?: boolean;\r\n    parentId?: Id;\r\n    indent?: number;\r\n}\r\n\r\nexport class ChevronCellTemplate implements CellTemplate<ChevronCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<ChevronCell>): Compatible<ChevronCell> {\r\n        const text = getCellProperty(uncertainCell, 'text', 'string');\r\n        let isExpanded = false;\r\n        try {\r\n            isExpanded = getCellProperty(uncertainCell, 'isExpanded', 'boolean');\r\n        } catch {\r\n            isExpanded = true;\r\n        }\r\n        let indent = -1;\r\n        try {\r\n            indent = getCellProperty(uncertainCell, 'indent', 'number');\r\n        } catch {\r\n            indent = 0;\r\n        }\r\n        let hasChildren = false;\r\n        try {\r\n            hasChildren = getCellProperty(uncertainCell, 'hasChildren', 'boolean');\r\n        } catch {\r\n            hasChildren = false;\r\n        }\r\n        const value = parseFloat(text);\r\n        return { ...uncertainCell, text, value, isExpanded, indent, hasChildren };\r\n    }\r\n\r\n    update(cell: Compatible<ChevronCell>, cellToMerge: UncertainCompatible<ChevronCell>): Compatible<ChevronCell> {\r\n        return this.getCompatibleCell({ ...cell, isExpanded: cellToMerge.isExpanded, text: cellToMerge.text })\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<ChevronCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<ChevronCell>, enableEditMode: boolean } {\r\n        let enableEditMode = keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER;\r\n        const cellCopy = { ...cell };\r\n        const char = getCharFromKeyCode(keyCode, shift);\r\n        if (keyCode === keyCodes.SPACE && cellCopy.isExpanded !== undefined && !shift) {\r\n            cellCopy.isExpanded = !cellCopy.isExpanded;\r\n        } else if (!ctrl && !alt && isAlphaNumericKey(keyCode) && !(shift && keyCode === keyCodes.SPACE)) {\r\n            cellCopy.text = !shift ? char.toLowerCase() : char;\r\n            enableEditMode = true;\r\n        }\r\n        return { cell: cellCopy, enableEditMode };\r\n    }\r\n\r\n    getClassName(cell: Compatible<ChevronCell>, isInEditMode: boolean): string {\r\n        const isExpanded = cell.hasChildren ? cell.isExpanded ? 'expanded' : 'collapsed' : '';\r\n        const className = cell.className ?? '';\r\n        return `${isExpanded} ${className}`;\r\n    }\r\n\r\n    getStyle(cell: Compatible<ChevronCell>, isInEditMode: boolean): CellStyle {\r\n        const indent = cell.indent ?? 0;\r\n        const elementMarginMultiplier = indent * 1.4;\r\n        return { paddingLeft: `calc(${elementMarginMultiplier}em + 2px)` };\r\n    }\r\n\r\n    render(cell: Compatible<ChevronCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<ChevronCell>, commit: boolean) => void): React.ReactNode {\r\n        return (\r\n            !isInEditMode ?\r\n                <>\r\n                    {cell.hasChildren ?\r\n                        <div\r\n                            className='chevron'\r\n                            onPointerDown={e => {\r\n                                e.stopPropagation();\r\n                                onCellChanged(this.getCompatibleCell({ ...cell, isExpanded: !cell.isExpanded }), true)\r\n                            }}\r\n                        >\r\n                            <span className='icon'>❯</span>\r\n                        </div>\r\n                        :\r\n                        <div className='no-child' />\r\n                    }\r\n                    {cell.text}\r\n                </>\r\n                :\r\n                <input\r\n                    ref={input => {\r\n                        if (input) {\r\n                            input.focus();\r\n                            input.setSelectionRange(input.value.length, input.value.length);\r\n                        }\r\n                    }}\r\n                    defaultValue={cell.text}\r\n                    onChange={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), false)}\r\n                    onBlur={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), (e as any).view?.event?.keyCode !== keyCodes.ESCAPE)}\r\n                    onCopy={e => e.stopPropagation()}\r\n                    onCut={e => e.stopPropagation()}\r\n                    onPaste={e => e.stopPropagation()}\r\n                    onPointerDown={e => e.stopPropagation()}\r\n                    onKeyDown={e => {\r\n                        if (isAlphaNumericKey(e.keyCode) || (isNavigationKey(e.keyCode))) e.stopPropagation();\r\n                    }}\r\n                />\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { Cell, CellStyle, CellTemplate, Compatible, Span, Uncertain } from '../Model/PublicModel';\r\n\r\n\r\nexport interface HeaderCell extends Cell, Span {\r\n    type: 'header';\r\n    text: string;\r\n}\r\n\r\nexport class HeaderCellTemplate implements CellTemplate<HeaderCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<HeaderCell>): Compatible<HeaderCell> {\r\n        const text = getCellProperty(uncertainCell, 'text', 'string');\r\n        const value = parseFloat(text);\r\n        return { ...uncertainCell, text, value };\r\n    }\r\n\r\n    render(cell: Compatible<HeaderCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<HeaderCell>, commit: boolean) => void): React.ReactNode {\r\n        return cell.text;\r\n    }\r\n\r\n    isFocusable = (cell: Compatible<HeaderCell>): boolean => false;\r\n\r\n    getClassName(cell: Compatible<HeaderCell>, isInEditMode: boolean): string {\r\n        return cell.className ? cell.className : '';\r\n    }\r\n\r\n    getStyle = (cell: Compatible<HeaderCell>): CellStyle => ({ background: 'rgba(128, 128, 128, 0.1)' })\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { inNumericKey, isNavigationKey, isNumpadNumericKey, isAllowedOnNumberTypingKey } from './keyCodeCheckings';\r\n\r\nexport interface NumberCell extends Cell {\r\n    type: 'number';\r\n    value: number;\r\n    format?: Intl.NumberFormat;\r\n    validator?: (value: number) => boolean,\r\n    nanToZero?: boolean;\r\n    hideZero?: boolean;\r\n    errorMessage?: string\r\n}\r\n\r\nexport class NumberCellTemplate implements CellTemplate<NumberCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<NumberCell>): Compatible<NumberCell> {\r\n        let value: number;\r\n        try {\r\n            value = getCellProperty(uncertainCell, 'value', 'number');\r\n        } catch (error) {\r\n            value = NaN;\r\n        }\r\n        const numberFormat = uncertainCell.format || new Intl.NumberFormat(window.navigator.language);\r\n        const displayValue = (uncertainCell.nanToZero && Number.isNaN(value)) ? 0 : value;\r\n        const text = (Number.isNaN(displayValue) || (uncertainCell.hideZero && displayValue === 0)) ? '' : numberFormat.format(displayValue);\r\n        return { ...uncertainCell, value: displayValue, text }\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<NumberCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<NumberCell>; enableEditMode: boolean } {\r\n        if (isNumpadNumericKey(keyCode)) keyCode -= 48;\r\n        const char = String.fromCharCode(keyCode);\r\n        if (!ctrl && !alt && !shift && (inNumericKey(keyCode) || isAllowedOnNumberTypingKey(keyCode))) {\r\n            const value = Number(char);\r\n            if (Number.isNaN(value) && isAllowedOnNumberTypingKey(keyCode))\r\n                return { cell: { ...this.getCompatibleCell({ ...cell, value }), text: char }, enableEditMode: true }\r\n            return { cell: this.getCompatibleCell({ ...cell, value }), enableEditMode: true }\r\n        }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    update(cell: Compatible<NumberCell>, cellToMerge: UncertainCompatible<NumberCell>): Compatible<NumberCell> {\r\n        return this.getCompatibleCell({ ...cell, value: cellToMerge.value });\r\n    }\r\n\r\n    private getTextFromCharCode = (cellText: string): string => {\r\n        switch (cellText.charCodeAt(0)) {\r\n            case keyCodes.DASH:\r\n            case keyCodes.FIREFOX_DASH:\r\n            case keyCodes.SUBTRACT:\r\n                return '-';\r\n            case keyCodes.COMMA:\r\n                return ','\r\n            case keyCodes.PERIOD:\r\n            case keyCodes.DECIMAL:\r\n                return '.';\r\n            default:\r\n                return cellText;\r\n        }\r\n    }\r\n\r\n    getClassName(cell: Compatible<NumberCell>, isInEditMode: boolean): string {\r\n        const isValid = cell.validator?.(cell.value) ?? true;\r\n        const className = cell.className || '';\r\n        return `${!isValid ? 'rg-invalid' : ''} ${className}`;\r\n    }\r\n\r\n    render(cell: Compatible<NumberCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<NumberCell>, commit: boolean) => void): React.ReactNode {\r\n        if (!isInEditMode) {\r\n            const isValid = cell.validator?.(cell.value) ?? true;           \r\n            const textToDisplay = !isValid && cell.errorMessage ? cell.errorMessage : cell.text;\r\n            return textToDisplay;\r\n        }\r\n\r\n        const locale = cell.format ? cell.format.resolvedOptions().locale : window.navigator.languages[0];\r\n        const format = new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 20 });\r\n\r\n        return <input\r\n            inputMode='decimal'\r\n            ref={input => {\r\n                if (input) {\r\n                    input.focus();\r\n                    input.setSelectionRange(input.value.length, input.value.length);\r\n                }\r\n            }}\r\n            defaultValue={Number.isNaN(cell.value) ? this.getTextFromCharCode(cell.text) : format.format(cell.value)}\r\n            onChange={e => onCellChanged(this.getCompatibleCell({ ...cell, value: parseFloat(e.currentTarget.value.replace(/,/g, '.')) }), false)}\r\n            onBlur={e => onCellChanged(this.getCompatibleCell({ ...cell, value: parseFloat(e.currentTarget.value.replace(/,/g, '.')) }), true)}\r\n            onKeyDown={e => {\r\n                if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || isAllowedOnNumberTypingKey(e.keyCode)) e.stopPropagation();\r\n                if ((!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && !isAllowedOnNumberTypingKey(e.keyCode)) || e.shiftKey) e.preventDefault();\r\n            }}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { isAlphaNumericKey, isNavigationKey } from './keyCodeCheckings'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\r\n\r\nexport interface TextCell extends Cell {\r\n    type: 'text',\r\n    text: string,\r\n    placeholder?: string;\r\n    validator?: (text: string) => boolean,\r\n    renderer?: (text: string) => React.ReactNode,\r\n    errorMessage?: string\r\n}\r\n\r\nexport class TextCellTemplate implements CellTemplate<TextCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<TextCell>): Compatible<TextCell> {\r\n        const text = getCellProperty(uncertainCell, 'text', 'string');\r\n        let placeholder: string | undefined;\r\n        try {\r\n            placeholder = getCellProperty(uncertainCell, 'placeholder', 'string');\r\n        } catch {\r\n            placeholder = '';\r\n        }\r\n        const value = parseFloat(text); // TODO more advanced parsing for all text based cells\r\n        return { ...uncertainCell, text, value, placeholder };\r\n    }\r\n\r\n    update(cell: Compatible<TextCell>, cellToMerge: UncertainCompatible<TextCell>): Compatible<TextCell> {\r\n        return this.getCompatibleCell({ ...cell, text: cellToMerge.text, placeholder: cellToMerge.placeholder })\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<TextCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<TextCell>, enableEditMode: boolean } {\r\n        const char = getCharFromKeyCode(keyCode, shift);\r\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode) && !(shift && keyCode === keyCodes.SPACE))\r\n            return { cell: this.getCompatibleCell({ ...cell, text: shift ? char : char.toLowerCase() }), enableEditMode: true }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    getClassName(cell: Compatible<TextCell>, isInEditMode: boolean): string {\r\n        const isValid = cell.validator ? cell.validator(cell.text) : true;\r\n        const className = cell.className ? cell.className : '';\r\n        return `${isValid ? 'valid' : 'invalid'} ${cell.placeholder && cell.text === '' ? 'placeholder' : ''} ${className}`;\r\n    }\r\n\r\n    render(cell: Compatible<TextCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<TextCell>, commit: boolean) => void): React.ReactNode {\r\n\r\n        if (!isInEditMode) {\r\n            const isValid = cell.validator ? cell.validator(cell.text) : true;\r\n            const cellText = cell.text || cell.placeholder || '';\r\n            const textToDisplay = !isValid && cell.errorMessage ? cell.errorMessage : cellText;\r\n            return cell.renderer ? cell.renderer(textToDisplay) : textToDisplay;\r\n        }\r\n\r\n        return <input\r\n            ref={input => {\r\n                if (input) {\r\n                    input.focus();\r\n                    input.setSelectionRange(input.value.length, input.value.length);\r\n                }\r\n            }}\r\n            defaultValue={cell.text}\r\n            onChange={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), false)}\r\n            onBlur={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), (e as any).view?.event?.keyCode !== keyCodes.ESCAPE)}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n            placeholder={cell.placeholder}\r\n            onKeyDown={e => {\r\n                if (isAlphaNumericKey(e.keyCode) || (isNavigationKey(e.keyCode))) e.stopPropagation();\r\n            }}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { inNumericKey, isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings'\r\nimport { getTimestamp, getFormattedTimeUnit, getDefaultDate } from './timeUtils';\r\n\r\nexport interface TimeCell extends Cell {\r\n    type: 'time';\r\n    time?: Date;\r\n    format?: Intl.DateTimeFormat;\r\n}\r\n\r\nexport class TimeCellTemplate implements CellTemplate<TimeCell> {\r\n\r\n    static dayInMillis = 86400000;\r\n    static defaultDate: string = getDefaultDate();\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<TimeCell>): Compatible<TimeCell> {\r\n        const time = uncertainCell.time ? getCellProperty(uncertainCell, 'time', 'object') : new Date(NaN);\r\n        const timeFormat = uncertainCell.format || new Intl.DateTimeFormat(window.navigator.language);\r\n        const value = time.getTime() % TimeCellTemplate.dayInMillis; // each day has 86400000 millis\r\n        const text = !Number.isNaN(value) ? timeFormat.format(time) : '';\r\n        return { ...uncertainCell, time, value, text }\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<TimeCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<TimeCell>, enableEditMode: boolean } {\r\n        if (!ctrl && !alt && !shift && isAlphaNumericKey(keyCode))\r\n            return { cell: this.getCompatibleCell({ ...cell }), enableEditMode: true }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    update(cell: Compatible<TimeCell>, cellToMerge: UncertainCompatible<TimeCell>): Compatible<TimeCell> {\r\n        const timestamp = getTimestamp(cellToMerge.text);\r\n        if (cellToMerge.text !== '' && !Number.isNaN(timestamp))\r\n            return this.getCompatibleCell({ ...cell, time: new Date(timestamp) });\r\n        return this.getCompatibleCell({ ...cell, time: new Date(cellToMerge.value) });\r\n    }\r\n\r\n    getClassName(cell: Compatible<TimeCell>, isInEditMode: boolean): string {\r\n        return cell.className ? cell.className : '';\r\n    }\r\n\r\n    render(cell: Compatible<TimeCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<TimeCell>, commit: boolean) => void): React.ReactNode {\r\n\r\n        if (!isInEditMode) {\r\n            return cell.text;\r\n        }\r\n\r\n        if (!cell.time) {\r\n            return `\"cell.time\" is not initialized with a time value`;\r\n        }\r\n\r\n        const hours = getFormattedTimeUnit(cell.time.getHours());\r\n        const minutes = getFormattedTimeUnit(cell.time.getMinutes());\r\n\r\n        return <input\r\n            ref={input => {\r\n                if (input) input.focus();\r\n            }}\r\n            type='time'\r\n            defaultValue={`${hours}:${minutes}`}\r\n            onChange={e => {\r\n                const timestamp = getTimestamp(e.currentTarget.value);\r\n                if (!Number.isNaN(timestamp)) onCellChanged(this.getCompatibleCell({ ...cell, time: new Date(timestamp) }), false);\r\n            }}\r\n            onBlur={e => {\r\n                const timestamp = getTimestamp(e.currentTarget.value);\r\n                if (!Number.isNaN(timestamp)) onCellChanged(this.getCompatibleCell({ ...cell, time: new Date(timestamp) }), true);\r\n            }}\r\n            onKeyDown={e => {\r\n                if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || (e.keyCode === keyCodes.COMMA || e.keyCode === keyCodes.PERIOD)) e.stopPropagation();\r\n                if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && (e.keyCode !== keyCodes.COMMA && e.keyCode !== keyCodes.PERIOD)) e.preventDefault();\r\n            }}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\n// NOTE: all modules imported below may be imported from '@silevis/reactgrid'\r\nimport { getCellProperty } from '../Functions/getCellProperty';\r\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\r\nimport { isAlphaNumericKey } from './keyCodeCheckings';\r\nimport { Cell, CellTemplate, Compatible, Uncertain, UncertainCompatible } from '../Model/PublicModel';\r\nimport { keyCodes } from '../Functions/keyCodes';\r\n\r\nimport Select, { OptionProps, MenuProps } from 'react-select';\r\nimport { FC } from 'react';\r\n\r\nexport type OptionType = {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface DropdownCell extends Cell {\r\n    type: 'dropdown';\r\n    selectedValue?: string;\r\n    values: OptionType[];\r\n    isDisabled?: boolean;\r\n    isOpen?: boolean;\r\n    inputValue?: string;\r\n}\r\n\r\nexport class DropdownCellTemplate implements CellTemplate<DropdownCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<DropdownCell>): Compatible<DropdownCell> {\r\n        let selectedValue: string | undefined;\r\n        try {\r\n            selectedValue = getCellProperty(uncertainCell, 'selectedValue', 'string')\r\n        } catch {\r\n            selectedValue = undefined;\r\n        }\r\n        const values = getCellProperty(uncertainCell, 'values', 'object');\r\n        const value = selectedValue ? parseFloat(selectedValue) : NaN;\r\n        let isDisabled = true;\r\n        try {\r\n            isDisabled = getCellProperty(uncertainCell, 'isDisabled', 'boolean');\r\n        } catch {\r\n            isDisabled = false;\r\n        }\r\n        let inputValue: string | undefined;\r\n        try {\r\n            inputValue = getCellProperty(uncertainCell, 'inputValue', 'string');\r\n        } catch {\r\n            inputValue = undefined;\r\n        }\r\n        let isOpen: boolean;\r\n        try {\r\n            isOpen = getCellProperty(uncertainCell, 'isOpen', 'boolean');\r\n        } catch {\r\n            isOpen = false;\r\n        }\r\n        const text = selectedValue || '';\r\n        return { ...uncertainCell, selectedValue, text, value, values, isDisabled, isOpen, inputValue };\r\n    }\r\n\r\n    update(cell: Compatible<DropdownCell>, cellToMerge: UncertainCompatible<DropdownCell>): Compatible<DropdownCell> {\r\n        return this.getCompatibleCell({ ...cell, selectedValue: cellToMerge.selectedValue, isOpen: cellToMerge.isOpen, inputValue: cellToMerge.inputValue });\r\n    }\r\n\r\n    getClassName(cell: Compatible<DropdownCell>, isInEditMode: boolean): string {\r\n        const isOpen = cell.isOpen ? 'open' : 'closed';\r\n        return `${cell.className ? cell.className : ''}${isOpen}`;\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<DropdownCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<DropdownCell>, enableEditMode: boolean } {\r\n        if ((keyCode === keyCodes.SPACE || keyCode === keyCodes.ENTER) && !shift) {\r\n            return { cell: this.getCompatibleCell({ ...cell, isOpen: !cell.isOpen }), enableEditMode: false };\r\n        }\r\n        const char = getCharFromKeyCode(keyCode, shift);\r\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode))\r\n            return { cell: this.getCompatibleCell({ ...cell, inputValue: shift ? char : char.toLowerCase(), isOpen: !cell.isOpen }), enableEditMode: false }\r\n        return { cell, enableEditMode: false };\r\n    }\r\n\r\n    render(\r\n        cell: Compatible<DropdownCell>,\r\n        isInEditMode: boolean,\r\n        onCellChanged: (cell: Compatible<DropdownCell>, commit: boolean) => void\r\n    ): React.ReactNode {\r\n        return (\r\n            <DropdownInput onCellChanged={(cell) => onCellChanged(this.getCompatibleCell(cell), true)} cell={cell}/>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DIProps{\r\n    onCellChanged: (...args: any[] ) => void;\r\n    cell: Record<string,any>;\r\n    \r\n}\r\n\r\nconst DropdownInput: FC<DIProps> = ({onCellChanged, cell}) => {\r\n    \r\n    const selectRef = React.useRef<any>(null);\r\n\r\n    const [inputValue, setInputValue] = React.useState<string | undefined>(cell.inputValue);\r\n\r\n    React.useEffect(() => {\r\n        if (cell.isOpen && selectRef.current) {\r\n            selectRef.current.focus();\r\n            setInputValue(cell.inputValue);\r\n        }\r\n    }, [cell.isOpen, cell.inputValue]);\r\n\r\n    return  <div\r\n    style={{ width: '100%' }}\r\n    onPointerDown={e => onCellChanged({ ...cell, isOpen: true })}\r\n>\r\n    <Select\r\n        {...(cell.inputValue && {\r\n            inputValue,\r\n            defaultInputValue: inputValue,\r\n            onInputChange: e => setInputValue(e),\r\n        })}\r\n        isSearchable={true}\r\n        ref={selectRef}\r\n        {...(cell.isOpen !== undefined && { menuIsOpen: cell.isOpen })}\r\n        onMenuClose={() => onCellChanged({ ...cell, isOpen: !cell.isOpen, inputValue: undefined })}\r\n        onMenuOpen={() => onCellChanged({ ...cell, isOpen: true })}\r\n        onChange={(e) => onCellChanged({ ...cell, selectedValue: (e as OptionType).value, isOpen: false, inputValue: undefined })}\r\n        blurInputOnSelect={true}\r\n        defaultValue={cell.values.find((val: any) => val.value === cell.selectedValue)}\r\n        isDisabled={cell.isDisabled}\r\n        options={cell.values}\r\n        onKeyDown={e => e.stopPropagation()}\r\n        components={{\r\n            Option: CustomOption,\r\n            Menu: CustomMenu,\r\n        }}\r\n        styles={{\r\n            container: (provided) => ({\r\n                ...provided,\r\n                width: '100%',\r\n                height: '100%',\r\n            }),\r\n            control: (provided) => ({\r\n                ...provided,\r\n                border: 'none',\r\n                borderColor: 'transparent',\r\n                minHeight: '25px',\r\n                background: 'transparent',\r\n                boxShadow: 'none',\r\n            }),\r\n            indicatorsContainer: (provided) => ({\r\n                ...provided,\r\n                paddingTop: '0px',\r\n            }),\r\n            dropdownIndicator: (provided) => ({\r\n                ...provided,\r\n                padding: '0px 4px',\r\n            }),\r\n            singleValue: (provided) => ({\r\n                ...provided,\r\n                color: 'inherit'\r\n            }),\r\n            indicatorSeparator: (provided) => ({\r\n                ...provided,\r\n                marginTop: '4px',\r\n                marginBottom: '4px',\r\n            }),\r\n            input: (provided) => ({\r\n                ...provided,\r\n                padding: 0,\r\n            }),\r\n            valueContainer: (provided) => ({\r\n                ...provided,\r\n                padding: '0 8px',\r\n            }),\r\n        }}\r\n    />\r\n</div >\r\n}\r\n\r\nconst CustomOption: React.FC<OptionProps<OptionType, false>> = ({ innerProps, label, isSelected, isFocused }) => (\r\n    <div\r\n        {...innerProps}\r\n        onPointerDown={e => e.stopPropagation()}\r\n        className={`rg-dropdown-option${isSelected ? ' selected' : ''}${isFocused ? ' focused' : ''}`}\r\n    >\r\n        {label}\r\n    </div>\r\n);\r\n\r\nconst CustomMenu: React.FC<MenuProps<OptionType, false>> = ({ innerProps, children }) => (\r\n    <div {...innerProps} className='rg-dropdown-menu'>{children}</div>\r\n);\r\n","import {\r\n    ChevronCellTemplate, TimeCellTemplate, EmailCellTemplate, DateCellTemplate, CheckboxCellTemplate,\r\n    HeaderCellTemplate, NumberCellTemplate, TextCellTemplate, DropdownCellTemplate\r\n} from '../CellTemplates';\r\nimport { CellTemplates } from '../Model/PublicModel';\r\n\r\nexport const defaultCellTemplates: CellTemplates = {\r\n    text: new TextCellTemplate(),\r\n    number: new NumberCellTemplate(),\r\n    header: new HeaderCellTemplate(),\r\n    checkbox: new CheckboxCellTemplate(),\r\n    date: new DateCellTemplate(),\r\n    email: new EmailCellTemplate(),\r\n    time: new TimeCellTemplate(),\r\n    chevron: new ChevronCellTemplate(),\r\n    dropdown: new DropdownCellTemplate()\r\n};\r\n","import { CellTemplates, Cell, ReactGridProps, Compatible, Highlight, CellChange, Id, SelectionMode } from './PublicModel';\r\nimport { isBrowserIE } from '../Functions/internetExplorer';\r\nimport { isBrowserEdge } from '../Functions/microsoftEdge';\r\nimport { DefaultBehavior } from '../Behaviors/DefaultBehavior';\r\nimport { CellMatrix } from './CellMatrix';\r\nimport { Behavior } from './Behavior';\r\nimport { Location, Orientation, } from './InternalModel';\r\nimport { Range } from './Range';\r\nimport { defaultCellTemplates } from '../Functions/defaultCellTemplates';\r\n\r\nexport type StateModifier<TState extends State = State> = (state: TState) => TState;\r\nexport type StateUpdater = (modifier: StateModifier) => void;\r\n\r\n\r\nexport interface State<TCellMatrix extends CellMatrix = CellMatrix, TBehavior extends Behavior = Behavior> {\r\n    update: StateUpdater;\r\n    readonly props?: ReactGridProps;\r\n    readonly legacyBrowserMode: boolean;\r\n    readonly cellMatrix: TCellMatrix;\r\n    readonly currentBehavior: TBehavior;\r\n    readonly focusedLocation?: Location;\r\n\r\n    readonly cellTemplates: CellTemplates;\r\n    hiddenFocusElement?: HTMLDivElement; // updated without setState\r\n    readonly reactGridElement?: HTMLDivElement;\r\n    readonly scrollableElement?: HTMLElement | (Window & typeof globalThis);\r\n\r\n    readonly queuedCellChanges: CellChange[];\r\n    currentlyEditedCell?: Compatible<Cell>;\r\n\r\n    readonly highlightLocations: Highlight[];\r\n\r\n    // VISIBLE RANGE\r\n    readonly visibleRange?: Range;\r\n\r\n    // STICKY\r\n    readonly leftStickyColumns?: number;\r\n    readonly topStickyRows?: number;\r\n\r\n    // SCROLLS\r\n    readonly topScrollBoudary: number;\r\n    readonly bottomScrollBoudary: number;\r\n    readonly leftScrollBoudary: number;\r\n    readonly rightScrollBoudary: number;\r\n\r\n    readonly enableGroupIdRender: boolean;\r\n\r\n    readonly enableFillHandle: boolean;\r\n    readonly enableRangeSelection: boolean;\r\n    readonly enableColumnSelection: boolean;\r\n    readonly enableRowSelection: boolean;\r\n    readonly disableVirtualScrolling: boolean;\r\n    readonly contextMenuPosition: { top: number; left: number };\r\n    readonly lineOrientation: Orientation;\r\n    readonly linePosition: number;\r\n    readonly shadowSize: number;\r\n    readonly shadowPosition: number;\r\n    readonly shadowCursor: string;\r\n    readonly selectionMode: SelectionMode;\r\n    readonly selectedRanges: Range[];\r\n    readonly selectedIndexes: number[];\r\n    readonly selectedIds: Id[];\r\n    readonly activeSelectedRangeIdx: number;\r\n    readonly copyRange?: Range;\r\n    readonly rightStickyColumns: number | undefined;\r\n    readonly bottomStickyRows: number | undefined;\r\n}\r\n\r\nexport const defaultStateFields = {\r\n    legacyBrowserMode: isBrowserIE() || isBrowserEdge(),\r\n    focusedLocation: undefined,\r\n    currentBehavior: new DefaultBehavior(),\r\n    cellTemplates: defaultCellTemplates,\r\n    hiddenFocusElement: undefined,\r\n    reactGridElement: undefined,\r\n    scrollableElement: undefined,\r\n    queuedCellChanges: [],\r\n    currentlyEditedCell: undefined,\r\n    highlightLocations: [],\r\n    visibleRange: undefined,\r\n    topScrollBoudary: -1,\r\n    bottomScrollBoudary: -1,\r\n    leftScrollBoudary: -1,\r\n    rightScrollBoudary: -1,\r\n    enableGroupIdRender: false,\r\n    leftStickyColumns: undefined,\r\n    topStickyRows: undefined,\r\n    enableFillHandle: false,\r\n    enableRangeSelection: true,\r\n    enableColumnSelection: false,\r\n    enableRowSelection: false,\r\n    contextMenuPosition: { top: -1, left: -1 },\r\n    lineOrientation: \"horizontal\" as Orientation,\r\n    linePosition: -1,\r\n    shadowSize: 0,\r\n    shadowPosition: -1,\r\n    shadowCursor: \"default\",\r\n    selectionMode: \"range\" as SelectionMode,\r\n    selectedRanges: [],\r\n    selectedIndexes: [],\r\n    selectedIds: [],\r\n    activeSelectedRangeIdx: 0,\r\n    copyRange: undefined,\r\n    rightStickyColumns: undefined,\r\n    bottomStickyRows: undefined,\r\n    disableVirtualScrolling: false,\r\n}\r\n","export function isBrowserIE(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for circle ci compiler\r\n        return window.navigator.userAgent.indexOf('Trident') > 0;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function isBrowserEdge(): boolean {\r\n  if (typeof window !== 'undefined') { // condition needed for circle ci compiler\r\n    return window.navigator.userAgent.indexOf('Edge/') > 0;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { CellMatrix, CellMatrixProps, StickyRanges, translateLocationIdxToLookupKey } from './CellMatrix';\r\nimport { GridColumn, GridRow } from './InternalModel';\r\nimport { Range } from './Range';\r\n\r\n\r\nexport interface StickyEdges {\r\n    leftStickyColumns: number;\r\n    topStickyRows: number;\r\n    rightStickyColumns: number;\r\n    bottomStickyRows: number;\r\n}\r\nexport interface ICellMatrixBuilder<TCellMatrixBuilder = CellMatrixBuilder, TStickyEdges extends StickyEdges = StickyEdges> {\r\n    setProps(props: CellMatrixProps): TCellMatrixBuilder;\r\n    fillRowsAndCols(edges: TStickyEdges): TCellMatrixBuilder;\r\n    fillSticky(edges: TStickyEdges): TCellMatrixBuilder;\r\n    fillScrollableRange(edges: TStickyEdges): TCellMatrixBuilder;\r\n    setEdgeLocations(): TCellMatrixBuilder;\r\n}\r\n\r\nexport class CellMatrixBuilder implements ICellMatrixBuilder {\r\n    private cellMatrix!: CellMatrix;\r\n\r\n    constructor() {\r\n      this.reset();\r\n    }\r\n  \r\n    private reset(): CellMatrixBuilder {\r\n      this.cellMatrix = new CellMatrix({} as StickyRanges);\r\n      return this;\r\n    }\r\n  \r\n    setProps(props: CellMatrixProps): CellMatrixBuilder {\r\n      this.cellMatrix.props = props;\r\n      return this;\r\n    }\r\n  \r\n    fillRowsAndCols(\r\n      edges: StickyEdges = {\r\n        leftStickyColumns: 0,\r\n        topStickyRows: 0,\r\n        rightStickyColumns: 0,\r\n        bottomStickyRows: 0,\r\n      }\r\n    ): CellMatrixBuilder {\r\n      const {\r\n        leftStickyColumns,\r\n        topStickyRows,\r\n        rightStickyColumns,\r\n        bottomStickyRows,\r\n      } = edges;\r\n      if (!Array.isArray(this.cellMatrix.props.rows)) {\r\n        throw new TypeError('Feeded ReactGrids \"rows\" property is not an array!');\r\n      }\r\n      if (!Array.isArray(this.cellMatrix.props.columns)) {\r\n        throw new TypeError(\r\n          'Feeded ReactGrids \"columns\" property is not an array!'\r\n        );\r\n      }\r\n      this.cellMatrix.rows = this.cellMatrix.props.rows.reduce<GridRow[]>(\r\n        (rows, row, idx) => {\r\n          const top = this.getTop(idx, topStickyRows, bottomStickyRows, rows);\r\n          const height = row.height || CellMatrix.DEFAULT_ROW_HEIGHT;\r\n          rows.push({\r\n            ...row,\r\n            top,\r\n            height,\r\n            idx,\r\n            bottom: top + height,\r\n          } as GridRow);\r\n          this.cellMatrix.height += height;\r\n  \r\n          // TODO what with rowIndexLookup?\r\n          this.cellMatrix.rowIndexLookup[row.rowId] = idx;\r\n          return rows;\r\n        },\r\n        []\r\n      );\r\n      this.cellMatrix.columns = this.cellMatrix.props.columns.reduce<\r\n        GridColumn[]\r\n      >((cols, column, idx) => {\r\n        const left = this.getLeft(\r\n          idx,\r\n          leftStickyColumns,\r\n          rightStickyColumns,\r\n          cols\r\n        );\r\n        const width = column.width\r\n          ? column.width < CellMatrix.MIN_COLUMN_WIDTH\r\n            ? CellMatrix.MIN_COLUMN_WIDTH\r\n            : column.width\r\n          : CellMatrix.DEFAULT_COLUMN_WIDTH;\r\n        cols.push({ ...column, idx, left, width, right: left + width });\r\n        this.cellMatrix.width += width;\r\n        // TODO what with columnIndexLookup?\r\n        this.cellMatrix.columnIndexLookup[column.columnId] = idx;\r\n        return cols;\r\n      }, []);\r\n      return this;\r\n    }\r\n  \r\n    setRangesToRenderLookup(): CellMatrixBuilder {\r\n      let rangesToExclude: Range[] = [];\r\n      this.cellMatrix.rows.forEach((row, idy) => {\r\n        row.cells.forEach((cell, idx) => {\r\n          const rowspan = (\"rowspan\" in cell && cell.rowspan) || 0;\r\n          const colspan = (\"colspan\" in cell && cell.colspan) || 0;\r\n          const rows = rowspan\r\n            ? this.cellMatrix.rows.slice(idy, idy + rowspan)\r\n            : [this.cellMatrix.rows[idy]];\r\n          const columns = colspan\r\n            ? this.cellMatrix.columns.slice(idx, idx + colspan)\r\n            : [this.cellMatrix.columns[idx]];\r\n          const range = new Range(rows, columns);\r\n          rangesToExclude = [\r\n            ...rangesToExclude,\r\n            ...this.getRangesToRender(range),\r\n          ];\r\n          this.cellMatrix.spanCellLookup[\r\n            translateLocationIdxToLookupKey(idx, idy)\r\n          ] = { range };\r\n        });\r\n      });\r\n      // TODO try to optimize by using only lookup\r\n      const keys = rangesToExclude.map((range) =>\r\n        translateLocationIdxToLookupKey(\r\n          range.first.column.idx,\r\n          range.first.row.idx\r\n        )\r\n      );\r\n      Object.keys(this.cellMatrix.spanCellLookup).forEach((key) => {\r\n        if (!keys.includes(key)) {\r\n          this.cellMatrix.rangesToRender[key] =\r\n            this.cellMatrix.spanCellLookup[key];\r\n        }\r\n      });\r\n      return this;\r\n    }\r\n  \r\n    getRangesToRender(range: Range): Range[] {\r\n      const result = range.rows.flatMap((row) =>\r\n        range.columns.map((column) => new Range([row], [column]))\r\n      );\r\n      result.shift();\r\n      return result;\r\n    }\r\n  \r\n    fillSticky(\r\n      edges: StickyEdges = {\r\n        leftStickyColumns: 0,\r\n        topStickyRows: 0,\r\n        rightStickyColumns: 0,\r\n        bottomStickyRows: 0,\r\n      }\r\n    ): CellMatrixBuilder {\r\n      const {\r\n        leftStickyColumns,\r\n        topStickyRows,\r\n        rightStickyColumns,\r\n        bottomStickyRows,\r\n      } = edges;\r\n      this.cellMatrix.ranges.stickyLeftRange = new Range(\r\n        this.cellMatrix.rows,\r\n        this.cellMatrix.columns.slice(0, leftStickyColumns || 0)\r\n      );\r\n      this.cellMatrix.ranges.stickyTopRange = new Range(\r\n        this.cellMatrix.rows.slice(0, topStickyRows || 0),\r\n        this.cellMatrix.columns\r\n      );\r\n      this.cellMatrix.ranges.stickyRightRange = new Range(\r\n        this.cellMatrix.rows,\r\n        this.cellMatrix.columns.slice(\r\n          this.getStickyRightFirstIdx(leftStickyColumns, rightStickyColumns),\r\n          this.cellMatrix.columns.length\r\n        )\r\n      );\r\n      this.cellMatrix.ranges.stickyBottomRange = new Range(\r\n        this.cellMatrix.rows.slice(\r\n          this.getStickyBottomFirstIdx(topStickyRows, bottomStickyRows),\r\n          this.cellMatrix.rows.length\r\n        ),\r\n        this.cellMatrix.columns\r\n      );\r\n      return this;\r\n    }\r\n  \r\n    fillScrollableRange(\r\n      edges: StickyEdges = {\r\n        leftStickyColumns: 0,\r\n        topStickyRows: 0,\r\n        rightStickyColumns: 0,\r\n        bottomStickyRows: 0,\r\n      }\r\n    ): CellMatrixBuilder {\r\n      const {\r\n        leftStickyColumns,\r\n        topStickyRows,\r\n        rightStickyColumns,\r\n        bottomStickyRows,\r\n      } = edges;\r\n      this.cellMatrix.scrollableRange = this.getScrollableRange(\r\n        leftStickyColumns,\r\n        topStickyRows,\r\n        rightStickyColumns,\r\n        bottomStickyRows\r\n      );\r\n      return this;\r\n    }\r\n  \r\n    setEdgeLocations(): CellMatrixBuilder {\r\n      this.cellMatrix.first = this.cellMatrix.getLocation(0, 0);\r\n      this.cellMatrix.last = this.cellMatrix.getLocation(\r\n        this.cellMatrix.rows.length - 1,\r\n        this.cellMatrix.columns.length - 1\r\n      );\r\n      return this;\r\n    }\r\n  \r\n    private getTop(\r\n      idx: number,\r\n      topRowsSticky: number | undefined,\r\n      bottomRowsSticky: number | undefined,\r\n      rows: GridRow[]\r\n    ): number {\r\n      return idx === 0 ||\r\n        idx === topRowsSticky ||\r\n        idx ===\r\n          this.getStickyBottomFirstIdx(topRowsSticky || 0, bottomRowsSticky || 0)\r\n        ? 0\r\n        : rows[idx - 1].top + rows[idx - 1].height;\r\n    }\r\n  \r\n    private getLeft(\r\n      idx: number,\r\n      leftColumnsSticky: number | undefined,\r\n      rightColumnsSticky: number | undefined,\r\n      cols: GridColumn[]\r\n    ): number {\r\n      return idx === 0 ||\r\n        idx === leftColumnsSticky ||\r\n        idx ===\r\n          this.getStickyRightFirstIdx(\r\n            leftColumnsSticky || 0,\r\n            rightColumnsSticky || 0\r\n          )\r\n        ? 0\r\n        : cols[idx - 1].left + cols[idx - 1].width;\r\n    }\r\n  \r\n    private getScrollableRange(\r\n      leftColumnsSticky: number,\r\n      topRowsSticky: number,\r\n      rightColumnsSticky: number,\r\n      bottomRowsSticky: number\r\n    ): Range {\r\n      return new Range(\r\n        this.cellMatrix.rows.slice(\r\n          topRowsSticky || 0,\r\n          this.getStickyBottomFirstIdx(topRowsSticky, bottomRowsSticky)\r\n        ),\r\n        this.cellMatrix.columns.slice(\r\n          leftColumnsSticky || 0,\r\n          this.getStickyRightFirstIdx(leftColumnsSticky, rightColumnsSticky)\r\n        )\r\n      );\r\n    }\r\n  \r\n    private getStickyBottomFirstIdx(\r\n      topRowsSticky: number,\r\n      bottomRowsSticky: number\r\n    ): number {\r\n      const stickyBottomRows = bottomRowsSticky || 0;\r\n      const stickyTopRows = topRowsSticky || 0;\r\n      const rows = this.cellMatrix.props.rows.length;\r\n      return (\r\n        rows - (stickyBottomRows + stickyTopRows > rows ? 0 : stickyBottomRows)\r\n      );\r\n    }\r\n  \r\n    private getStickyRightFirstIdx(\r\n      stickyColumnsLeft: number,\r\n      stickyColumnsRight: number\r\n    ): number {\r\n      const stickyRightColumns = stickyColumnsRight || 0;\r\n      const stickyLeftColumns = stickyColumnsLeft || 0;\r\n      const columns = this.cellMatrix.props.columns.length;\r\n      return (\r\n        columns -\r\n        (stickyRightColumns + stickyLeftColumns > columns\r\n          ? 0\r\n          : stickyRightColumns)\r\n      );\r\n    }\r\n  \r\n    getCellMatrix(): CellMatrix {\r\n      const result = this.cellMatrix;\r\n      this.reset();\r\n      return result;\r\n    }\r\n}\r\n","import { Range } from '../Model/Range';\r\nimport { State } from '../Model/State';\r\nimport { GridColumn, GridRow } from '../Model/InternalModel';\r\nimport { getScrollOfScrollableElement } from './scrollHelpers';\r\nimport { getVisibleSizeOfReactGrid, getReactGridOffsets, getStickyOffset } from './elementSizeHelpers';\r\n\r\nexport const VS_PAGE_HEIGHT = 400;\r\nexport const VS_PAGE_WIDTH = 300;\r\nconst ADDITONAL_INDEX = 1; // is needed for getting last element in array\r\n\r\nexport function recalcVisibleRange(state: State): State {\r\n    if(state.disableVirtualScrolling){\r\n        const {rows, columns} = state.cellMatrix.scrollableRange;\r\n        const visibleRange = new Range(rows, columns);\r\n        return {\r\n            ...state,\r\n            visibleRange\r\n        };\r\n    }\r\n    const { scrollTop, scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { width, height } = getVisibleScrollableSize(state,\r\n        [-state.cellMatrix.ranges.stickyTopRange.height], [-state.cellMatrix.ranges.stickyLeftRange.width]);\r\n    const visibleColumns = getVisibleColumns(state, width);\r\n    const visibleRows = getVisibleRows(state, height);\r\n    const visibleRange = new Range(visibleRows, visibleColumns);\r\n    return {\r\n        ...state,\r\n        leftScrollBoudary: visibleRange.columns.length > 0 ? scrollLeft - VS_PAGE_WIDTH : 0,\r\n        rightScrollBoudary: visibleRange.last.column === undefined ? 0 : VS_PAGE_WIDTH + scrollLeft,\r\n        topScrollBoudary: visibleRange.columns.length > 0 ? scrollTop - VS_PAGE_HEIGHT : 0,\r\n        bottomScrollBoudary: visibleRange.last.row === undefined ? 0 : VS_PAGE_HEIGHT + scrollTop,\r\n        visibleRange\r\n    };\r\n}\r\n\r\n\r\nexport function getVisibleScrollableSize(state: State, heights: number[], widths: number[]): { height: number, width: number } {\r\n    const { height, width } = getVisibleSizeOfReactGrid(state);\r\n    const sum = (a: number, b: number) => a + b;\r\n    return {\r\n        height: Math.max(heights.reduce(sum, height), 0),\r\n        width: Math.max(widths.reduce(sum, width), 0)\r\n    }\r\n}\r\n\r\nexport function getVisibleColumns(state: State, scrollableWidth: number): GridColumn[] {\r\n    const { columns } = state.cellMatrix.scrollableRange;\r\n    const { left } = getReactGridOffsets(state);\r\n    const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const firstIndex = Math.max(colBinarySearch(columns, scrollLeft - left - VS_PAGE_WIDTH) - ADDITONAL_INDEX - 1, 0);\r\n    const lastIndex = colBinarySearch(columns, scrollableWidth + getStickyOffset(scrollLeft, left) + VS_PAGE_WIDTH, firstIndex);\r\n    return columns.slice(firstIndex, lastIndex + ADDITONAL_INDEX);\r\n}\r\n\r\nexport function getVisibleRows(state: State, scrollableHeight: number): GridRow[] {\r\n    const { rows } = state.cellMatrix.scrollableRange;\r\n    const { top } = getReactGridOffsets(state);\r\n    const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const firstIndex = Math.max(rowBinarySearch(rows, scrollTop - top - VS_PAGE_HEIGHT) - ADDITONAL_INDEX - 1, 0);\r\n    const lastIndex = rowBinarySearch(rows, scrollableHeight + getStickyOffset(scrollTop, top) + VS_PAGE_HEIGHT, firstIndex);\r\n    return rows.slice(firstIndex, lastIndex + ADDITONAL_INDEX);\r\n}\r\n\r\nfunction rowBinarySearch(arr: GridRow[], val: number, start = 0, end = arr.length - 1): number {\r\n    const mid = (start + end) >> 1;\r\n    if (mid < 0)\r\n        return 0;\r\n    if (start >= end)\r\n        return mid;\r\n    return val < arr[mid].top\r\n        ? rowBinarySearch(arr, val, start, mid)\r\n        : rowBinarySearch(arr, val, mid + 1, end);\r\n}\r\n\r\nfunction colBinarySearch(arr: GridColumn[], val: number, start = 0, end = arr.length - 1): number {\r\n    const mid = (start + end) >> 1;\r\n    if (mid < 0)\r\n        return 0;\r\n    if (start >= end)\r\n        return mid;\r\n    return val < arr[mid].left\r\n        ? colBinarySearch(arr, val, start, mid)\r\n        : colBinarySearch(arr, val, mid + 1, end);\r\n}\r\n","import { State } from '../Model/State';\r\nimport { ReactGridProps } from '../Model/PublicModel';\r\nimport { getSizeOfElement } from './elementSizeHelpers';\r\nimport { CellMatrix } from '../Model/CellMatrix';\r\n\r\nconst DEFAULT_BREAKPOINT = 50;\r\n\r\nexport function updateResponsiveSticky(props: ReactGridProps, state: State): State {\r\n    const {\r\n        horizontalStickyBreakpoint = DEFAULT_BREAKPOINT,\r\n        verticalStickyBreakpoint = DEFAULT_BREAKPOINT,\r\n      } = props;\r\n      let leftStickyColumns = props.stickyLeftColumns || 0;\r\n      let topStickyRows = props.stickyTopRows || 0;\r\n      let rightStickyColumns = props.stickyRightColumns || 0;\r\n      let bottomStickyRows = props.stickyBottomRows || 0;\r\n      if (\r\n        props.stickyTopRows ||\r\n        props.stickyLeftColumns ||\r\n        props.stickyRightColumns ||\r\n        props.stickyBottomRows\r\n      ) {\r\n        const {\r\n          width: widthOfScrollableElement,\r\n          height: heightOfScrollableElement,\r\n        } = getSizeOfElement(state.scrollableElement);\r\n        if (props.stickyLeftColumns || props.stickyRightColumns) {\r\n          const predictedLeftRangeWidth = props.columns\r\n            .slice(0, leftStickyColumns)\r\n            .reduce((acc, column) => {\r\n              return acc + (column.width || CellMatrix.DEFAULT_COLUMN_WIDTH);\r\n            }, 0);\r\n          let predictedRightRangeWidth = 0;\r\n          if (rightStickyColumns > 0) {\r\n            predictedRightRangeWidth = props.columns\r\n              .slice(-rightStickyColumns)\r\n              .reduce((acc, column) => {\r\n                return acc + (column.width || CellMatrix.DEFAULT_COLUMN_WIDTH);\r\n              }, 0);\r\n          }\r\n          const shouldDisableStickyHorizontally =\r\n            predictedLeftRangeWidth + predictedRightRangeWidth >\r\n            (horizontalStickyBreakpoint * widthOfScrollableElement) / 100;\r\n          leftStickyColumns = shouldDisableStickyHorizontally\r\n            ? 0\r\n            : leftStickyColumns;\r\n          rightStickyColumns = shouldDisableStickyHorizontally\r\n            ? 0\r\n            : rightStickyColumns;\r\n        }\r\n        if (props.stickyTopRows || props.stickyBottomRows) {\r\n          const predictedTopRangeHeight = props.rows\r\n            .slice(0, topStickyRows)\r\n            .reduce((acc, column) => {\r\n              return acc + (column.height || CellMatrix.DEFAULT_ROW_HEIGHT);\r\n            }, 0);\r\n          let predictedBottomRangeHeight = 0;\r\n          if (bottomStickyRows > 0) {\r\n            predictedBottomRangeHeight = props.rows\r\n              .slice(-bottomStickyRows)\r\n              .reduce((prev, column) => {\r\n                return prev + (column.height || CellMatrix.DEFAULT_ROW_HEIGHT);\r\n              }, 0);\r\n          }\r\n          const shouldDisableStickyVertically =\r\n            predictedTopRangeHeight + predictedBottomRangeHeight >\r\n            (verticalStickyBreakpoint * heightOfScrollableElement) / 100;\r\n          topStickyRows = shouldDisableStickyVertically ? 0 : topStickyRows;\r\n          bottomStickyRows = shouldDisableStickyVertically ? 0 : bottomStickyRows;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        leftStickyColumns,\r\n        topStickyRows,\r\n        rightStickyColumns,\r\n        bottomStickyRows,\r\n      };\r\n}\r\n","import { recalcVisibleRange } from '../Functions/recalcVisibleRange';\r\nimport { getScrollableParent, getScrollOfScrollableElement } from '../Functions/scrollHelpers';\r\nimport { getVisibleSizeOfReactGrid } from '../Functions/elementSizeHelpers';\r\nimport { AbstractPointerEventsController } from './AbstractPointerEventsController';\r\nimport { StateModifier, StateUpdater } from './State';\r\nimport { PointerEvent, KeyboardEvent, ClipboardEvent, FocusEvent } from './domEventsTypes';\r\nimport { updateResponsiveSticky } from '../Functions/updateResponsiveSticky';\r\n\r\nexport class EventHandlers {\r\n\r\n    constructor(public updateState: StateUpdater, public pointerEventsController: AbstractPointerEventsController) { }\r\n\r\n    pointerDownHandler = (event: PointerEvent): void => this.updateState(state => this.pointerEventsController.handlePointerDown(event, state));\r\n    keyDownHandler = (event: KeyboardEvent): void => this.updateState(state => state.currentBehavior.handleKeyDown(event, state));\r\n    keyUpHandler = (event: KeyboardEvent): void => this.updateState(state => state.currentBehavior.handleKeyUp(event, state));\r\n    copyHandler = (event: ClipboardEvent): void => this.updateState(state => state.currentBehavior.handleCopy(event, state));\r\n    pasteHandler = (event: ClipboardEvent): void => this.updateState(state => state.currentBehavior.handlePaste(event, state));\r\n    cutHandler = (event: ClipboardEvent): void => this.updateState(state => state.currentBehavior.handleCut(event, state));\r\n    blurHandler = (event: FocusEvent): void => this.updateState(state => {\r\n        if ((event.target as HTMLInputElement)?.id.startsWith('react-select-')) { // give back focus on react-select dropdown blur\r\n            state.hiddenFocusElement?.focus({ preventScroll: true });\r\n        }\r\n        return state;\r\n    });\r\n    windowResizeHandler = (): void => this.updateState(recalcVisibleRange);\r\n    reactgridRefHandler = (reactGridElement: HTMLDivElement): void => this.assignElementsRefs(reactGridElement, recalcVisibleRange);\r\n    hiddenElementRefHandler = (hiddenFocusElement: HTMLInputElement): void => this.updateState(state => {\r\n        if (state.props?.initialFocusLocation && hiddenFocusElement) {\r\n            hiddenFocusElement.focus({ preventScroll: true });\r\n        }\r\n        state.hiddenFocusElement = hiddenFocusElement;\r\n        return state;\r\n    });\r\n\r\n    pasteCaptureHandler = (event: ClipboardEvent): void => {\r\n        const htmlData = event.clipboardData.getData('text/html');\r\n        const parsedData = new DOMParser().parseFromString(htmlData, 'text/html');\r\n        if (htmlData && parsedData.body.firstElementChild?.getAttribute('data-reactgrid') === 'reactgrid-content') {\r\n            event.bubbles = false;\r\n        }\r\n    };\r\n\r\n    protected scrollHandlerInternal = (visibleRangeCalculator: StateModifier): void => {\r\n        try {\r\n            return this.updateOnScrollChange(visibleRangeCalculator);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    scrollHandler: () => void = () => this.scrollHandlerInternal(recalcVisibleRange);\r\n\r\n    protected assignElementsRefs = (reactGridElement: HTMLDivElement, visibleRangeCalculator: StateModifier): void => {\r\n        if (reactGridElement) {\r\n            this.updateState(state => {\r\n                const scrollableElement = getScrollableParent(reactGridElement, true);\r\n                if (state.props) {\r\n                    state = updateResponsiveSticky(state.props, state);\r\n                }\r\n                return visibleRangeCalculator({ ...state, reactGridElement, scrollableElement });\r\n            });\r\n        }\r\n    }\r\n\r\n    protected updateOnScrollChange = (visibleRangeCalculator: StateModifier): void => {\r\n        this.updateState(state => {\r\n            if(state.disableVirtualScrolling) return state \r\n            const PAGE_UPDATE_OFFSET = 200;\r\n            const { scrollTop, scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n            const { width, height } = getVisibleSizeOfReactGrid(state);\r\n            const shouldBeVisibleRangeRecalc = width > 0 && height > 0 && (\r\n                scrollTop >= state.bottomScrollBoudary - PAGE_UPDATE_OFFSET || scrollTop <= state.topScrollBoudary + PAGE_UPDATE_OFFSET ||\r\n                scrollLeft >= state.rightScrollBoudary - PAGE_UPDATE_OFFSET || scrollLeft <= state.leftScrollBoudary + PAGE_UPDATE_OFFSET\r\n            );\r\n            return shouldBeVisibleRangeRecalc ? visibleRangeCalculator(state) : state;\r\n        });\r\n    }\r\n}\r\n","import {\r\n  PositionState,\r\n  Location,\r\n  getScrollOfScrollableElement,\r\n  getReactGridOffsets,\r\n  getTopScrollableElement,\r\n  getStickyLeftRangeWidth,\r\n  getLeftStickyOffset,\r\n  getStickyTopRangeWidth,\r\n  getTopStickyOffset,\r\n  getStickyOffset,\r\n  getVisibleSizeOfReactGrid,\r\n  CellEditorOffset,\r\n} from \"../../core\";\r\nimport { State } from \"../Model/State\";\r\nimport { CellMatrix } from \"../Model/CellMatrix\";\r\n\r\nconst calculatedXAxisOffset = (location: Location, state: State) => {\r\n  const cellMatrix = state.cellMatrix;\r\n  const offset: number | undefined = getRightStickyOffset(cellMatrix, location, state)\r\n      || getStickyLeftRangeWidth(cellMatrix, location) || getLeftStickyOffset(cellMatrix, location, state);\r\n  if (offset) {\r\n      return offset;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getRightStickyOffset(cellMatrix: CellMatrix, location: Location, state: State): number | undefined {\r\n  if (cellMatrix.ranges.stickyRightRange.first.column && location.column.idx >= cellMatrix.ranges.stickyRightRange.first.column.idx) {\r\n      const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n      const { left } = getReactGridOffsets(state);\r\n      const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n      const rightStickyOffset = getVisibleSizeOfReactGrid(state).width + leftStickyOffset - cellMatrix.ranges.stickyRightRange.width;\r\n      return rightStickyOffset;\r\n  }\r\n}\r\n\r\nfunction getBottomStickyOffset(cellMatrix: CellMatrix, location: Location, state: State): number | undefined {\r\n  if (cellMatrix.ranges.stickyBottomRange.first.row && location.row.idx >= cellMatrix.ranges.stickyBottomRange.first.row.idx) {\r\n      const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n      const { top } = getReactGridOffsets(state);\r\n      const topStickyOffset = getStickyOffset(scrollTop, top);\r\n      const bottomStickyOffset = getVisibleSizeOfReactGrid(state).height + topStickyOffset - cellMatrix.ranges.stickyBottomRange.height;\r\n      return bottomStickyOffset;\r\n  }\r\n}\r\n\r\nconst calculatedYAxisOffset = (location: Location, state: State): number => {\r\n  const cellMatrix = state.cellMatrix;\r\n  const offset: number | undefined = getBottomStickyOffset(cellMatrix, location, state)\r\n      || getStickyTopRangeWidth(cellMatrix, location) || getTopStickyOffset(cellMatrix, location, state);\r\n  if (offset) {\r\n      return offset;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport const calculateCellEditorPosition = (positionState: PositionState): CellEditorOffset => {\r\n  const { state, location } = positionState;\r\n  const { scrollTop, scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n  const { top, left } = getReactGridOffsets(state);\r\n  let offsetLeft = 0,\r\n      offsetTop = 0;\r\n  if (state.scrollableElement !== getTopScrollableElement()) {\r\n      const { left, top } = (state.scrollableElement as HTMLElement).getBoundingClientRect();\r\n      offsetLeft = left;\r\n      offsetTop = top;\r\n  }\r\n\r\n  // React StrictMode calls reducer two times to eliminate any side-effects\r\n  // this function is a reducer so we need to add the state and location to positionState\r\n  // in order to get them in the second call\r\n  return {\r\n    state,\r\n    location,\r\n    left: location.column.left + calculatedXAxisOffset(location, state as State)\r\n        + offsetLeft\r\n        + left\r\n        - scrollLeft,\r\n    top: location.row.top + calculatedYAxisOffset(location, state as State)\r\n        + offsetTop\r\n        + top\r\n        - scrollTop\r\n  };\r\n}","import React, { createContext, FC } from \"react\";\r\nimport { State } from \"../Model/State\";\r\n\r\nconst StateContext = createContext({} as State);\r\n\r\nexport const StateProvider: FC<{ state: State }> = ({ children, state }) => (\r\n  <StateContext.Provider value={state}>{children}</StateContext.Provider>\r\n);\r\n\r\nexport const useReactGridState = (): State => React.useContext(StateContext);\r\n","import * as React from 'react';\r\nimport { getReactGridOffsets, getStickyOffset } from '../Functions/elementSizeHelpers';\r\nimport { getScrollOfScrollableElement, getTopScrollableElement } from '../Functions/scrollHelpers';\r\nimport { tryAppendChange } from '../Functions/tryAppendChange';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { CellMatrix } from '../Model/CellMatrix';\r\nimport { Compatible, Cell } from '../Model/PublicModel';\r\nimport { State } from '../Model/State';\r\nimport { calculateCellEditorPosition } from '../Functions/cellEditorCalculator';\r\nimport { useReactGridState } from './StateProvider';\r\n\r\nexport interface CellEditorOffset<TState extends State = State> {\r\n    top: number;\r\n    left: number;\r\n    state: TState;\r\n    location: Location;\r\n}\r\n\r\ninterface CellEditorProps {\r\n    cellType: string;\r\n    style: React.CSSProperties;\r\n}\r\n\r\nexport interface PositionState<TState extends State = State> {\r\n    state: TState;\r\n    location: Location;\r\n}\r\n\r\nexport const CellEditorRenderer: React.FC = () => {\r\n    const state = useReactGridState();\r\n    const { currentlyEditedCell, focusedLocation: location } = state;\r\n\r\n    const renders = React.useRef(0);\r\n\r\n    const [position, dispatch] = React.useReducer(calculateCellEditorPosition as (options: PositionState) => any, {state, location}); // used to lock cell editor position\r\n\r\n    React.useEffect(() => {\r\n        renders.current += 1;\r\n        dispatch();\r\n    }, []);\r\n\r\n    if (!currentlyEditedCell || !location || renders.current === 0) { // prevents to unexpectly opening cell editor on cypress\r\n        return null;\r\n    }\r\n\r\n    const cellTemplate = state.cellTemplates[currentlyEditedCell.type];\r\n    return <CellEditor\r\n        cellType={currentlyEditedCell.type}\r\n        style={{\r\n            top: position.top && position.top - 1,\r\n            left: position.left && position.left - 1,\r\n            height: location.row.height + 1,\r\n            width: location.column.width + 1,\r\n            position: 'fixed'\r\n        }}\r\n    >\r\n        {cellTemplate.render(currentlyEditedCell, true, (cell: Compatible<Cell>, commit: boolean) => {\r\n            state.currentlyEditedCell = commit ? undefined : cell;\r\n            if (commit) state.update(s => tryAppendChange(s, location, cell));\r\n        })}\r\n    </CellEditor>\r\n};\r\n\r\nconst CellEditor: React.FC<CellEditorProps> = ({ style, cellType, children }) => {\r\n    return (\r\n        <div\r\n            className={`rg-celleditor rg-${cellType}-celleditor`}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculatedXAxisOffset = (location: Location, state: State) => {\r\n    const cellMatrix = state.cellMatrix;\r\n    const offset: number | undefined = getStickyLeftRangeWidth(cellMatrix, location) || getLeftStickyOffset(cellMatrix, location, state);\r\n    if (offset) {\r\n        return offset;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst calculatedYAxisOffset = (location: Location, state: State): number => {\r\n    const cellMatrix = state.cellMatrix;\r\n    const offset: number | undefined = getStickyTopRangeWidth(cellMatrix, location) || getTopStickyOffset(cellMatrix, location, state);\r\n    if (offset) {\r\n        return offset;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function getStickyLeftRangeWidth(cellMatrix: CellMatrix, location: Location): number | undefined {\r\n    if (location.column.idx > (cellMatrix.ranges.stickyLeftRange.last.column ? cellMatrix.ranges.stickyLeftRange.last.column.idx : cellMatrix.first.column.idx)\r\n        || (location.column.idx === cellMatrix.last.column.idx && location.column.idx !== cellMatrix.ranges.stickyLeftRange.last.column?.idx)\r\n    ) {\r\n        return cellMatrix.ranges.stickyLeftRange.width;\r\n    }\r\n}\r\n\r\nexport function getStickyTopRangeWidth(cellMatrix: CellMatrix, location: Location): number | undefined {\r\n    if (location.row.idx > (cellMatrix.ranges.stickyTopRange.last.row ? cellMatrix.ranges.stickyTopRange.last.row.idx : cellMatrix.first.row.idx)\r\n        || (location.row.idx === cellMatrix.last.row.idx && location.row.idx !== cellMatrix.ranges.stickyTopRange.last.row?.idx)\r\n    ) {\r\n        return cellMatrix.ranges.stickyTopRange.height;\r\n    }\r\n}\r\n\r\nexport function getLeftStickyOffset(cellMatrix: CellMatrix, location: Location, state: State): number | undefined {\r\n    if (cellMatrix.ranges.stickyLeftRange.first.column && location.column.idx >= cellMatrix.ranges.stickyLeftRange.first.column.idx\r\n        && location.column.idx <= cellMatrix.ranges.stickyLeftRange.last.column.idx\r\n    ) {\r\n        const { scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n        const { left } = getReactGridOffsets(state);\r\n        const leftStickyOffset = getStickyOffset(scrollLeft, left);\r\n        return leftStickyOffset;\r\n    }\r\n}\r\n\r\nexport function getTopStickyOffset(cellMatrix: CellMatrix, location: Location, state: State): number | undefined {\r\n    if (cellMatrix.ranges.stickyTopRange.first.row && location.row.idx >= cellMatrix.ranges.stickyTopRange.first.row.idx\r\n        && location.row.idx <= cellMatrix.ranges.stickyTopRange.last.row.idx\r\n    ) {\r\n        const { scrollTop } = getScrollOfScrollableElement(state.scrollableElement);\r\n        const { top } = getReactGridOffsets(state);\r\n        const topStickyOffset = getStickyOffset(scrollTop, top);\r\n        return topStickyOffset;\r\n    }\r\n}\r\n\r\nexport const cellEditorCalculator = (options: PositionState): CellEditorOffset => {\r\n    const { state, location } = options;\r\n    const { scrollTop, scrollLeft } = getScrollOfScrollableElement(state.scrollableElement);\r\n    const { top, left } = getReactGridOffsets(state);\r\n    let offsetLeft = 0,\r\n        offsetTop = 0;\r\n    if (state.scrollableElement !== getTopScrollableElement()) {\r\n        const { left, top } = (state.scrollableElement as HTMLElement).getBoundingClientRect();\r\n        offsetLeft = left;\r\n        offsetTop = top;\r\n    }\r\n\r\n    // React StrictMode calls reducer two times to eliminate any side-effects\r\n    // this function is a reducer so we need to add the state and location to positionState\r\n    // in order to get them in the second call\r\n    return {\r\n        state,\r\n        location,\r\n        left: location.column.left + calculatedXAxisOffset(location, state)\r\n            + offsetLeft\r\n            + left\r\n            - scrollLeft,\r\n        top: location.row.top + calculatedYAxisOffset(location, state)\r\n            + offsetTop\r\n            + top\r\n            - scrollTop\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\ninterface HiddenElementProps {\r\n  hiddenElementRefHandler: (hiddenFocusElement: HTMLInputElement) => void;\r\n}\r\n\r\nexport const HiddenElement: React.FC<HiddenElementProps> = ({\r\n  hiddenElementRefHandler,\r\n}) => {\r\n  const { hiddenFocusElement } = useReactGridState();\r\n  return (\r\n    <input\r\n      className=\"rg-hidden-element\"\r\n      ref={hiddenElementRefHandler}\r\n      inputMode=\"none\"\r\n      onBlur={(e) => {\r\n        if (!e.relatedTarget) {\r\n          // prevents from losing focus on hidden element on mobile devices\r\n          hiddenFocusElement?.focus({ preventScroll: true });\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { Component, ErrorInfo } from 'react';\r\n\r\ninterface ErrorBoundaryState {\r\n    error?: Error;\r\n    errorInfo?: React.ErrorInfo;\r\n    hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Record<string, unknown>, ErrorBoundaryState> {\r\n\r\n    state: ErrorBoundaryState = {\r\n        hasError: false,\r\n    };\r\n\r\n    static getDerivedStateFromError(error: ErrorBoundaryState): { hasError: boolean, error: ErrorBoundaryState } {\r\n        return { hasError: true, error };\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\r\n        this.setState({ errorInfo });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const { hasError, errorInfo, error } = this.state;\r\n\r\n        if (hasError) {\r\n            return (<>\r\n                <h1>{error?.message}</h1> <br /><br />\r\n                <details>\r\n                    {error?.stack}\r\n                    {errorInfo?.componentStack}\r\n                </details>\r\n            </>)\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { GridRendererProps } from '../Model/InternalModel';\r\nimport { HiddenElement } from './HiddenElement';\r\nimport { ErrorBoundary } from './ErrorBoundary';\r\nimport { useReactGridState } from './StateProvider';\r\n\r\nexport const GridRenderer: React.FC<GridRendererProps> = ({ eventHandlers, children }) => {\r\n    const { cellMatrix, props } = useReactGridState();\r\n    const sharedStyles = {\r\n        width: props?.enableFullWidthHeader ? '100%' : cellMatrix.width,\r\n        height: cellMatrix.height,\r\n    };\r\n    return (\r\n        <ErrorBoundary>\r\n            <div\r\n                className=\"reactgrid\"\r\n                style={{\r\n                    position: 'relative',\r\n                    ...sharedStyles,\r\n                }}\r\n                ref={eventHandlers.reactgridRefHandler}\r\n            >\r\n                <div\r\n                    className=\"reactgrid-content\"\r\n                    onKeyDown={eventHandlers.keyDownHandler}\r\n                    onKeyUp={eventHandlers.keyUpHandler}\r\n                    onPointerDown={eventHandlers.pointerDownHandler}\r\n                    onPasteCapture={eventHandlers.pasteCaptureHandler}\r\n                    onPaste={eventHandlers.pasteHandler}\r\n                    onCopy={eventHandlers.copyHandler}\r\n                    onCut={eventHandlers.cutHandler}\r\n                    onBlur={eventHandlers.blurHandler}\r\n                    style={sharedStyles}\r\n                >\r\n                    {children}\r\n                    <HiddenElement hiddenElementRefHandler={eventHandlers.hiddenElementRefHandler} />\r\n                </div>\r\n            </div>\r\n        </ErrorBoundary>\r\n    );\r\n};\r\n","import { TextLabels } from '../Model/PublicModel'\r\nimport { State } from '../Model/State'\r\n\r\nconst defultTranslations: Required<TextLabels> = {\r\n    legacyBrowserHeader: 'Please update to a modern browser.',\r\n    legacyBrowserText: 'Your current browser cannot run our content, please make sure you browser is fully updated or try adifferent browser. We highly recommend using the most recent release of Google Chrome, Microsoft Edge, Firefox, Safari, and Opera browser',\r\n    copyLabel: 'Copy',\r\n    cutLabel: 'Cut',\r\n    pasteLabel: 'Paste',\r\n    appleMobileDeviceContextMenuPasteAlert: 'Use ⌘ + c for copy, ⌘ + x for cut and ⌘ + v for paste.',\r\n    otherBrowsersContextMenuPasteAlert: ' Use ctrl + c for copy, ctrl + x for cut and ctrl + v for paste.',\r\n    actionNotSupported: 'This action is not supported in this browser.'\r\n}\r\n\r\nexport function i18n(state: State): Required<TextLabels> {\r\n    return {\r\n        ...defultTranslations,\r\n        ...state.props?.labels\r\n    }\r\n}","import * as React from \"react\";\r\nimport { i18n } from \"../Functions/i18n\";\r\nimport { GridRendererProps } from \"../Model/InternalModel\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\n\r\nexport const LegacyBrowserGridRenderer: React.FC<GridRendererProps> = () => {\r\n  const state = useReactGridState();\r\n  return (\r\n    <>\r\n      <h3>{i18n(state).legacyBrowserHeader}</h3>\r\n      <p>{i18n(state).legacyBrowserText}</p>\r\n    </>\r\n  );\r\n};\r\n","export function isMobileDevice(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for circle ci compiler\r\n        return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n    }\r\n    return false;\r\n}\r\n","import * as React from 'react';\r\n\r\nexport const ResizeHandle: React.FC = () => {\r\n    return (\r\n        <div className=\"rg-touch-resize-handle\" data-cy=\"rg-touch-resize-handle\">\r\n            <div className=\"rg-resize-handle\" data-cy=\"rg-resize-handle\" />\r\n        </div>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { areLocationsEqual } from '../Functions/areLocationsEqual';\r\nimport { noBorder } from '../Functions/excludeObjectProperties';\r\nimport { getCompatibleCellAndTemplate } from '../Functions/getCompatibleCellAndTemplate';\r\nimport { tryAppendChange } from '../Functions/tryAppendChange';\r\nimport { Borders, Location } from '../Model/InternalModel';\r\nimport { Range } from '../Model/Range';\r\nimport { BorderProps, Cell, Compatible } from '../Model/PublicModel';\r\nimport { State } from '../Model/State';\r\nimport { isMobileDevice } from '../Functions/isMobileDevice';\r\nimport { ResizeHandle } from './ResizeHandle';\r\n\r\nexport interface CellRendererProps {\r\n    state: State;\r\n    location: Location;\r\n    borders: Borders;\r\n    range: Range;\r\n    update: State['update'];\r\n    currentlyEditedCell: State['currentlyEditedCell'];\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport interface CellRendererChildProps<TState extends State = State> {\r\n    location?: Location;\r\n    cell?: Compatible<Cell>;\r\n    state?: TState;\r\n}\r\n\r\nconst unset = 'unset';\r\n\r\nfunction storeBorderAndCell(borders: Borders, cell: Compatible<Cell>) {\r\n    return (property: keyof BorderProps, defaultProp: string) => {\r\n        return (borderEdge: keyof Borders) => {\r\n            if (borders[borderEdge]) {\r\n                return cell.style?.border?.[borderEdge]?.[property]\r\n                    ? cell.style.border[borderEdge]?.[property]\r\n                    : defaultProp;\r\n            } else if (cell.style?.border?.[borderEdge]?.[property]) {\r\n                return cell.style.border[borderEdge]?.[property];\r\n            }\r\n            return unset;\r\n        };\r\n    };\r\n}\r\n\r\nfunction getBorderProperties(getPropertyOnBorderFn: (borderEdge: keyof Borders) => string | undefined) {\r\n    return {\r\n        left: getPropertyOnBorderFn('left'),\r\n        right: getPropertyOnBorderFn('right'),\r\n        top: getPropertyOnBorderFn('top'),\r\n        bottom: getPropertyOnBorderFn('bottom'),\r\n    };\r\n}\r\n\r\nexport const CellRenderer: React.FC<CellRendererProps> = ({\r\n    state,\r\n    location,\r\n    range,\r\n    borders,\r\n    update,\r\n    currentlyEditedCell,\r\n}) => {\r\n    const { cell, cellTemplate } = getCompatibleCellAndTemplate(state, location);\r\n    const isFocused = state.focusedLocation !== undefined && areLocationsEqual(state.focusedLocation, location);\r\n    const customClass = (cellTemplate.getClassName && cellTemplate.getClassName(cell, false)) ?? '';\r\n\r\n    const currentlyEditedCellRef = React.useRef(currentlyEditedCell);\r\n\r\n    const storePropertyAndDefaultValue = storeBorderAndCell(borders, cell);\r\n    const bordersWidth = getBorderProperties(storePropertyAndDefaultValue('width', '1px')),\r\n        bordersStyle = getBorderProperties(storePropertyAndDefaultValue('style', 'solid'));\r\n\r\n    const bordersProps = {\r\n        borderLeftWidth: bordersWidth.left,\r\n        borderLeftStyle: bordersStyle.left,\r\n        borderRightWidth: bordersWidth.right,\r\n        borderRightStyle: bordersStyle.right,\r\n        borderTopWidth: bordersWidth.top,\r\n        borderTopStyle: bordersStyle.top,\r\n        borderBottomWidth: bordersWidth.bottom,\r\n        borderBottomStyle: bordersStyle.bottom,\r\n    };\r\n\r\n    const isMobile = isMobileDevice();\r\n    const isFirstRowOrColumnWithSelection =\r\n        (state.props?.enableRowSelection && location.row.idx === 0) ||\r\n        (state.props?.enableColumnSelection && location.column.idx === 0);\r\n    const style = {\r\n        ...(cellTemplate.getStyle && (cellTemplate.getStyle(cell, false) || {})),\r\n        ...(cell.style && noBorder(cell.style)),\r\n        left: location.column.left,\r\n        top: location.row.top,\r\n        width: range.width,\r\n        height: range.height,\r\n        ...(!(isFocused && currentlyEditedCellRef.current) && bordersProps),\r\n        ...((isFocused || cell.type === 'header' || isFirstRowOrColumnWithSelection) && { touchAction: 'none' }), // prevent scrolling\r\n    } as React.CSSProperties;\r\n\r\n    const isInEditMode = isFocused && !!currentlyEditedCellRef.current;\r\n\r\n    const groupIdClassName = cell.groupId ? ` rg-groupId-${cell.groupId}` : '';\r\n    const nonEditableClassName = cell.nonEditable ? ' rg-cell-nonEditable' : '';\r\n    const cellClassNames =\r\n        isInEditMode && isMobile ? ` rg-celleditor rg-${cell.type}-celleditor` : ` rg-${cell.type}-cell`;\r\n    const classNames = `rg-cell${cellClassNames}${groupIdClassName}${nonEditableClassName} ${customClass}`;\r\n    const cellToRender =\r\n        isFocused && currentlyEditedCellRef.current && isMobile ? currentlyEditedCellRef.current : cell;\r\n\r\n    const onCellChanged = React.useCallback(\r\n        (cell: Compatible<Cell>, commit: boolean) => {\r\n            if (isInEditMode) {\r\n                currentlyEditedCellRef.current = commit ? undefined : cell;\r\n                if (commit) update((state) => tryAppendChange(state, location, cell));\r\n            } else {\r\n                if (!commit) throw new Error('commit should be set to true in this case.');\r\n                update((state) => tryAppendChange(state, location, cell));\r\n            }\r\n        },\r\n        [isInEditMode, location, update, currentlyEditedCellRef]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={classNames}\r\n            style={style}\r\n            {...(process.env.NODE_ENV === 'development' && {\r\n                'data-cell-colidx': location.column.idx,\r\n                'data-cell-rowidx': location.row.idx,\r\n            })}\r\n        >\r\n            {cellTemplate.render(cellToRender, isMobile ? isInEditMode : false, onCellChanged)}\r\n            {location.row.idx === 0 && location.column.resizable && <ResizeHandle />}\r\n            {state.enableGroupIdRender && cell?.groupId !== undefined && !(isInEditMode && isMobile) && (\r\n                <span className=\"rg-groupId\">{cell.groupId}</span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import { CellStyle } from \"../Model/PublicModel\";\r\n\r\nexport const noBorder = ({ border, ...rest }: CellStyle): Omit<CellStyle, 'border'> => rest;","import * as React from 'react';\r\nimport { translateLocationIdxToLookupKey } from '../Model/CellMatrix';\r\nimport { Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\n\r\n\r\ninterface FeaturedCellProps {\r\n    location: Location;\r\n    state?: State;\r\n    borderColor?: string;\r\n    className?: string;\r\n}\r\n\r\nexport const CellHighlight: React.FC<FeaturedCellProps> = ({ borderColor, location, className, state }) => {\r\n    const { idx: colIdx } = location.column;\r\n    const { idx: rowIdx } = location.row;\r\n    const range = state?.cellMatrix.rangesToRender[translateLocationIdxToLookupKey(colIdx, rowIdx)]?.range;\r\n    if (!range) {\r\n        return null;\r\n    }\r\n    return (\r\n        <FeaturedCell\r\n            location={location}\r\n            className={`rg-cell-highlight ${className || ''}`}\r\n            borderColor={borderColor}\r\n            width={range.width}\r\n            height={range.height}\r\n        />\r\n    );\r\n}\r\n\r\nexport const CellFocus: React.FC<FeaturedCellProps> = ({ borderColor, location, className }) => {\r\n    return <FeaturedCell\r\n        location={location}\r\n        className={`rg-cell-focus ${className || ''}`}\r\n        borderColor={borderColor}\r\n        width={location.column.width}\r\n        height={location.row.height}\r\n    />\r\n}\r\n\r\nconst FeaturedCell: React.FC<FeaturedCellProps & { width: number, height: number }> =\r\n    ({ className, location, borderColor, height, width }) => {\r\n        return (\r\n            <div\r\n                className={className}\r\n                style={{\r\n                    top: location.row.top - (location.row.top === 0 ? 0 : 1),\r\n                    left: location.column.left - (location.column.left === 0 ? 0 : 1),\r\n                    width: width + (location.column.left === 0 ? 0 : 1),\r\n                    height: height + (location.row.top === 0 ? 0 : 1),\r\n                    borderColor: `${borderColor}`,\r\n                }}\r\n            />\r\n        )\r\n    }\r\n","import * as React from 'react';\r\nimport { translateLocationIdxToLookupKey } from '../Model/CellMatrix';\r\nimport { GridRow, GridColumn, Borders, Location } from '../Model/InternalModel';\r\nimport { State } from '../Model/State';\r\nimport { CellRendererProps } from './CellRenderer';\r\n\r\nexport interface RowRendererProps {\r\n    state: State;\r\n    row: GridRow;\r\n    columns: GridColumn[];\r\n    forceUpdate: boolean;\r\n    borders: Borders;\r\n    cellRenderer: React.FC<CellRendererProps>;\r\n}\r\n\r\nfunction shouldMemoRowRenderer(prevProps: RowRendererProps, nextProps: RowRendererProps): boolean {\r\n    const { columns: prevCols } = prevProps;\r\n    const { columns: nextCols, forceUpdate } = nextProps;\r\n    return !(\r\n        // key for improving rendering speed - eg. chacksum for each col/row/cell\r\n        forceUpdate ||\r\n        nextCols[0].idx !== prevCols[0].idx || nextCols.length !== prevCols.length\r\n        || nextCols[nextCols.length - 1].idx !== prevCols[prevCols.length - 1].idx);\r\n}\r\n\r\nconst MappedColumns: React.FC<RowRendererProps> = ({ columns, row, cellRenderer, borders, state }) => {\r\n    const lastColIdx = columns[columns.length - 1].idx;\r\n    const CellRenderer = cellRenderer;\r\n    return (\r\n        <>\r\n            {columns.map(column => {\r\n                const range = state.cellMatrix.rangesToRender[translateLocationIdxToLookupKey(column.idx, row.idx)]?.range;\r\n                if (!range) {\r\n                    return null;\r\n                }\r\n                const location: Location = { row, column };\r\n                return <CellRenderer\r\n                    key={row.idx + '-' + column.idx}\r\n                    borders={{\r\n                        ...borders,\r\n                        left: borders.left && column.left === 0,\r\n                        right: (borders.right && column.idx === lastColIdx) || !(state.cellMatrix.scrollableRange.last.column.idx === location.column.idx)\r\n                    }}\r\n                    state={state}\r\n                    location={location}\r\n                    range={range}\r\n                    currentlyEditedCell={state.currentlyEditedCell}\r\n                    update={state.update}\r\n                />\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const RowRenderer: React.NamedExoticComponent<RowRendererProps> = React.memo(MappedColumns, shouldMemoRowRenderer);\r\n\r\nRowRenderer.displayName = 'RowRenderer';\r\n","import * as React from 'react';\r\nimport { PaneContentChild } from '../Model/InternalModel';\r\n\r\nexport const FillHandleRangeSelection: React.FC<PaneContentChild> = ({ state, calculatedRange }) => {\r\n    return <>\r\n        {state.currentBehavior.renderPanePart(state, calculatedRange)}\r\n    </>\r\n}\r\n","import React, { useRef, useLayoutEffect, useState } from \"react\";\r\nimport { Location } from \"../../core\";\r\nimport { State } from \"../Model/State\";\r\nimport { FillHandleBehavior } from \"../Behaviors/FillHandleBehavior\";\r\n\r\ninterface FillHandleProps {\r\n  state: State;\r\n  location: Location;\r\n}\r\n\r\nexport const FillHandle: React.FC<FillHandleProps> = ({ state, location }) => {\r\n  const targetRef = useRef<HTMLDivElement>(null);\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  useLayoutEffect(() => {\r\n    if (targetRef.current) {\r\n      setDimensions({\r\n        width: targetRef.current.offsetWidth,\r\n        height: targetRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"rg-touch-fill-handle\"\r\n      ref={targetRef}\r\n      style={{\r\n        top: location.row.bottom - dimensions.width / 2,\r\n        left: location.column.right - dimensions.height / 2,\r\n      }}\r\n      onPointerDown={(event) => {\r\n        if (event.pointerType !== \"mouse\") {\r\n          // !== undefined (disabled this event for cypress tests)\r\n          state.update((state) => ({\r\n            ...state,\r\n            currentBehavior: new FillHandleBehavior(),\r\n          }));\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"rg-fill-handle\" />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { PaneContentChild, Range } from \"../../core\";\r\nimport { CellSelectionBehavior } from \"../Behaviors/CellSelectionBehavior\";\r\nimport { FillHandle } from \"./FillHandle\";\r\n\r\nexport const FillHandleRenderer: React.FC<PaneContentChild> = ({\r\n  state,\r\n  calculatedRange,\r\n}) => {\r\n  return (\r\n    <>\r\n      {state.selectedRanges[state.activeSelectedRangeIdx] &&\r\n        calculatedRange instanceof Range &&\r\n        calculatedRange.contains(\r\n          state.selectedRanges[state.activeSelectedRangeIdx].last\r\n        ) &&\r\n        state.enableFillHandle &&\r\n        !state.currentlyEditedCell &&\r\n        !(state.currentBehavior instanceof CellSelectionBehavior) && (\r\n          <FillHandle\r\n            state={state}\r\n            location={state.selectedRanges[state.activeSelectedRangeIdx].last}\r\n          />\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { PaneContentChild, Range } from \"../../core\";\r\nimport { PartialArea } from \"./PartialArea\";\r\nimport { isRangeIntersects } from \"../Functions/isRangeIntersectsWith\";\r\n\r\nexport const SelectedRanges: React.FC<PaneContentChild> = ({\r\n  state,\r\n  calculatedRange,\r\n}) => {\r\n  return (\r\n    <>\r\n      {state.selectedRanges.map(\r\n        (range: Range, i: number) =>\r\n          !(\r\n            state.focusedLocation &&\r\n            range.contains(state.focusedLocation) &&\r\n            range.columns.length === 1 &&\r\n            range.rows.length === 1\r\n          ) &&\r\n          calculatedRange &&\r\n          isRangeIntersects(calculatedRange, range) && (\r\n            <PartialArea\r\n              key={i}\r\n              pane={calculatedRange}\r\n              range={range}\r\n              className=\"rg-partial-area-selected-range\"\r\n              style={{}}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Range } from '../Model/Range';\r\nimport { State } from '../Model/State';\r\nimport { Borders } from '../Model/InternalModel';\r\nimport { Highlight } from '../Model/PublicModel';\r\nimport { CellFocus, CellHighlight } from './CellFocus';\r\nimport { RowRenderer } from './RowRenderer';\r\nimport { CellRendererProps } from './CellRenderer';\r\nimport { isMobileDevice } from '../Functions/isMobileDevice';\r\nimport { FillHandleRangeSelection } from './FillHandleRangeSelection';\r\nimport { FillHandleRenderer } from './FillHandleRenderer';\r\nimport { SelectedRanges } from './SelectedRanges';\r\n\r\nexport interface PaneProps {\r\n    renderChildren: boolean;\r\n    style: React.CSSProperties;\r\n    className: string;\r\n}\r\n\r\nexport interface RowsProps {\r\n    state: State;\r\n    range: Range;\r\n    borders: Borders;\r\n    cellRenderer: React.FC<CellRendererProps>;\r\n}\r\n\r\nexport interface PaneContentProps<TState extends State = State> {\r\n    state: TState;\r\n    range: () => Range;\r\n    borders: Borders;\r\n    cellRenderer: React.FC<CellRendererProps>;\r\n    children?: (state: TState, range: Range) => React.ReactNode;\r\n}\r\n\r\nfunction shouldMemoPaneGridContent(prevProps: RowsProps, nextProps: RowsProps): boolean {\r\n    const { state: prevState } = prevProps;\r\n    const { state: nextState } = nextProps;\r\n    if (prevState.focusedLocation && nextState.focusedLocation\r\n        && prevState.currentlyEditedCell === nextState.currentlyEditedCell // used for opening cell editor in cell\r\n    ) {\r\n        if (prevState.focusedLocation.column.columnId !== nextState.focusedLocation.column.columnId\r\n            || prevState.focusedLocation.row.rowId !== nextState.focusedLocation.row.rowId)\r\n            return false;\r\n    } else {\r\n        return false; // needed when select range by touch after first focus\r\n    }\r\n    return !(prevState.visibleRange !== nextState.visibleRange || prevState.cellMatrix.props !== nextState.cellMatrix.props);\r\n}\r\n\r\nexport const PaneGridContent: React.NamedExoticComponent<RowsProps> = React.memo(({ range, state, borders, cellRenderer }) => <>\r\n    {range.rows.map(row => <RowRenderer key={row.rowId} state={state} row={row} columns={range.columns}\r\n        forceUpdate={true} cellRenderer={cellRenderer}\r\n        borders={{\r\n            ...borders,\r\n            top: borders.top && row.top === 0,\r\n            bottom: (borders.bottom && row.idx === range.last.row.idx) || !(state.cellMatrix.scrollableRange.last.row?.idx === row.idx)\r\n        }} />\r\n    )}\r\n</>, shouldMemoPaneGridContent);\r\n\r\nPaneGridContent.displayName = 'PaneGridContent';\r\n\r\nfunction renderHighlights(state: State, range: Range) {\r\n    return state.highlightLocations.map((highlight: Highlight, id: number) => {\r\n        try {\r\n            const location = state.cellMatrix.getLocationById(highlight.rowId, highlight.columnId);\r\n            return location && range.contains(location) &&\r\n                <CellHighlight key={id} location={location} state={state} borderColor={highlight.borderColor} />;\r\n        } catch (error) {\r\n            console.error(`Cell location fot found while rendering highlights at: ${(error as Error).message}`);\r\n            return null;\r\n        }\r\n    });\r\n}\r\n\r\nexport const Pane: React.FC<PaneProps> = ({ className, style, renderChildren, children }) => {\r\n    if (!style.width || !style.height) {\r\n        return null;\r\n    } else {\r\n        return <PaneContentWrapper className={className} style={style}> {renderChildren && children} </PaneContentWrapper>\r\n    }\r\n};\r\n\r\nexport const PaneContent: React.FC<PaneContentProps<State>> = (props) => {\r\n    const { state, range, borders, cellRenderer } = props;\r\n\r\n    const calculatedRange = range();\r\n\r\n    return (\r\n        <>\r\n            <PaneGridContent state={state} range={calculatedRange} borders={borders} cellRenderer={cellRenderer} />\r\n            {renderHighlights(state, calculatedRange)}\r\n            {state.focusedLocation && !(state.currentlyEditedCell && isMobileDevice()) && calculatedRange.contains(state.focusedLocation) &&\r\n                <CellFocus location={state.focusedLocation} />}\r\n            <SelectedRanges\r\n                state={state}\r\n                calculatedRange={calculatedRange}\r\n            />\r\n            <FillHandleRangeSelection\r\n                state={state}\r\n                calculatedRange={calculatedRange}\r\n            />\r\n            <FillHandleRenderer\r\n                state={state}\r\n                calculatedRange={calculatedRange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst PaneContentWrapper: React.FC<{ className: string, style: React.CSSProperties }> = props => {\r\n    return <div className={`rg-pane ${props.className}`} style={props.style}> {props.children} </div>\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Pane,\r\n  isBrowserFirefox,\r\n  shouldRenderTopSticky,\r\n  shouldRenderMiddleRange,\r\n  shouldRenderLeftSticky,\r\n  shouldRenderCenterRange,\r\n  columnsSlicer,\r\n  rowsSlicer,\r\n  Range,\r\n  PaneContent,\r\n  PaneShadow,\r\n  CellRendererProps,\r\n} from \"../../core\";\r\nimport {\r\n  shouldRenderBottomSticky,\r\n  shouldRenderRightSticky,\r\n} from \"../Functions/paneRendererPredicates\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\n\r\nexport interface PanesProps {\r\n  cellRenderer: React.FC<CellRendererProps>;\r\n}\r\n\r\nexport const PanesRenderer: React.FC<PanesProps> = ({ cellRenderer }) => {\r\n  const state = useReactGridState()\r\n  \r\n  const cellMatrix = state.cellMatrix;\r\n  const renderTopSticky = shouldRenderTopSticky(state),\r\n      renderMiddleRange = shouldRenderMiddleRange(state),\r\n      renderLeftSticky = shouldRenderLeftSticky(state),\r\n      renderCenterRange = shouldRenderCenterRange(state),\r\n      renderBottomSticky = shouldRenderBottomSticky(state),\r\n      renderRightSticky = shouldRenderRightSticky(state)\r\n\r\n  if (!renderTopSticky && !renderMiddleRange && !renderLeftSticky && !renderCenterRange) {\r\n      return null;\r\n  }\r\n\r\n  let visibleScrollableRange: Range | undefined = undefined;\r\n  const visibleRange = state.visibleRange as Range;\r\n  if (renderMiddleRange) {\r\n      visibleScrollableRange = cellMatrix.scrollableRange.slice(visibleRange, 'rows');\r\n  }\r\n\r\n  const marginTop = cellMatrix.ranges.stickyTopRange.height ? -cellMatrix.ranges.stickyBottomRange.height : 0;\r\n  const marginLeft = cellMatrix.ranges.stickyLeftRange.width ? -cellMatrix.ranges.stickyRightRange.width : 0;\r\n  const marginRight = cellMatrix.ranges.stickyRightRange.width ? -cellMatrix.ranges.stickyLeftRange.width : 0;\r\n  const marginBottom = cellMatrix.ranges.stickyBottomRange.height ? -cellMatrix.ranges.stickyTopRange.height : 0;\r\n\r\n  const marginTopOnScrollable = cellMatrix.scrollableRange.rows.length !== 0 ? cellMatrix.ranges.stickyTopRange.height : 0;\r\n  const marginLeftOnScrollable = cellMatrix.scrollableRange.columns.length !== 0 ? cellMatrix.ranges.stickyLeftRange.width : 0;\r\n  const marginBottomOnScrollable = cellMatrix.scrollableRange.rows.length !== 0 ? cellMatrix.ranges.stickyBottomRange.height : 0;\r\n  const marginRightOnScrollable = cellMatrix.scrollableRange.columns.length !== 0 ? cellMatrix.ranges.stickyRightRange.width : 0;\r\n\r\n  return (\r\n      <>\r\n          <Pane\r\n              renderChildren={renderMiddleRange && renderCenterRange}\r\n              className={'rg-pane-center-middle'}\r\n              style={{\r\n                  position: 'relative',\r\n                  width: `calc(100% - ${cellMatrix.ranges.stickyLeftRange.width + cellMatrix.ranges.stickyRightRange.width}px)`,\r\n                  height: cellMatrix.scrollableRange.height,\r\n                  marginLeft,\r\n                  marginRight,\r\n                  marginTop,\r\n                  marginBottom,\r\n                  order: 4,\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={columnsSlicer(visibleScrollableRange as Range)(visibleRange)}\r\n                  borders={{\r\n                      bottom: !renderBottomSticky,\r\n                      right: !renderRightSticky,\r\n                      left: !renderLeftSticky,\r\n                      top: !renderTopSticky,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n              />\r\n          </Pane>\r\n          <PaneShadow renderCondition={renderLeftSticky} className={'shadow-left'} zIndex={2} style={{\r\n              width: cellMatrix.ranges.stickyLeftRange.width,\r\n              height: cellMatrix.height,\r\n              marginTop: -cellMatrix.height,\r\n              order: 9,\r\n          }} />\r\n          <PaneShadow renderCondition={renderRightSticky} className={'shadow-right'} zIndex={2} style={{\r\n              width: cellMatrix.ranges.stickyRightRange.width,\r\n              height: cellMatrix.height,\r\n              marginLeft: -cellMatrix.ranges.stickyRightRange.width,\r\n              marginTop: renderTopSticky || renderBottomSticky ? -cellMatrix.height : 0,\r\n              order: renderTopSticky || renderBottomSticky ? 12 : 8,\r\n          }} />\r\n          <PaneShadow renderCondition={renderTopSticky} className={'shadow-top'} zIndex={1} style={{\r\n              width: state.props?.enableFullWidthHeader\r\n                  ? `calc(100%)`\r\n                  : cellMatrix.width,\r\n              height: cellMatrix.ranges.stickyTopRange.height,\r\n              marginTop: -cellMatrix.height,\r\n              order: 10,\r\n          }} />\r\n          <PaneShadow renderCondition={renderBottomSticky} className={'shadow-bottom'} zIndex={1} style={{\r\n              width: state.props?.enableFullWidthHeader\r\n                  ? `calc(100%)`\r\n                  : cellMatrix.width,\r\n              height: cellMatrix.ranges.stickyBottomRange.height,\r\n              marginTop: -cellMatrix.ranges.stickyBottomRange.height,\r\n              order: 11,\r\n          }} />\r\n          <Pane\r\n              renderChildren={renderCenterRange && renderBottomSticky}\r\n              className={'rg-pane-bottom'}\r\n              style={{\r\n                  width: `calc(100% - ${cellMatrix.ranges.stickyLeftRange.width + cellMatrix.ranges.stickyRightRange.width}px)`,\r\n                  height: cellMatrix.ranges.stickyBottomRange.height,\r\n                  marginLeft,\r\n                  marginRight,\r\n                  marginTop: marginTopOnScrollable,\r\n                  order: 7,\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={columnsSlicer(cellMatrix.ranges.stickyBottomRange)(visibleRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      bottom: true,\r\n                      right: !renderRightSticky,\r\n                      left: !renderLeftSticky,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={(renderMiddleRange && renderRightSticky) || !visibleScrollableRange}\r\n              className={'rg-pane-right'}\r\n              style={{\r\n                  height: cellMatrix.scrollableRange.height,\r\n                  width: cellMatrix.width - cellMatrix.ranges.stickyLeftRange.width - cellMatrix.scrollableRange.width,\r\n                  marginTop,\r\n                  marginBottom,\r\n                  marginLeft: marginLeftOnScrollable,\r\n                  order: 5,\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyRightRange)(visibleScrollableRange || cellMatrix.ranges.stickyLeftRange)}\r\n                  borders={{\r\n                      left: true,\r\n                      top: !renderTopSticky,\r\n                      bottom: !renderBottomSticky,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n              />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={renderTopSticky && renderCenterRange}\r\n              className={'rg-pane-top'}\r\n              style={{\r\n                  width: `calc(100% - ${cellMatrix.ranges.stickyLeftRange.width + cellMatrix.ranges.stickyRightRange.width}px)`,\r\n                  height: cellMatrix.ranges.stickyTopRange.height,\r\n                  marginBottom: marginBottomOnScrollable,\r\n                  marginLeft,\r\n                  marginRight,\r\n                  order: 1,\r\n                  ...(isBrowserFirefox() && { zIndex: 1 }),\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={columnsSlicer(cellMatrix.ranges.stickyTopRange)(visibleRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      right: !renderRightSticky,\r\n                      left: !renderLeftSticky\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={(renderMiddleRange && renderLeftSticky) || !visibleScrollableRange}\r\n              className={'rg-pane-left'}\r\n              style={{\r\n                  height: cellMatrix.scrollableRange.height,\r\n                  width: cellMatrix.width - cellMatrix.scrollableRange.width - cellMatrix.ranges.stickyRightRange.width,\r\n                  marginRight: marginRightOnScrollable,\r\n                  marginBottom,\r\n                  marginTop,\r\n                  order: 3,\r\n                  ...(isBrowserFirefox() && { zIndex: 1 }),\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyLeftRange)(visibleScrollableRange || cellMatrix.ranges.stickyLeftRange)}\r\n                  borders={{\r\n                      bottom: !renderBottomSticky,\r\n                      top: !renderTopSticky,\r\n                      left: true\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={renderBottomSticky && renderRightSticky}\r\n              className={'rg-pane-bottom rg-pane-right rg-pane-shadow shadow-bottom-right-corner'}\r\n              style={{\r\n                  height: cellMatrix.ranges.stickyBottomRange.height,\r\n                  width: cellMatrix.width - cellMatrix.ranges.stickyLeftRange.width - cellMatrix.scrollableRange.width,\r\n                  marginTop: marginTopOnScrollable,\r\n                  marginLeft: marginLeftOnScrollable,\r\n                  order: 8,\r\n                  ...(isBrowserFirefox() && { zIndex: 1 }),\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyRightRange)(cellMatrix.ranges.stickyBottomRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      left: true,\r\n                      right: true,\r\n                      bottom: true\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={renderBottomSticky && renderLeftSticky}\r\n              className={'rg-pane-bottom rg-pane-left rg-pane-shadow shadow-bottom-left-corner'}\r\n              style={{\r\n                  height: cellMatrix.ranges.stickyBottomRange.height,\r\n                  width: cellMatrix.width - cellMatrix.ranges.stickyRightRange.width - cellMatrix.scrollableRange.width,\r\n                  marginRight: marginRightOnScrollable,\r\n                  marginTop: marginTopOnScrollable,\r\n                  order: 6,\r\n                  ...(isBrowserFirefox() && { zIndex: 2 }),\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyLeftRange)(cellMatrix.ranges.stickyBottomRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      left: true,\r\n                      right: true,\r\n                      bottom: true,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={renderTopSticky && renderRightSticky}\r\n              className={'rg-pane-top rg-pane-right rg-pane-shadow shadow-top-right-corner'}\r\n              style={{\r\n                  height: cellMatrix.ranges.stickyTopRange.height,\r\n                  width: cellMatrix.width - cellMatrix.scrollableRange.width - cellMatrix.ranges.stickyLeftRange.width,\r\n                  marginLeft: marginLeftOnScrollable,\r\n                  marginBottom: marginBottomOnScrollable,\r\n                  order: 2,\r\n                  ...(isBrowserFirefox() && { zIndex: 2 })\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyRightRange)(cellMatrix.ranges.stickyTopRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      left: true,\r\n                      right: true,\r\n                      bottom: true,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n          <Pane\r\n              renderChildren={renderTopSticky && renderLeftSticky}\r\n              className={'rg-pane-top rg-pane-left rg-pane-shadow shadow-top-left-corner'}\r\n              style={{\r\n                  height: cellMatrix.ranges.stickyTopRange.height,\r\n                  width: cellMatrix.width - cellMatrix.scrollableRange.width - cellMatrix.ranges.stickyRightRange.width,\r\n                  marginRight: marginRightOnScrollable,\r\n                  marginBottom: marginBottomOnScrollable,\r\n                  order: 0,\r\n                  ...(isBrowserFirefox() && { zIndex: 3 }),\r\n              }}\r\n          >\r\n              <PaneContent\r\n                  state={state}\r\n                  range={rowsSlicer(cellMatrix.ranges.stickyLeftRange)(cellMatrix.ranges.stickyTopRange)}\r\n                  borders={{\r\n                      top: true,\r\n                      left: true,\r\n                      right: true,\r\n                      bottom: true,\r\n                  }}\r\n                  cellRenderer={cellRenderer}\r\n                />\r\n          </Pane>\r\n      </>\r\n  )\r\n}","import { State } from '../Model/State';\r\n\r\nexport function shouldRenderTopSticky(state: State): boolean {\r\n    return state.cellMatrix.ranges.stickyTopRange.height > 0;\r\n}\r\n\r\nexport function shouldRenderLeftSticky(state: State): boolean {\r\n    return state.cellMatrix.ranges.stickyLeftRange.width > 0;\r\n}\r\n\r\nexport function shouldRenderCenterRange(state: State): boolean {\r\n    return !!(state.visibleRange && state.visibleRange.width > 0); // TODO rewrite without !!\r\n}\r\n\r\nexport function shouldRenderMiddleRange(state: State): boolean {\r\n    return !!(state.cellMatrix.scrollableRange.height > 0 && state.cellMatrix.scrollableRange.first.column &&\r\n        state.cellMatrix.scrollableRange.first.row && state.cellMatrix.scrollableRange.last.row &&\r\n        state.visibleRange && state.visibleRange.height > 0); // TODO rewrite without !!\r\n}\r\n\r\nexport function shouldRenderBottomSticky(state: State): boolean {\r\n    return !!(state.cellMatrix.ranges.stickyBottomRange.height > 0 && state.cellMatrix.rows.length > 0);\r\n}\r\n\r\nexport function shouldRenderRightSticky(state: State): boolean {\r\n    return !!(state.cellMatrix.ranges.stickyRightRange.width > 0);\r\n}","export function isBrowserFirefox(): boolean {\r\n    if (typeof window !== 'undefined') { // condition needed for circle ci compiler\r\n        return navigator.userAgent.includes('Firefox');\r\n    }\r\n    return false;\r\n}\r\n","import * as React from 'react';\r\nimport { isBrowserFirefox } from '../Functions/firefox';\r\n\r\ninterface PaneShadowProps {\r\n    renderCondition: boolean;\r\n    className: string;\r\n    style: React.CSSProperties;\r\n    zIndex?: number;\r\n}\r\n\r\nexport const PaneShadow: React.FC<PaneShadowProps> = ({ renderCondition, className, style, zIndex, children }) => {\r\n    if (renderCondition) {\r\n        return (\r\n            <div className={`rg-pane-shadow ${className}`} style={{\r\n                ...style,\r\n                ...(isBrowserFirefox() && { zIndex }),\r\n            }} >\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n","import { GridRow, GridColumn } from \"../../core\";\r\nimport { State } from \"../Model/State\";\r\nimport { newLocation } from \"./newLocation\";\r\n\r\nexport function updateSelectedRows(state: State): State {\r\n  const firstCol = state.cellMatrix.first.column;\r\n  const lastCol = state.cellMatrix.last.column;\r\n  // TODO this filter is very inefficient for big tables\r\n  const updatedRows = state.cellMatrix.rows\r\n    .filter((r) => state.selectedIds.includes(r.rowId))\r\n    .sort((a, b) => a.idx - b.idx);\r\n  const rows = groupedRows(updatedRows);\r\n  const ranges = rows.map((row) =>\r\n    state.cellMatrix.getRange(\r\n      newLocation(row[0], firstCol),\r\n      newLocation(row[row.length - 1], lastCol)\r\n    )\r\n  );\r\n  let activeSelectedRangeIdx = state.selectedRanges.length - 1;\r\n\r\n  if (state.focusedLocation) {\r\n    ranges.forEach((range, idx) => {\r\n      range.rows.forEach((row) => {\r\n        if (state.focusedLocation?.row.rowId === row.rowId) {\r\n          activeSelectedRangeIdx = idx;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"row\",\r\n    activeSelectedRangeIdx,\r\n    selectedRanges: [...ranges],\r\n    selectedIndexes: updatedRows.map((row) => row.idx),\r\n    selectedIds: updatedRows.map((row) => row.rowId),\r\n  };\r\n}\r\n\r\nexport function updateSelectedColumns(state: State): State {\r\n  const firstRow = state.cellMatrix.first.row;\r\n  const lastRow = state.cellMatrix.last.row;\r\n  // TODO this filter is very inefficient for big tables\r\n  const updatedColumns = state.cellMatrix.columns\r\n    .filter((r) => state.selectedIds.includes(r.columnId))\r\n    .sort((a, b) => a.idx - b.idx);\r\n  const columns = groupedColumns(updatedColumns);\r\n  const ranges = columns.map((arr) =>\r\n    state.cellMatrix.getRange(\r\n      newLocation(firstRow, arr[0]),\r\n      newLocation(lastRow, arr[arr.length - 1])\r\n    )\r\n  );\r\n  let activeSelectedRangeIdx = state.selectedRanges.length - 1;\r\n\r\n  if (state.focusedLocation) {\r\n    ranges.forEach((range, idx) => {\r\n      range.columns.forEach((col) => {\r\n        if (state.focusedLocation?.column.columnId === col.columnId) {\r\n          activeSelectedRangeIdx = idx;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectionMode: \"column\",\r\n    activeSelectedRangeIdx,\r\n    selectedRanges: [...ranges],\r\n    selectedIndexes: updatedColumns.map((col) => col.idx),\r\n    selectedIds: updatedColumns.map((col) => col.columnId),\r\n  };\r\n}\r\n\r\nconst groupedRows = (array: GridRow[]) => {\r\n  const grouped: GridRow[][] = [];\r\n  let sortIndex = 0;\r\n  array.forEach((current: GridRow, index) => {\r\n    if (!array[index - 1]) {\r\n      grouped.push([current]);\r\n      return;\r\n    }\r\n    const prev: GridRow = array[index - 1];\r\n    if (current.idx - prev.idx === 1) {\r\n      if (!grouped[sortIndex]) {\r\n        grouped.push([prev, current]);\r\n      } else {\r\n        grouped[sortIndex].push(current);\r\n      }\r\n    } else {\r\n      grouped.push([current]);\r\n      sortIndex += 1;\r\n    }\r\n  });\r\n  return grouped;\r\n};\r\n\r\nconst groupedColumns = (array: GridColumn[]) => {\r\n  const grouped: GridColumn[][] = [];\r\n  let sortIndex = 0;\r\n  array.forEach((current: GridColumn, index) => {\r\n    if (!array[index - 1]) {\r\n      grouped.push([current]);\r\n      return;\r\n    }\r\n    const prev: GridColumn = array[index - 1];\r\n    if (current.idx - prev.idx === 1) {\r\n      if (!grouped[sortIndex]) {\r\n        grouped.push([prev, current]);\r\n      } else {\r\n        grouped[sortIndex].push(current);\r\n      }\r\n    } else {\r\n      grouped.push([current]);\r\n      sortIndex += 1;\r\n    }\r\n  });\r\n  return grouped;\r\n};\r\n","import { State } from '../Model/State';\r\nimport { ReactGridProps, CellLocation } from '../Model/PublicModel';\r\nimport { CellMatrixBuilder } from '../Model/CellMatrixBuilder';\r\nimport { defaultCellTemplates } from './defaultCellTemplates';\r\nimport { focusLocation } from './focusLocation';\r\nimport { recalcVisibleRange } from './recalcVisibleRange';\r\nimport { updateResponsiveSticky } from './updateResponsiveSticky';\r\nimport { updateSelectedColumns, updateSelectedRows } from './updateState';\r\nimport { resetSelection } from './selectRange';\r\n\r\nexport function getDerivedStateFromProps(\r\n    props: ReactGridProps,\r\n    state: State\r\n  ): State {\r\n    const stateDeriverWithProps = stateDeriver(props);\r\n  \r\n    const hasHighlightsChanged = highlightsHasChanged(props, state);\r\n  \r\n    if (hasHighlightsChanged) {\r\n      state = stateDeriverWithProps(state)(appendHighlights);\r\n    }\r\n    state = stateDeriverWithProps(state)(updateStateProps);\r\n  \r\n    state = stateDeriverWithProps(state)(appendCellTemplates);\r\n\r\n    state = stateDeriverWithProps(state)(appendGroupIdRender);\r\n  \r\n    const hasChanged = dataHasChanged(props, state);\r\n  \r\n    state = stateDeriverWithProps(state)(updateResponsiveSticky)\r\n    \r\n    state = stateDeriverWithProps(state)(disableVirtualScrolling)\r\n  \r\n    if (hasChanged) {\r\n      state = stateDeriverWithProps(state)(updateCellMatrix);\r\n    }\r\n  \r\n    state = stateDeriverWithProps(state)(updateSelections);\r\n  \r\n    state = stateDeriverWithProps(state)(updateFocusedLocation);\r\n  \r\n    if (hasChanged) {\r\n      state = stateDeriverWithProps(state)(updateVisibleRange);\r\n    }\r\n\r\n    state = stateDeriverWithProps(state)(setInitialFocusLocation);\r\n  \r\n    if (areFocusesDiff(props, state)) {\r\n      state = stateDeriverWithProps(state)(setFocusLocation);\r\n    }\r\n  \r\n    state = stateDeriverWithProps(state)(appendStateFields);\r\n  \r\n    return state;\r\n}\r\n\r\nfunction updateSelections(props: ReactGridProps, state: State): State {\r\n    if (state.selectionMode === \"row\" && state.selectedIds.length > 0) {\r\n      state = updateSelectedRows(state);\r\n    } else if (state.selectionMode === \"column\" && state.selectedIds.length > 0) {\r\n      state = updateSelectedColumns(state);\r\n    } else {\r\n      state = {\r\n        ...state,\r\n        selectedRanges: [...state.selectedRanges].map((range) =>\r\n          state.cellMatrix.validateRange(range)\r\n        ),\r\n      };\r\n    }\r\n    return state;\r\n  }\r\n\r\nfunction appendStateFields(\r\n    props: ReactGridProps,\r\n    state: State\r\n  ): State {\r\n    return {\r\n      ...state,\r\n      enableFillHandle: !!props.enableFillHandle,\r\n      enableRangeSelection: !!props.enableRangeSelection,\r\n      enableColumnSelection: !!props.enableColumnSelection,\r\n      enableRowSelection: !!props.enableRowSelection,\r\n    };\r\n  }\r\n  \r\n\r\nexport const areFocusesDiff = (props: ReactGridProps, state: State): boolean => {\r\n    return props.focusLocation?.columnId !== state.focusedLocation?.column.columnId\r\n        || props.focusLocation?.rowId !== state.focusedLocation?.row.rowId\r\n        || (props.stickyRightColumns !== undefined && props.stickyRightColumns !== state.rightStickyColumns) \r\n        || (props.stickyBottomRows !== undefined && props.stickyBottomRows !== state.bottomStickyRows);\r\n}\r\n\r\nexport const stateDeriver = (props: ReactGridProps) => (state: State) => (fn: (props: ReactGridProps, state: State) => State): State => fn(props, state);\r\n\r\nexport const dataHasChanged = (props: ReactGridProps, state: State): boolean => !state.cellMatrix || props !== state.cellMatrix.props\r\n    || (props.stickyLeftColumns !== undefined && props.stickyLeftColumns !== state.leftStickyColumns)\r\n    || (props.stickyTopRows !== undefined && props.stickyTopRows !== state.topStickyRows)\r\n    || (props.stickyBottomRows !== undefined && props.stickyBottomRows !== state.bottomStickyRows)\r\n    || (props.stickyRightColumns !== undefined && props.stickyRightColumns !== state.rightStickyColumns);\r\n\r\nexport const highlightsHasChanged = (props: ReactGridProps, state: State): boolean => props.highlights !== state.props?.highlights;\r\n\r\nexport function updateStateProps(props: ReactGridProps, state: State): State {\r\n    if (state.props !== props) {\r\n        state = { ...state, props };\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction updateCellMatrix(props: ReactGridProps, state: State): State {\r\n    const builder = new CellMatrixBuilder();\r\n    return {\r\n        ...state,\r\n        cellMatrix: builder\r\n          .setProps(props)\r\n          .fillRowsAndCols({\r\n            leftStickyColumns: state.leftStickyColumns || 0,\r\n            topStickyRows: state.topStickyRows || 0,\r\n            rightStickyColumns: state.rightStickyColumns || 0,\r\n            bottomStickyRows: state.bottomStickyRows || 0,\r\n          })\r\n          .setRangesToRenderLookup()\r\n          .fillSticky({\r\n            leftStickyColumns: state.leftStickyColumns || 0,\r\n            topStickyRows: state.topStickyRows || 0,\r\n            rightStickyColumns: state.rightStickyColumns || 0,\r\n            bottomStickyRows: state.bottomStickyRows || 0,\r\n          })\r\n          .fillScrollableRange({\r\n            leftStickyColumns: state.leftStickyColumns || 0,\r\n            topStickyRows: state.topStickyRows || 0,\r\n            rightStickyColumns: state.rightStickyColumns || 0,\r\n            bottomStickyRows: state.bottomStickyRows || 0,\r\n          })\r\n          .setEdgeLocations()\r\n          .getCellMatrix(),\r\n      };\r\n}\r\n\r\nexport function updateFocusedLocation(props: ReactGridProps, state: State): State {\r\n    if (state.cellMatrix.columns.length > 0 && state.focusedLocation && !state.currentlyEditedCell) {\r\n        state = { ...state, focusedLocation: state.cellMatrix.validateLocation(state.focusedLocation) };\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction updateVisibleRange(props: ReactGridProps, state: State): State {\r\n    if (state.visibleRange) {\r\n        state = recalcVisibleRange(state);\r\n    }\r\n    return state;\r\n}\r\n\r\nexport function appendCellTemplates(props: ReactGridProps, state: State): State {\r\n    return {\r\n        ...state,\r\n        cellTemplates: { ...defaultCellTemplates, ...props.customCellTemplates }\r\n    }\r\n}\r\n\r\nexport function appendGroupIdRender(props: ReactGridProps, state: State): State {\r\n    return {\r\n        ...state,\r\n        enableGroupIdRender: !!props.enableGroupIdRender\r\n    }\r\n}\r\n\r\nfunction disableVirtualScrolling(props: ReactGridProps, state: State): State {\r\n  return {\r\n      ...state,\r\n      disableVirtualScrolling: !!props.disableVirtualScrolling\r\n  }\r\n}\r\n\r\nexport function appendHighlights(props: ReactGridProps, state: State): State {\r\n    const highlights = props.highlights?.filter(highlight => state.cellMatrix.rowIndexLookup[highlight.rowId] !== undefined &&\r\n        state.cellMatrix.columnIndexLookup[highlight.columnId] !== undefined\r\n    );\r\n    if (highlights?.length !== props.highlights?.length) {\r\n        console.error('Data inconsistency in ReactGrid \"highlights\" prop');\r\n    }\r\n    return {\r\n        ...state,\r\n        highlightLocations: highlights || [],\r\n    }\r\n}\r\n\r\nexport function setInitialFocusLocation(props: ReactGridProps, state: State): State {\r\n    const locationToFocus = props.initialFocusLocation;\r\n    const wasFocused = !!state.focusedLocation;\r\n\r\n    if (locationToFocus && !state.focusedLocation) {\r\n        if (isLocationToFocusCorrect(state, locationToFocus)) {\r\n            console.error('Data inconsistency in ReactGrid \"initialFocusLocation\" prop');\r\n        } else {\r\n            const location = state.cellMatrix.getLocationById(locationToFocus.rowId, locationToFocus.columnId);\r\n            state =  focusLocation(state, location);\r\n        }\r\n    }\r\n\r\n    const location = state.focusedLocation;\r\n\r\n    if (!wasFocused && location) {\r\n        state = resetSelection(state, location);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport function setFocusLocation(props: ReactGridProps, state: State): State {\r\n    const locationToFocus = props.focusLocation;\r\n    const wasFocused = !!state.focusedLocation;\r\n\r\n    if (locationToFocus) {\r\n        if (isLocationToFocusCorrect(state, locationToFocus)) {\r\n            console.error('Data inconsistency in ReactGrid \"focusLocation\" prop');\r\n        } else {\r\n            const location = state.cellMatrix.getLocationById(locationToFocus.rowId, locationToFocus.columnId);\r\n            state = focusLocation(state, location)\r\n        }\r\n    }\r\n\r\n    const location = state.focusedLocation;\r\n\r\n    if (!wasFocused && location && props.focusLocation && state.selectedRanges.length <= 1) {\r\n        state = resetSelection(state, location);\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nfunction isLocationToFocusCorrect(state: State, location: CellLocation) {\r\n    return !(state.cellMatrix.columnIndexLookup[location.columnId] !== undefined)\r\n        || !(state.cellMatrix.rowIndexLookup[location.rowId] !== undefined)\r\n}\r\n","import { isMacOs } from './operatingSystem';\r\nimport { PointerEvent, KeyboardEvent } from '../Model/domEventsTypes';\r\n\r\nexport function isSelectionKey(event: PointerEvent | KeyboardEvent): boolean {\r\n    return (!isMacOs() && event.ctrlKey) || event.metaKey;\r\n}","import { SliceDirection, Range } from '../Model/Range';\r\n\r\n\r\nconst rangeSlicer = (direction: SliceDirection) => (range: Range) => (rangeToSlice: Range) => (): Range => range.slice(rangeToSlice, direction);\r\n\r\nexport const columnsSlicer = rangeSlicer('columns');\r\nexport const rowsSlicer = rangeSlicer('rows');","import { ReactGridProps } from '../Model/PublicModel';\r\nimport { State } from '../Model/State';\r\n\r\n\r\nexport function handleStateUpdate<TState extends State = State>(newState: TState, state: TState, props: ReactGridProps, setState: (state: TState) => void): void {\r\n    const changes = [...newState.queuedCellChanges];\r\n    if (changes.length > 0) {\r\n        if (props.onCellsChanged) {\r\n            props.onCellsChanged([...changes]);\r\n        }\r\n        changes.forEach(() => newState.queuedCellChanges.pop());\r\n    }\r\n    if (newState !== state) {\r\n        setState(newState);\r\n    }\r\n}\r\n","import { State } from '../Model/State';\r\nimport { PointerEvent } from '../Model/domEventsTypes';\r\n\r\nexport function isOnClickableArea(event: PointerEvent, state: State): boolean {\r\n    if (!state.reactGridElement) {\r\n        throw new Error(`\"state.reactGridElement\" field should be initiated before calling the \"getBoundingClientRect()\"`);\r\n    }\r\n    const { left, right } = state.reactGridElement.getBoundingClientRect();\r\n    const scrollableContentX = event.clientX - left;\r\n    const rightPaneWidth = state.cellMatrix.ranges.stickyRightRange.width;\r\n    if (scrollableContentX >= state.cellMatrix.width - rightPaneWidth && !(event.clientX >= right - rightPaneWidth)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import { PointerEvent } from './domEventsTypes';\r\nimport { getLocationFromClient } from '../Functions/getLocationFromClient';\r\nimport { AbstractPointerEventsController, isReadyToHandleEvent } from './AbstractPointerEventsController';\r\nimport { State } from './State';\r\nimport { DefaultBehavior } from '../Behaviors/DefaultBehavior';\r\nimport { Behavior } from './Behavior';\r\nimport { ResizeColumnBehavior } from '../Behaviors/ResizeColumnBehavior';\r\nimport { ColumnReorderBehavior } from '../Behaviors/ColumnReorderBehavior';\r\nimport { isOnClickableArea } from '../Functions/isOnClickableArea';\r\nimport { scrollCalculator } from '../Functions/componentDidUpdate';\r\nimport { scrollIntoView } from '../Functions/scrollIntoView';\r\nimport { areLocationsEqual } from '../Functions/areLocationsEqual';\r\n\r\n\r\nexport class PointerEventsController extends AbstractPointerEventsController {\r\n    // private isPointerDown?: boolean;\r\n    private isFromLeftToRightScroll?: boolean;\r\n    private isFromRightToLeftScroll?: boolean;\r\n    private isInLeftSticky?: boolean;\r\n    private isInRightSticky?: boolean;\r\n    private isFromTopToBottomScroll?: boolean;\r\n    private isInTopSticky?: boolean;\r\n    private isFromBottomToTopScroll?: boolean;\r\n    private isInBottomSticky?: boolean;\r\n  \r\n    // TODO Handle PointerCancel\r\n    // TODO use State, make generic AbstractPointerEventsController\r\n    public handlePointerDown = (event: PointerEvent, state: State): State => {\r\n      this.isInLeftSticky = false;\r\n      this.isInRightSticky = false;\r\n      this.isInTopSticky = false;\r\n      this.isInBottomSticky = false;\r\n      const onClickableAreaOnPro = isOnClickableArea(\r\n        event,\r\n        state as State\r\n      );\r\n      if (state.props?.onContextMenu && onClickableAreaOnPro) {\r\n        window.addEventListener(\"contextmenu\", this.handleContextMenu);\r\n      }\r\n      if (!onClickableAreaOnPro) {\r\n        return {\r\n          ...state,\r\n          contextMenuPosition: { top: -1, left: -1 },\r\n        } as State;\r\n      }\r\n      if (!isReadyToHandleEvent(event)) {\r\n        return state;\r\n      }\r\n  \r\n      window.addEventListener(\"pointermove\", this.handlePointerMove);\r\n      window.addEventListener(\"pointerup\", this.handlePointerUp);\r\n      const currentLocation = getLocationFromClient(\r\n        state as State,\r\n        event.clientX,\r\n        event.clientY\r\n      );\r\n      return this.handlePointerDownInternal(event, currentLocation, state);\r\n    };\r\n  \r\n    private handleHideContextMenu = (event: PointerEvent): void => {\r\n      window.removeEventListener(\"pointerdown\", this.handleHideContextMenu);\r\n      this.updateState((state) => {\r\n        if (event instanceof MouseEvent && this.isContainElement(event, state)) {\r\n          return state;\r\n        }\r\n        return {\r\n          ...state,\r\n          contextMenuPosition: { top: -1, left: -1 },\r\n        } as State;\r\n      });\r\n    };\r\n  \r\n    private isContainElement = (event: PointerEvent | MouseEvent, state: State) =>\r\n      state.reactGridElement?.contains(event.target as Element);\r\n  \r\n    private handleContextMenu = (event: PointerEvent | MouseEvent): void => {\r\n      window.removeEventListener(\"pointerup\", this.handlePointerUp);\r\n      window.removeEventListener(\"pointermove\", this.handlePointerMove);\r\n      window.removeEventListener(\"contextmenu\", this.handleContextMenu);\r\n      window.addEventListener(\"pointerdown\", this.handleHideContextMenu);\r\n      this.updateState((state) => {\r\n        if (this.isContainElement(event, state)) {\r\n          const currentLocation = getLocationFromClient(\r\n            state as State,\r\n            event.clientX,\r\n            event.clientY\r\n          );\r\n          state = (state.currentBehavior as Behavior).handlePointerUp(\r\n            event,\r\n            currentLocation,\r\n            state\r\n          );\r\n          state = (state.currentBehavior as Behavior).handleContextMenu(\r\n            event,\r\n            state as State\r\n          );\r\n          state.hiddenFocusElement?.focus();\r\n        }\r\n        return state;\r\n      });\r\n    };\r\n  \r\n    private handlePointerMove = (event: PointerEvent): void => {\r\n      this.updateState((state) => {\r\n        const autoScrollDirection = (state.currentBehavior as Behavior)\r\n          .autoScrollDirection;\r\n        const stickyLocation = getLocationFromClient(\r\n          state as State,\r\n          event.clientX,\r\n          event.clientY,\r\n          undefined\r\n        );\r\n        const underStickyLocation = getLocationFromClient(\r\n          state as State,\r\n          event.clientX,\r\n          event.clientY,\r\n          autoScrollDirection\r\n        );\r\n        let currentLocation = underStickyLocation;\r\n        if (\r\n          stickyLocation.column.idx < currentLocation.column.idx &&\r\n          !this.isFromLeftToRightScroll &&\r\n          !this.isInLeftSticky\r\n        ) {\r\n          currentLocation = stickyLocation;\r\n        } else if (\r\n          stickyLocation.column.idx > currentLocation.column.idx &&\r\n          !this.isFromRightToLeftScroll &&\r\n          !this.isInRightSticky\r\n        ) {\r\n          this.isFromRightToLeftScroll = false;\r\n          currentLocation = stickyLocation;\r\n        } else if (\r\n          stickyLocation.row.idx < currentLocation.row.idx &&\r\n          !this.isFromTopToBottomScroll &&\r\n          !this.isInTopSticky\r\n        ) {\r\n          this.isFromTopToBottomScroll = false;\r\n          currentLocation = stickyLocation;\r\n        } else if (\r\n          stickyLocation.row.idx > currentLocation.row.idx &&\r\n          !this.isFromBottomToTopScroll &&\r\n          !this.isInBottomSticky\r\n        ) {\r\n          this.isFromBottomToTopScroll = false;\r\n          currentLocation = stickyLocation;\r\n        } else {\r\n          this.isInLeftSticky = true;\r\n          this.isInRightSticky = true;\r\n          this.isInTopSticky = true;\r\n          this.isInBottomSticky = true;\r\n        }\r\n        if (\r\n          ((event.target as HTMLDivElement).className !== \"reactgrid-content\" &&\r\n            !(state.currentBehavior instanceof ResizeColumnBehavior) &&\r\n            state.props?.enableRangeSelection) ||\r\n          state.currentBehavior instanceof ColumnReorderBehavior\r\n        ) {\r\n          const { left, top } = scrollCalculator(\r\n            state as State,\r\n            currentLocation\r\n          );\r\n          scrollIntoView(state, top, left); // TODO Make PRO\r\n        }\r\n        state = (state.currentBehavior as Behavior).handlePointerMove(\r\n          event,\r\n          currentLocation,\r\n          state as State\r\n        );\r\n        const previousLocation = this.eventLocations[this.currentIndex];\r\n        this.eventLocations[this.currentIndex] = currentLocation;\r\n        if (!areLocationsEqual(currentLocation, previousLocation)) {\r\n          state = (state.currentBehavior as Behavior).handlePointerEnter(\r\n            event,\r\n            currentLocation,\r\n            state as State\r\n          );\r\n        }\r\n        return state;\r\n      });\r\n    };\r\n  \r\n    private handlePointerUp = (event: PointerEvent): void => {\r\n      if (event.button !== 0 && event.button !== undefined) return;\r\n      window.removeEventListener(\"pointerup\", this.handlePointerUp);\r\n      window.removeEventListener(\"pointermove\", this.handlePointerMove);\r\n      window.removeEventListener(\"contextmenu\", this.handleContextMenu);\r\n      this.updateState((state) => {\r\n        const currentLocation = getLocationFromClient(\r\n          state as State,\r\n          event.clientX,\r\n          event.clientY\r\n        );\r\n        const currentTimestamp = new Date().valueOf();\r\n        const secondLastTimestamp = this.eventTimestamps[1 - this.currentIndex];\r\n        state = state.currentBehavior.handlePointerUp(\r\n          event,\r\n          currentLocation,\r\n          state\r\n        );\r\n        if (\r\n          this.shouldHandleCellSelectionOnMobile(\r\n            event,\r\n            currentLocation,\r\n            currentTimestamp\r\n          )\r\n        ) {\r\n          state = state.currentBehavior.handlePointerDown(\r\n            event,\r\n            currentLocation,\r\n            state\r\n          );\r\n        }\r\n        state = { ...state, currentBehavior: new DefaultBehavior() };\r\n        if (\r\n          this.shouldHandleDoubleClick(\r\n            currentLocation,\r\n            currentTimestamp,\r\n            secondLastTimestamp\r\n          )\r\n        ) {\r\n          state = state.currentBehavior.handleDoubleClick(\r\n            event,\r\n            currentLocation,\r\n            state\r\n          );\r\n        }\r\n        state.hiddenFocusElement?.focus();\r\n        return state;\r\n      });\r\n    };\r\n  }","import * as React from \"react\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\n\r\nexport const Line: React.FC = () => {\r\n  const { linePosition, lineOrientation, cellMatrix } = useReactGridState();\r\n\r\n  const isVertical = lineOrientation === \"vertical\";\r\n\r\n  const lineStyles = Object.assign(\r\n    {},\r\n    isVertical\r\n      ? { left: linePosition, height: cellMatrix.height }\r\n      : { top: linePosition, width: cellMatrix.width }\r\n  );\r\n\r\n  if (linePosition === -1) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`rg-line ${\r\n        isVertical ? \"rg-line-vertical\" : \"rg-line-horizontal\"\r\n      }`}\r\n      style={lineStyles}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\n\r\nexport const Shadow: React.FC = () => {\r\n  const {\r\n    lineOrientation,\r\n    shadowSize,\r\n    shadowPosition,\r\n    shadowCursor,\r\n    cellMatrix,\r\n  } = useReactGridState();\r\n\r\n  const isVertical = lineOrientation === \"vertical\";\r\n\r\n  if (shadowPosition === -1) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"rg-shadow\"\r\n      style={{\r\n        cursor: shadowCursor,\r\n        top: isVertical ? 0 : shadowPosition,\r\n        left: isVertical ? shadowPosition : 0,\r\n        width: isVertical ? shadowSize : cellMatrix.width,\r\n        height: isVertical ? cellMatrix.height : shadowSize,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { State } from '../Model/State';\r\nimport { getActiveSelectedRange } from './getActiveSelectedRange';\r\nimport { getDataToCopy } from './getDataToCopy';\r\n\r\nexport function copySelectedRangeToClipboard(state: State, removeValues = false): void {\r\n    const activeSelectedRange = getActiveSelectedRange(state);\r\n    if (!activeSelectedRange) {\r\n        return;\r\n    }\r\n    const { div } = getDataToCopy(state, activeSelectedRange, removeValues);\r\n    document.body.appendChild(div);\r\n    div.focus();\r\n    document.execCommand('selectAll', false, undefined);\r\n    document.execCommand('copy');\r\n    document.body.removeChild(div);\r\n    state.hiddenFocusElement?.focus();\r\n}\r\n","import { State } from \"../Model/State\";\r\nimport { CellLocation } from \"../../core\";\r\n\r\nexport function getSelectedLocations(state: State): Array<CellLocation[]> {\r\n  return state.selectedRanges.map((selectedRange) => {\r\n    return selectedRange.rows.flatMap((row) => {\r\n      return selectedRange.columns.map<CellLocation>((col) => ({\r\n        columnId: col.columnId,\r\n        rowId: row.rowId,\r\n      }));\r\n    });\r\n  });\r\n}\r\n","import * as React from \"react\";\r\nimport { State } from \"../Model/State\";\r\nimport {\r\n  MenuOption,\r\n  isBrowserFirefox,\r\n  i18n,\r\n  isIOS,\r\n  isIpadOS,\r\n  getCompatibleCellAndTemplate,\r\n  isMacOs,\r\n  Compatible,\r\n  Cell,\r\n} from \"../../core\";\r\nimport { copySelectedRangeToClipboard } from \"../Functions/copySelectedRangeToClipboard\";\r\nimport { pasteData } from \"../Functions/pasteData\";\r\nimport { getActiveSelectedRange } from \"../Functions/getActiveSelectedRange\";\r\nimport { getSelectedLocations } from \"../Functions/getSelectedLocations\";\r\nimport { useReactGridState } from \"./StateProvider\";\r\n\r\nexport const ContextMenu: React.FC = () => {\r\n  const state = useReactGridState();\r\n\r\n  if (\r\n    state.contextMenuPosition.top === -1 &&\r\n    state.contextMenuPosition.left === -1\r\n  )\r\n    return null;\r\n\r\n  const { contextMenuPosition, selectedIds, selectionMode } = state;\r\n\r\n  let contextMenuOptions = customContextMenuOptions(state);\r\n\r\n  const onContextMenu = (menuOptions: MenuOption[]) =>\r\n    state.props?.onContextMenu?.(\r\n      state.selectionMode === \"row\" ? state.selectedIds : [],\r\n      state.selectionMode === \"column\" ? state.selectedIds : [],\r\n      state.selectionMode,\r\n      menuOptions,\r\n      getSelectedLocations(state)\r\n    ) ?? [];\r\n\r\n  const options = onContextMenu(contextMenuOptions);\r\n\r\n  if (options.length >= 0) contextMenuOptions = options;\r\n\r\n  return (\r\n    <div\r\n      className=\"rg-context-menu\"\r\n      style={{\r\n        top: contextMenuPosition.top + \"px\",\r\n        left: contextMenuPosition.left + \"px\",\r\n      }}\r\n    >\r\n      {contextMenuOptions.map(({ handler, id, label }, idx) => (\r\n        <div\r\n          key={idx}\r\n          className=\"rg-context-menu-option\"\r\n          onPointerDown={(e) => e.stopPropagation()}\r\n          onClick={() => {\r\n            handler(\r\n              selectionMode === \"row\" ? selectedIds : [],\r\n              selectionMode === \"column\" ? selectedIds : [],\r\n              selectionMode,\r\n              getSelectedLocations(state)\r\n            );\r\n            state.update((state) => ({\r\n              ...state,\r\n              contextMenuPosition: { top: -1, left: -1 },\r\n              ...((id === \"copy\" || id === \"cut\") && {\r\n                copyRange: getActiveSelectedRange(state as State),\r\n              }),\r\n            }));\r\n          }}\r\n        >\r\n          {label}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction customContextMenuOptions(state: State): MenuOption[] {\r\n  const { copyLabel, cutLabel, pasteLabel } = i18n(state);\r\n  return [\r\n    {\r\n      id: \"copy\",\r\n      label: copyLabel,\r\n      handler: () => handleContextMenuCopy(state, false),\r\n    },\r\n    {\r\n      id: \"cut\",\r\n      label: cutLabel,\r\n      handler: () => handleContextMenuCopy(state, true),\r\n    },\r\n    {\r\n      id: \"paste\",\r\n      label: pasteLabel,\r\n      handler: () => handleContextMenuPaste(state),\r\n    },\r\n  ];\r\n}\r\n\r\nfunction handleContextMenuCopy(state: State, removeValues = false): void {\r\n  copySelectedRangeToClipboard(state, removeValues);\r\n}\r\n\r\nfunction handleContextMenuPaste(state: State) {\r\n  const isAppleMobileDevice = isIOS() || isIpadOS();\r\n  if (isBrowserFirefox() || isAppleMobileDevice) {\r\n    const {\r\n      appleMobileDeviceContextMenuPasteAlert,\r\n      otherBrowsersContextMenuPasteAlert,\r\n      actionNotSupported,\r\n    } = i18n(state);\r\n    alert(\r\n      `${actionNotSupported} ${\r\n        isAppleMobileDevice\r\n          ? appleMobileDeviceContextMenuPasteAlert\r\n          : otherBrowsersContextMenuPasteAlert\r\n      }`\r\n    );\r\n  } else {\r\n    navigator.clipboard\r\n      ?.readText()\r\n      .then((e) =>\r\n        state.update((state) => {\r\n          const proState = state as State;\r\n          const { copyRange } = proState;\r\n          let applyMetaData = false;\r\n          const clipboardRows = isMacOs() ? e.split(\"\\n\") : e.split(\"\\r\\n\");\r\n          const clipboard = clipboardRows.map((line) => line.split(\"\\t\"));\r\n          if (copyRange && copyRange.rows && copyRange.columns) {\r\n            const isSizeEqual =\r\n              copyRange.rows.length === clipboardRows.length &&\r\n              copyRange.columns.length === clipboard[0].length;\r\n            if (isSizeEqual) {\r\n              applyMetaData = copyRange.rows.some((row, rowIdx) => {\r\n                return copyRange.columns.some((column, colIdx) => {\r\n                  // need to avoid difference beetwen whitespace and space char\r\n                  return (\r\n                    clipboard[rowIdx][colIdx].trim() ===\r\n                    getCompatibleCellAndTemplate(proState, { row, column })\r\n                      .cell.text.replaceAll(\r\n                        String.fromCharCode(160),\r\n                        String.fromCharCode(32)\r\n                      )\r\n                      .trim()\r\n                  );\r\n                });\r\n              });\r\n            }\r\n          }\r\n          return pasteData(\r\n            proState,\r\n            clipboardRows.map((line, rowIdx) => {\r\n              return line.split(\"\\t\").map<Compatible<Cell>>((text, colIdx) => {\r\n                if (!copyRange) {\r\n                  return {\r\n                    type: \"text\",\r\n                    text,\r\n                    value: parseFloat(text),\r\n                  };\r\n                }\r\n                const { cell } = getCompatibleCellAndTemplate(proState, {\r\n                  row: copyRange.rows[rowIdx],\r\n                  column: copyRange.columns[colIdx],\r\n                });\r\n                return {\r\n                  type: \"text\",\r\n                  // probably this ternanary and spread operator is no longer needed\r\n                  text: applyMetaData ? cell.text : text,\r\n                  value: applyMetaData ? cell.value : parseFloat(text),\r\n                  ...(applyMetaData && {\r\n                    groupId: cell.groupId,\r\n                  }),\r\n                };\r\n              });\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .catch(({ message }) => {\r\n        console.error(\r\n          `An error occurred while pasting data by context menu: '${message}'`\r\n        );\r\n      });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { CellRenderer, ReactGridProps } from \"../../core\";\r\nimport {\r\n  GridRenderer,\r\n  LegacyBrowserGridRenderer,\r\n  StateModifier,\r\n  CellEditorRenderer,\r\n  handleStateUpdate,\r\n} from \"../../core\";\r\nimport { PointerEventsController } from \"../Model/PointerEventsController\";\r\nimport { EventHandlers } from \"../Model/EventHandlers\";\r\nimport { getDerivedStateFromProps } from \"../Functions/getDerivedStateFromProps\";\r\nimport { PanesRenderer } from \"./PanesRenderer\";\r\nimport { DefaultBehavior } from \"../Behaviors/DefaultBehavior\";\r\nimport { CellMatrixBuilder } from \"../Model/CellMatrixBuilder\";\r\nimport { defaultStateFields, State } from \"../Model/State\";\r\nimport { Line } from \"./Line\";\r\nimport { Shadow } from \"./Shadow\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { componentDidUpdate } from \"../Functions/componentDidUpdate\";\r\nimport { StateProvider } from \"./StateProvider\";\r\n\r\nexport class ReactGrid extends React.Component<ReactGridProps, State> {\r\n  private updateState = (state: State) => this.setState(state);\r\n  private stateUpdater = (modifier: StateModifier) =>\r\n    handleStateUpdate(\r\n      modifier(this.state) as State,\r\n      this.state,\r\n      this.props,\r\n      this.updateState\r\n    );\r\n  private pointerEventsController = new PointerEventsController(\r\n    this.stateUpdater\r\n  );\r\n  private eventHandlers = new EventHandlers(\r\n    this.stateUpdater,\r\n    this.pointerEventsController\r\n  );\r\n  private cellMatrixBuilder = new CellMatrixBuilder();\r\n  state: State = {\r\n    update: this.stateUpdater,\r\n    ...defaultStateFields,\r\n    currentBehavior: new DefaultBehavior(),\r\n    cellMatrix: this.cellMatrixBuilder\r\n      .setProps(this.props)\r\n      .fillRowsAndCols()\r\n      .setRangesToRenderLookup()\r\n      .fillSticky()\r\n      .fillScrollableRange()\r\n      .setEdgeLocations()\r\n      .getCellMatrix(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(\r\n    props: ReactGridProps,\r\n    state: State\r\n  ): State | null {\r\n    try {\r\n      return getDerivedStateFromProps(props, state);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ReactGridProps, prevState: State): void {\r\n    if (!prevState.reactGridElement && this.state.reactGridElement) {\r\n      this.state.scrollableElement?.addEventListener(\r\n        \"scroll\",\r\n        this.eventHandlers.scrollHandler\r\n      );\r\n    }\r\n    componentDidUpdate(prevProps, prevState, this.state);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    window.addEventListener(\"resize\", this.eventHandlers.windowResizeHandler);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    window.removeEventListener(\r\n      \"resize\",\r\n      this.eventHandlers.windowResizeHandler\r\n    );\r\n    this.state.scrollableElement?.removeEventListener(\r\n      \"scroll\",\r\n      this.eventHandlers.scrollHandler\r\n    );\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const { state, eventHandlers } = this;\r\n\r\n    if (state.legacyBrowserMode) {\r\n      return (\r\n        <StateProvider state={state}>\r\n          <LegacyBrowserGridRenderer eventHandlers={eventHandlers} />\r\n        </StateProvider>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StateProvider state={state}>\r\n        <GridRenderer eventHandlers={eventHandlers}>\r\n          <PanesRenderer cellRenderer={CellRenderer} />\r\n\r\n          <Line />\r\n\r\n          <Shadow />\r\n\r\n          <ContextMenu />\r\n\r\n          {state.currentlyEditedCell && <CellEditorRenderer />}\r\n        </GridRenderer>\r\n      </StateProvider>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n    CellTemplate, Cell, Compatible, Uncertain, UncertainCompatible, isNavigationKey, getCellProperty,\r\n    isAlphaNumericKey, keyCodes\r\n} from '../../reactgrid';\r\nimport './flag-cell-style.scss';\r\n\r\nexport interface FlagCell extends Cell {\r\n    type: 'flag';\r\n    text: string;\r\n}\r\n\r\nexport class FlagCellTemplate implements CellTemplate<FlagCell> {\r\n\r\n    getCompatibleCell(uncertainCell: Uncertain<FlagCell>): Compatible<FlagCell> {\r\n        const text = getCellProperty(uncertainCell, 'text', 'string');\r\n        const value = parseFloat(text);\r\n        return { ...uncertainCell, text, value };\r\n    }\r\n\r\n    handleKeyDown(cell: Compatible<FlagCell>, keyCode: number, ctrl: boolean, shift: boolean, alt: boolean): { cell: Compatible<FlagCell>, enableEditMode: boolean } {\r\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode))\r\n            return { cell, enableEditMode: true }\r\n        return { cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER }\r\n    }\r\n\r\n    update(cell: Compatible<FlagCell>, cellToMerge: UncertainCompatible<FlagCell>): Compatible<FlagCell> {\r\n        return this.getCompatibleCell({ ...cell, text: cellToMerge.text });\r\n    }\r\n\r\n    render(cell: Compatible<FlagCell>, isInEditMode: boolean, onCellChanged: (cell: Compatible<FlagCell>, commit: boolean) => void): React.ReactNode {\r\n        if (!isInEditMode) {\r\n            const flagISO = cell.text.toLowerCase(); // ISO 3166-1, 2/3 letters\r\n            const flagURL = `https://restcountries.eu/data/${flagISO}.svg`;\r\n            return <div\r\n                className='rg-flag-wrapper'\r\n                style={{\r\n                    // backgroundImage: 'url(\"' + flagURL + '\"), url(\"https://upload.wikimedia.org/wikipedia/commons/0/04/Nuvola_unknown_flag.svg\")',\r\n                }} />\r\n        }\r\n        return <input\r\n            ref={input => {\r\n                input && input.focus();\r\n            }}\r\n            defaultValue={cell.text}\r\n            onChange={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), false)}\r\n            onCopy={e => e.stopPropagation()}\r\n            onCut={e => e.stopPropagation()}\r\n            onPaste={e => e.stopPropagation()}\r\n            onPointerDown={e => e.stopPropagation()}\r\n            onBlur={e => onCellChanged(this.getCompatibleCell({ ...cell, text: e.currentTarget.value }), (e as any).view?.event?.keyCode !== keyCodes.ESCAPE)}\r\n            onKeyDown={e => {\r\n                if (isAlphaNumericKey(e.keyCode) || isNavigationKey(e.keyCode)) e.stopPropagation();\r\n                if (e.keyCode === keyCodes.ESCAPE) e.currentTarget.value = cell.text; // reset\r\n            }}\r\n        />\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport React from 'react';\r\nimport {\r\n    Column, Row, Id, MenuOption, SelectionMode, DropPosition, CellLocation,\r\n    DefaultCellTypes, CellChange, ReactGridProps, TextCell, NumberCell, CellStyle, HeaderCell, ChevronCell\r\n} from './../reactgrid';\r\nimport { TestConfig } from './testEnvConfig';\r\nimport '../styles.scss';\r\nimport { FlagCell, FlagCellTemplate } from './flagCell/FlagCellTemplate';\r\n\r\ntype TestGridCells = DefaultCellTypes | FlagCell;\r\n\r\ntype TestGridRow = Row<TestGridCells>;\r\n\r\ninterface TestGridProps {\r\n    enableSticky?: boolean;\r\n    enableColumnAndRowSelection?: boolean;\r\n    enableFrozenFocus?: boolean;\r\n    firstRowType?: TextCell['type'] | HeaderCell['type']; // 'text' if undefined\r\n    firstColType?: ChevronCell['type'] | HeaderCell['type']; // 'chevron' if undefined\r\n    cellType?: TextCell['type'] | HeaderCell['type']; // 'text' if undefined\r\n    config: TestConfig;\r\n    component: React.ComponentClass<ReactGridProps>;\r\n}\r\n\r\nconst numberValidator: NumberCell['validator'] = (number: number) => {\r\n    return number !== 1000;\r\n}\r\n\r\nconst textValidator: TextCell['validator'] = (text: string) => {\r\n    return text !== \"myText\";\r\n}\r\n\r\nconst emailValidator: TextCell['validator'] = (email) => {\r\n    const email_regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return email_regex.test(email.replace(/\\s+/g, ''));\r\n}\r\n\r\nconst myNumberFormat = new Intl.NumberFormat('pl', { style: 'currency', minimumFractionDigits: 2, maximumFractionDigits: 2, currency: 'PLN' });\r\nconst myDateFormat = new Intl.DateTimeFormat('pl', { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric' });\r\nconst myTimeFormat = new Intl.DateTimeFormat('pl', { hour: '2-digit', minute: '2-digit' });\r\n\r\nconst style: CellStyle = {\r\n    border: {\r\n        left: { color: 'red', style: 'dashed', width: '2px' },\r\n        top: { color: 'red', style: 'dashed', width: '2px' },\r\n        right: { color: 'red', style: 'dashed', width: '2px' },\r\n        bottom: { color: 'red', style: 'dashed', width: '2px' }\r\n    }\r\n};\r\n\r\nexport const TestGrid: React.FC<TestGridProps> = (props) => {\r\n    const {\r\n        config, component, enableSticky, enableColumnAndRowSelection, enableFrozenFocus,\r\n        firstRowType = 'text',\r\n        firstColType = 'chevron',\r\n        cellType = 'text',\r\n    } = props;\r\n\r\n    const [render, setRender] = React.useState(true);\r\n    const [columns, setColumns] = React.useState(() => new Array(config.columns).fill({ columnId: 0, resizable: true, reorderable: true, width: -1 })\r\n        .map<Column>((_, ci) => ({ columnId: `col-${ci}`, resizable: true, reorderable: true, width: config.cellWidth })));\r\n\r\n    const [rows, setRows] = React.useState(() => new Array(config.rows).fill(0).map<TestGridRow>((_, ri) => ({\r\n        rowId: `row-${ri}`,\r\n        reorderable: true,\r\n        height: config.cellHeight,\r\n        cells: columns.map<TestGridCells>((_, ci) => {\r\n            if (ri === 0) return { type: firstRowType, text: `${ri} - ${ci}` }\r\n            if (ri === 2 && ci === 8) return { type: 'text', text: `non-editable`, nonEditable: true, validator: (text: string): boolean => true }\r\n            if (ri === 3 && ci === 8) return { type: 'text', text: '', placeholder: 'placeholder', validator: (text: string): boolean => true }\r\n            \r\n            const spannedCells = config.spannedCells?.filter(sC => sC.idx === ci && sC.idy === ri)[0];\r\n            const headerCells = config.headerCells?.filter(sC => sC.idx === ci && sC.idy === ri)[0];\r\n            if (spannedCells || headerCells) {\r\n                return { type: cellType, text: `${ri} - ${ci}`, colspan: spannedCells ? spannedCells.colspan : 0, rowspan: spannedCells ? spannedCells.rowspan : 0 }\r\n            }\r\n\r\n            // spanned and header cells should \"win\" these conditions\r\n            if (ri === 1 && ci === 1) return { type: 'text', groupId: !(ri % 3) ? 'B' : undefined, text: `${ri} - ${ci}`, style, validator: textValidator, errorMessage: \"ERR\" };\r\n            if (ri === 1 && ci === 2) return { type: 'email', text: `${ri}.${ci}@bing.pl`, validator: emailValidator, errorMessage: \"ERR\" };\r\n            if (ri === 1 && ci === 3) return { type: 'number', format: myNumberFormat, validator: numberValidator, errorMessage: \"ERR\", value: parseFloat(`${ri}.${ci}`), nanToZero: false, hideZero: true };\r\n            if (ri === 2 && ci === 1) return { type: 'text', groupId: !(ri % 3) ? 'B' : undefined, text: `${ri} - ${ci}`, style, validator: textValidator };\r\n            if (ri === 2 && ci === 2) return { type: 'email', text: `${ri}.${ci}@bing.pl`, validator: emailValidator };\r\n            if (ri === 2 && ci === 3) return { type: 'number', format: myNumberFormat, validator: numberValidator, value: parseFloat(`${ri}.${ci}`), nanToZero: false, hideZero: true };\r\n\r\n            const now = new Date();\r\n            switch (ci) {\r\n                case 0:\r\n                    return firstColType === 'chevron'\r\n                        ? { type: 'chevron', groupId: !(ri % 3) ? 'A' : undefined, text: `${ri} - ${ci}`, parentId: ri, isExpanded: ri % 4 ? true : undefined, hasChildren: true }\r\n                        : { type: 'header', groupId: !(ri % 3) ? 'A' : undefined, text: `${ri} - ${ci}` }\r\n                case 1:\r\n                    return { type: 'text', groupId: !(ri % 3) ? 'B' : undefined, text: `${ri} - ${ci}`, style }\r\n                case 2:\r\n                    return { type: 'email', text: `${ri}.${ci}@bing.pl`, validator: emailValidator }\r\n                case 3:\r\n                    return { type: 'number', format: myNumberFormat, value: parseFloat(`${ri}.${ci}`), nanToZero: false, hideZero: true }\r\n                case 4:\r\n                    return { type: 'date', format: myDateFormat, date: new Date(now.setHours((ri * 24), 0, 0, 0)) }\r\n                case 5:\r\n                    return { type: 'time', format: myTimeFormat, time: new Date(now.setHours(now.getHours() + ri)) }\r\n                case 6:\r\n                    return { type: 'checkbox', checked: false, checkedText: 'Checked', uncheckedText: 'Unchecked' }\r\n                case 7:\r\n                    return { type: 'flag', groupId: Math.random() < .66 ? Math.random() < .5 ? 'A' : 'B' : undefined, text: 'bra' }\r\n                case 8:\r\n                    return {\r\n                        type: 'dropdown', values: [\r\n                            { value: 'react', label: 'React' },\r\n                            { value: 'vue', label: 'Vue' },\r\n                            { value: 'angular', label: 'Angular' }\r\n                        ], currentValue: 'react', isDisabled: false\r\n                    }\r\n                case -1: // just for interface testing purposes\r\n                    return { type: 'header', text: ``, rowspan: 3, colspan: 2 }\r\n                default:\r\n                    return { type: 'text', text: `${ri} - ${ci}`, validator: (text: string): boolean => true }\r\n            }\r\n        })\r\n    })));\r\n\r\n    const handleColumnResize = (columnId: Id, width: number, selectedColIds: Id[]) => {\r\n        setColumns((prevColumns) => {\r\n            const setColumnWidth = (columnIndex: number) => {\r\n                const resizedColumn = prevColumns[columnIndex];\r\n                prevColumns[columnIndex] = { ...resizedColumn, width };\r\n            }\r\n\r\n            if (selectedColIds.includes(columnId)) {\r\n                const stateColumnIndexes = prevColumns\r\n                    .filter(col => selectedColIds.includes(col.columnId))\r\n                    .map(col => prevColumns.findIndex(el => el.columnId === col.columnId));\r\n                stateColumnIndexes.forEach(setColumnWidth);\r\n            } else {\r\n                const columnIndex = prevColumns.findIndex(col => col.columnId === columnId);\r\n                setColumnWidth(columnIndex);\r\n            }\r\n            return [...prevColumns];\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const handleChangesTest = (changes: CellChange[]) => {\r\n        changes.forEach(change => {\r\n            const ax: TextCell['type'] | NumberCell['type'] = Math.random() > .5 ? 'text' : 'number';\r\n            if (change.newCell.type === ax) {\r\n                console.log(change.newCell.type);\r\n            }\r\n            if (change.type === 'text') {\r\n                console.log(change.newCell.text);\r\n            }\r\n            if (change.type === 'checkbox') {\r\n                console.log(change.previousCell.checked);\r\n            }\r\n        });\r\n    };\r\n\r\n    // TODO ReactGrid should be able to handle this function\r\n    // eslint-disable-next-line\r\n    const handleChangesTest2 = (changes: CellChange<TextCell>[]) => { };\r\n\r\n    // eslint-disable-next-line\r\n    rows[0].cells.find((cell) => cell.type === \"text\" && cell.text);\r\n\r\n    const handleChanges = (changes: CellChange<TestGridCells>[]) => {\r\n        setRows((prevRows) => {\r\n            changes.forEach((change) => {\r\n                const changeRowIdx = prevRows.findIndex(\r\n                    (el) => el.rowId === change.rowId\r\n                );\r\n                const changeColumnIdx = columns.findIndex(\r\n                    (el) => el.columnId === change.columnId\r\n                );\r\n                if (change.type === 'flag') {\r\n                    // console.log(change.newCell.text);\r\n                }\r\n                if (change.type === 'text') {\r\n                    // console.log(change.newCell.text);\r\n                }\r\n                if (change.type === 'checkbox') {\r\n                    // console.log(change.previousCell.checked);\r\n                }\r\n                prevRows[changeRowIdx].cells[changeColumnIdx] = change.newCell;\r\n            });\r\n            return [...prevRows];\r\n        });\r\n    };\r\n\r\n    const reorderArray = <T extends unknown>(arr: T[], idxs: number[], to: number) => {\r\n        const movedElements: T[] = arr.filter((_: T, idx: number) => idxs.includes(idx));\r\n        to = Math.min(...idxs) < to ? to += 1 : to -= idxs.filter(idx => idx < to).length;\r\n        const leftSide: T[] = arr.filter((_: T, idx: number) => idx < to && !idxs.includes(idx));\r\n        const rightSide: T[] = arr.filter((_: T, idx: number) => idx >= to && !idxs.includes(idx));\r\n        return [...leftSide, ...movedElements, ...rightSide];\r\n    }\r\n\r\n    const handleCanReorderColumns = (targetColumnId: Id, columnIds: Id[], dropPosition: DropPosition): boolean => {\r\n        return true;\r\n    }\r\n\r\n    const handleCanReorderRows = (targetColumnId: Id, rowIds: Id[], dropPosition: DropPosition): boolean => {\r\n        // const rowIndex = state.rows.findIndex((row: Row) => row.rowId === targetColumnId);\r\n        // if (rowIndex === 0) return false;\r\n        return true;\r\n    }\r\n\r\n    const handleColumnsReorder = (targetColumnId: Id, columnIds: Id[], dropPosition: DropPosition) => {\r\n        const to = columns.findIndex((column: Column) => column.columnId === targetColumnId);\r\n        const columnIdxs = columnIds.map((id: Id, idx: number) => columns.findIndex((c: Column) => c.columnId === id));\r\n        setRows(rows.map(row => ({ ...row, cells: reorderArray(row.cells, columnIdxs, to) })));\r\n        setColumns(reorderArray(columns, columnIdxs, to));\r\n    }\r\n\r\n    const handleRowsReorder = (targetRowId: Id, rowIds: Id[], dropPosition: DropPosition) => {\r\n        setRows((prevRows) => {\r\n            const to = rows.findIndex(row => row.rowId === targetRowId);\r\n            const columnIdxs = rowIds.map(id => rows.findIndex(r => r.rowId === id));\r\n            return reorderArray(prevRows, columnIdxs, to);\r\n        });\r\n    }\r\n\r\n    const handleContextMenu = (selectedRowIds: Id[], selectedColIds: Id[], selectionMode: SelectionMode,\r\n        menuOptions: MenuOption[], selectedRanges: Array<CellLocation[]>\r\n    ): MenuOption[] => {\r\n        if (selectionMode === 'row') {\r\n            menuOptions = [\r\n                ...menuOptions,\r\n                {\r\n                    id: 'rowOption', label: 'Custom menu row option',\r\n                    handler: (selectedRowIds: Id[], selectedColIds: Id[], selectionMode: SelectionMode) => { }\r\n                },\r\n            ]\r\n        }\r\n        if (selectionMode === 'column') {\r\n            menuOptions = [\r\n                ...menuOptions,\r\n                {\r\n                    id: 'columnOption', label: 'Custom menu column option',\r\n                    handler: (selectedRowIds: Id[], selectedColIds: Id[], selectionMode: SelectionMode) => { }\r\n                },\r\n            ]\r\n        }\r\n        return [\r\n            ...menuOptions,\r\n            {\r\n                id: 'all', label: 'Custom menu option',\r\n                handler: (selectedRowIds: Id[], selectedColIds: Id[], selectionMode: SelectionMode) => { }\r\n            },\r\n        ];\r\n    }\r\n\r\n    const handleFocusLocationChanged = (location: CellLocation): void => { }\r\n\r\n    const handleFocusLocationChanging = (location: CellLocation): boolean => {\r\n        return true;\r\n    }\r\n\r\n    const Component = component;\r\n    return (\r\n        <>\r\n            <div className='test-grid-container' data-cy='div-scrollable-element' style={{\r\n                ...(!config.pinToBody && {\r\n                    height: config.fillViewport ? `calc(100vh - 30px)` : config.rgViewportHeight,\r\n                    width: config.fillViewport ? `calc(100vw - 45px)` : config.rgViewportWidth,\r\n                    margin: config.margin,\r\n                    overflow: 'auto',\r\n                }),\r\n                position: 'relative',\r\n                ...(config.flexRow && {\r\n                    display: 'flex',\r\n                    flexDirection: 'row'\r\n                }),\r\n            }}>\r\n                {config.additionalContent &&\r\n                    <div style={{ height: `${config.rgViewportHeight}px`, backgroundColor: '#fafff3' }}>\r\n                        <Logo width={config.rgViewportWidth} />\r\n                        <Logo width={config.rgViewportWidth} />\r\n                        <Logo width={config.rgViewportWidth} />\r\n                    </div>\r\n                }\r\n                {render && <Component\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    initialFocusLocation={config.initialFocusLocation}\r\n                    focusLocation={enableFrozenFocus ? config.focusLocation : undefined}\r\n                    // onCellsChanged={handleChangesTest2} // TODO This handler should be allowed\r\n                    onCellsChanged={handleChanges}\r\n                    onColumnResized={handleColumnResize}\r\n                    customCellTemplates={{ 'flag': new FlagCellTemplate() }}\r\n                    highlights={config.highlights}\r\n                    stickyLeftColumns={enableSticky ? config.stickyLeft : undefined}\r\n                    stickyRightColumns={enableSticky ? config.stickyRight : undefined}\r\n                    stickyTopRows={enableSticky ? config.stickyTop : undefined}\r\n                    stickyBottomRows={enableSticky ? config.stickyBottom : undefined}\r\n                    canReorderColumns={handleCanReorderColumns}\r\n                    canReorderRows={handleCanReorderRows}\r\n                    onColumnsReordered={handleColumnsReorder}\r\n                    onRowsReordered={handleRowsReorder}\r\n                    onContextMenu={handleContextMenu}\r\n                    onFocusLocationChanged={handleFocusLocationChanged}\r\n                    onFocusLocationChanging={handleFocusLocationChanging}\r\n                    enableRowSelection={enableColumnAndRowSelection || false}\r\n                    enableColumnSelection={enableColumnAndRowSelection || false}\r\n                    enableFullWidthHeader={config.enableFullWidthHeader || false}\r\n                    enableRangeSelection={config.enableRangeSelection}\r\n                    enableFillHandle={config.enableFillHandle}\r\n                    enableGroupIdRender={config.enableGroupIdRender}\r\n                    labels={config.labels}\r\n                    horizontalStickyBreakpoint={config.horizontalStickyBreakpoint}\r\n                    verticalStickyBreakpoint={config.verticalStickyBreakpoint}\r\n                    disableVirtualScrolling={config.disableVirtualScrolling}\r\n                />}\r\n                {config.additionalContent &&\r\n                    <div style={{ height: `${config.rgViewportHeight}px`, backgroundColor: '#fafff3' }}>\r\n                        <Logo width={config.rgViewportWidth} />\r\n                        <Logo width={config.rgViewportWidth} />\r\n                        <Logo width={config.rgViewportWidth} />\r\n                    </div>\r\n                }\r\n            </div>\r\n            {!config.fillViewport &&\r\n                <>\r\n                    <input type='text' data-cy='outer-input' />\r\n                    <Logo />\r\n                </>\r\n            }\r\n            <TestGridOptionsSelect></TestGridOptionsSelect>\r\n            <button onClick={() => {\r\n                setRender((render) => !render);\r\n            }}>Mount / Unmount</button>\r\n            {config.additionalContent &&\r\n                <>\r\n                    <h1 style={{ width: 3000 }}>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                    <h1>TEXT</h1> Test WITH IT\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst Logo: React.FC<{width?: number }> = ({ width }) => {\r\n    return <div style={{ display: 'flex', width: `${width}px` }}>\r\n        <h1 style={{ position: 'relative' }}>\r\n            ReactGrid\r\n        </h1>\r\n    </div >\r\n}\r\n\r\nexport const TestGridOptionsSelect: React.FC = () => {\r\n    const navigate = (eventValue: string) => {\r\n        window.location.pathname = eventValue;\r\n    }\r\n    return (\r\n        <form>\r\n            <select defaultValue={window.location.pathname}\r\n                onChange={(event) => navigate(event.target.value)}\r\n            >\r\n                <option value='/'>/</option>\r\n                <option value='/enableHeaders'>Enable headers</option>\r\n                <option value='/enableSticky'>Enable sticky</option>\r\n                <option value='/enableFrozenFocus'>Enable frozen focus</option>\r\n                <option value='/enablePinnedToBody'>Enable pinned to body</option>\r\n                <option value='/enableStickyPinnedToBody'>Enable sticky pinned to body</option>\r\n                <option value='/enableAdditionalContent'>Enable additional content</option>\r\n                <option value='/enableSymetric'>Enable symetric</option>\r\n                <option value='/enableFrozenFocus'>Enable frozen focus</option>\r\n                <option value='/enableResponsiveStickyTopLeft'>Enable responsive top and left sticky panes</option>\r\n                <option value='/enableResponsiveStickyBottomRight'>Enable responsive bottom and right sticky panes</option>\r\n                <option value='/enableResponsiveStickyPinnedToBodyTopLeft'>Enable responsive top and left sticky panes pinned to body</option>\r\n                <option value='/enableResponsiveStickyPinnedToBodyBottomRight'>Enable responsive bottom and right sticky panes pinned to body</option>\r\n                <option value='/enableSpannedCells'>Enable spanned cells</option>\r\n                <option value='/enableColumnAndRowSelection'>Enable column and row selection</option>\r\n                <option value='/enableColumnAndRowSelectionWithSticky'>Enable column and row selection with sticky</option>\r\n                <option value='/disableVirtualScrolling'>Disable virtual scrolling</option>\r\n            </select>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const withDiv = <T extends Record<string, unknown> & TestGridProps>(Component: React.ComponentType<T>): React.FC<T> => {\r\n    Component.displayName = 'WithDivWrapperTestGrid';\r\n    const wrappedComponent = ({ ...props }: TestGridProps) => {\r\n        return (\r\n            <div style={{ ...props.config.withDivComponentStyles }}>\r\n                <Component {...props as T} />\r\n            </div>\r\n        )\r\n    }\r\n    return wrappedComponent;\r\n}\r\n\r\nexport const ExtTestGrid = withDiv(TestGrid);\r\n","import React from 'react';\r\nimport { CellLocation, Highlight, TextLabels } from '../core';\r\n\r\n/**\r\n * All of the properties that cypress tests files can read\r\n */\r\nexport const config: TestConfig = {\r\n    pinToBody: false,\r\n    additionalContent: false,\r\n    flexRow: false,\r\n\r\n    rgViewportHeight: 600,\r\n    rgViewportWidth: 1150,\r\n    margin: '0',\r\n    enableRangeSelection: true,\r\n    enableFillHandle: true,\r\n    enableFullWidthHeader: false,\r\n    enableGroupIdRender: true,\r\n    disableVirtualScrolling: false,\r\n\r\n    cellHeight: 25,\r\n    cellWidth: 150,\r\n    minCellWidth: 40,\r\n    fillHandleWidth: 18,\r\n\r\n    columns: 30,\r\n    rows: 150,\r\n\r\n    lineWidth: 1,\r\n\r\n    stickyTop: 3,\r\n    stickyBottom: 3,\r\n    stickyLeft: 2,\r\n    stickyRight: 2,\r\n\r\n    focusLocation: { columnId: 'col-1', rowId: 'row-3' },\r\n    initialFocusLocation: { columnId: 'col-1', rowId: 'row-2' },\r\n\r\n    highlights: [\r\n        { columnId: 'col-1', rowId: 'row-1', borderColor: '#00ff00' },\r\n        { columnId: 'col-0', rowId: 'row-1', borderColor: 'red' },\r\n    ],\r\n\r\n    headerCells: [\r\n        { idx: 10, idy: 3 },\r\n        { idx: 10, idy: 4 },\r\n        { idx: 10, idy: 5 },\r\n        { idx: 10, idy: 24 },\r\n        { idx: 10, idy: 149 },\r\n        { idx: 11, idy: 3 },\r\n        { idx: 11, idy: 4 },\r\n        { idx: 11, idy: 5 },\r\n        { idx: 11, idy: 24 },\r\n        { idx: 11, idy: 149 },\r\n        { idx: 12, idy: 3 },\r\n        { idx: 12, idy: 4 },\r\n        { idx: 12, idy: 5 },\r\n        { idx: 12, idy: 24 },\r\n        { idx: 12, idy: 149 },\r\n        { idx: 29, idy: 3 },\r\n        { idx: 29, idy: 4 },\r\n        { idx: 29, idy: 5 },\r\n        { idx: 29, idy: 24 },\r\n        { idx: 29, idy: 149 },\r\n    ],\r\n\r\n    labels: {\r\n        copyLabel: 'Copy me!',\r\n        pasteLabel: 'Paste me!',\r\n        cutLabel: 'Cut me!',\r\n    },\r\n\r\n    horizontalStickyBreakpoint: 100,\r\n    verticalStickyBreakpoint: 100,\r\n\r\n    withDivComponentStyles: {\r\n        padding: 20,\r\n        position: 'relative',\r\n    },\r\n\r\n}\r\n\r\n/**\r\n * Optional properties to override main config\r\n */\r\nexport const enablePinnedToBodyConfig: TestConfig = {\r\n    ...config,\r\n    pinToBody: true,\r\n    stickyTop: 5,\r\n    stickyBottom: 5,\r\n    stickyLeft: 3,\r\n    stickyRight: 3,\r\n}\r\n\r\nexport const disabledInitialFocusLocationConfig: TestConfig = {\r\n    ...config,\r\n    initialFocusLocation: undefined\r\n}\r\n\r\nexport const enableAdditionalContentConfig: TestConfig = {\r\n    ...config,\r\n    additionalContent: true,\r\n}\r\n\r\nexport const enableAdditionalContentWithFlexRowConfig: TestConfig = {\r\n    ...config,\r\n    additionalContent: true,\r\n    flexRow: true,\r\n}\r\n\r\nexport const enableSymetric: TestConfig = {\r\n    ...config,\r\n    cellHeight: 50,\r\n    cellWidth: 50,\r\n    stickyTop: 2,\r\n    stickyBottom: 2,\r\n    stickyLeft: 2,\r\n    stickyRight: 2,\r\n}\r\n\r\nexport const disableVirtualScrolling: TestConfig = {\r\n    ...config,\r\n    disableVirtualScrolling: true,\r\n}\r\n\r\nexport const enableTopLeftResponsiveSticky: TestConfig = {\r\n    ...config,\r\n    fillViewport: true,\r\n    stickyTop: 13,\r\n    stickyLeft: 2,\r\n    stickyRight: 0,\r\n    stickyBottom: 0,\r\n    horizontalStickyBreakpoint: 45,\r\n    verticalStickyBreakpoint: 45,\r\n}\r\n\r\nexport const enableBottomRightResponsiveSticky: TestConfig = {\r\n    ...config,\r\n    fillViewport: true,\r\n    stickyTop: 0,\r\n    stickyLeft: 0,\r\n    stickyRight: 2,\r\n    stickyBottom: 13,\r\n    horizontalStickyBreakpoint: 45,\r\n    verticalStickyBreakpoint: 45,\r\n}\r\n\r\nexport const enableTopLeftResponsiveStickyPinnedToBody: TestConfig = {\r\n    ...config,\r\n    pinToBody: true,\r\n    fillViewport: true,\r\n    stickyTop: 13,\r\n    stickyLeft: 2,\r\n    stickyRight: 0,\r\n    stickyBottom: 0,\r\n    horizontalStickyBreakpoint: 45,\r\n    verticalStickyBreakpoint: 45,\r\n}\r\n\r\nexport const enableBottomRightResponsiveStickyPinnedToBody: TestConfig = {\r\n    ...config,\r\n    pinToBody: true,\r\n    fillViewport: true,\r\n    stickyTop: 0,\r\n    stickyLeft: 0,\r\n    stickyRight: 2,\r\n    stickyBottom: 13,\r\n    horizontalStickyBreakpoint: 45,\r\n    verticalStickyBreakpoint: 45,\r\n}\r\n\r\nexport const enableSpannedCells: TestConfig = {\r\n    ...config,\r\n    spannedCells: [\r\n        { idx: 1, idy: 1, rowspan: 2, colspan: 2 },\r\n        { idx: 2, idy: 3, colspan: 3 },\r\n        { idx: 6, idy: 5, rowspan: 5 },\r\n    ],\r\n    headerCells: [\r\n        { idx: 2, idy: 1 },\r\n        { idx: 1, idy: 2 },\r\n        { idx: 2, idy: 2 },\r\n        { idx: 3, idy: 3 },\r\n        { idx: 4, idy: 3 },\r\n        { idx: 6, idy: 5 },\r\n        { idx: 6, idy: 6 },\r\n        { idx: 6, idy: 7 },\r\n        { idx: 6, idy: 8 },\r\n        { idx: 6, idy: 9 },\r\n    ]\r\n}\r\n\r\nexport interface TestConfig {\r\n    pinToBody: boolean;\r\n    additionalContent: boolean;\r\n    flexRow: boolean;\r\n\r\n    rgViewportHeight: number;\r\n    rgViewportWidth: number;\r\n    margin: string;\r\n\r\n    cellHeight: number;\r\n    cellWidth: number;\r\n    minCellWidth: number;\r\n    fillHandleWidth: number;\r\n    enableRangeSelection: boolean;\r\n    enableFillHandle: boolean;\r\n    enableFullWidthHeader: boolean;\r\n    enableGroupIdRender: boolean;\r\n    disableVirtualScrolling: boolean;\r\n\r\n    columns: number;\r\n    rows: number;\r\n\r\n    lineWidth: number;\r\n\r\n    stickyTop: number;\r\n    stickyBottom: number;\r\n    stickyLeft: number;\r\n    stickyRight: number;\r\n\r\n    focusLocation: CellLocation;\r\n    initialFocusLocation?: CellLocation;\r\n    highlights: Highlight[];\r\n    spannedCells?: { idx: number, idy: number, colspan?: number, rowspan?: number }[];\r\n    headerCells?: { idx: number, idy: number }[];\r\n\r\n\r\n    labels: TextLabels;\r\n\r\n    horizontalStickyBreakpoint?: number;\r\n    verticalStickyBreakpoint?: number;\r\n\r\n    fillViewport?: boolean;\r\n    withDivComponentStyles: React.CSSProperties;\r\n\r\n}\r\n","import * as React from 'react'\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ExtTestGrid } from './test/TestGrid';\r\nimport { ReactGrid } from './lib/Components/ReactGrid';\r\nimport './test/theming-test.scss';\r\nimport {\r\n    config, enablePinnedToBodyConfig, disabledInitialFocusLocationConfig, enableAdditionalContentConfig,\r\n    enableAdditionalContentWithFlexRowConfig, enableSymetric, enableTopLeftResponsiveSticky, enableTopLeftResponsiveStickyPinnedToBody,\r\n    enableBottomRightResponsiveSticky, enableBottomRightResponsiveStickyPinnedToBody, enableSpannedCells, disableVirtualScrolling\r\n} from './test/testEnvConfig';\r\n\r\nlet component = <ExtTestGrid\r\n    component={ReactGrid}\r\n    config={config}\r\n/>;\r\nExtTestGrid.displayName = 'TestGridPro';\r\nswitch (window.location.pathname) {\r\n    case '/enableColumnAndRowSelection':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={config}\r\n            enableColumnAndRowSelection\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnableColumnAndRowSelection';\r\n        break;\r\n    case '/enableColumnAndRowSelectionWithSticky':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={config}\r\n            enableColumnAndRowSelection\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithStickyAndEnableColumnAndRowSelection';\r\n        break;\r\n    case '/enableSticky':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={config}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledSticky';\r\n        break;\r\n    case '/enableHeaders':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={disabledInitialFocusLocationConfig}\r\n            firstRowType={'header'}\r\n            firstColType={'header'}\r\n            cellType={'header'}\r\n            enableColumnAndRowSelection\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithHeaderRow';\r\n        break;\r\n    case '/enableFrozenFocus':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={config}\r\n            enableFrozenFocus\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledFrozenFocus';\r\n        break;\r\n    case '/enablePinnedToBody':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enablePinnedToBodyConfig}\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledPinnedToBody';\r\n        break;\r\n    case '/enableStickyPinnedToBody':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enablePinnedToBodyConfig}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledStickyPinnedToBody';\r\n        break;\r\n    case '/enableAdditionalContent':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={window.location.search.includes('flexRow=true')\r\n                ? enableAdditionalContentWithFlexRowConfig\r\n                : enableAdditionalContentConfig}\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledAdditionalContent';\r\n        break;\r\n    case '/enableSymetric':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableSymetric}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledSymetric';\r\n        break;\r\n    case '/enableResponsiveStickyTopLeft':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableTopLeftResponsiveSticky}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithEnabledResponsiveStickyTopLeft';\r\n        break;\r\n    case '/enableResponsiveStickyBottomRight':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableBottomRightResponsiveSticky}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridWithEnabledResponsiveStickyBottomRight';\r\n        break;\r\n    case '/enableResponsiveStickyPinnedToBodyTopLeft':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableTopLeftResponsiveStickyPinnedToBody}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithResponsiveStickyPinnedToBody';\r\n        break;\r\n    case '/enableResponsiveStickyPinnedToBodyBottomRight':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableBottomRightResponsiveStickyPinnedToBody}\r\n            enableSticky\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridProWithResponsiveStickyPinnedToBody';\r\n        break;\r\n    case '/enableSpannedCells':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={enableSpannedCells}\r\n            cellType={'header'}\r\n        />;\r\n        ExtTestGrid.displayName = 'TestGridWithSpannedCells';\r\n        break;\r\n    case '/disableVirtualScrolling':\r\n        component = <ExtTestGrid\r\n            component={ReactGrid}\r\n            config={disableVirtualScrolling}\r\n            cellType={'header'}\r\n        />;\r\n        ExtTestGrid.displayName = 'DisabledVirtualScrolling';\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nconst container = document.getElementById('root') as HTMLElement;\r\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\nconst root = createRoot(container!); // createRoot(container!) if you use TypeScript\r\nroot.render(<React.StrictMode>{component}</React.StrictMode>);"],"sourceRoot":""}